
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?

class frmTipoprotDados extends MFormAJAX
{
	protected $tipoprot;
	
	public function __construct($tipoprot)
	{
	        $this->tipoprot = $tipoprot;
		parent::__construct('Dados');
	        $this->registerMethod('onSelectImage');
		$this->registerMethod('ajax_btnAnoChegada');
		$this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/js/frmDadosPessoaisAjax.js'));
        	$this->EventHandler();
    	}


	public function CreateFields()
    	{
		global $MIOLO, $action;
		
		$check1 = false;
		$check2 = false;
		$check3 = false;		

		if ($this->tipoprot->diretor == 'S')
		{
			$check1 = true;
		}

		if ($this->tipoprot->gerente == 'S')
		{
			$check2 = true;
		}

		if ($this->tipoprot->coord == 'S')
		{
			$check3 = true;
		}

	        $options = array(
        	        new MOption('dir','S','Diretor ou Vice-diretor', $check1),
                	new MOption('ger','S','Gerente', $check2),
                	new MOption('coo','S','Coordenador', $check3),
                	);

		$fields = array(
			new MTextField('idtipoprot','','Código','5'),
			new MTextField('tipo','','Tipo protocolado','60','Máx 60 caracteres'),
            new MCheckBoxGroup('group','Precisa da aprovação do:',$options,'','vertical','css'),
				);
				
	
		$this->SetFields($fields);
		 $this->tipo->AddAttribute('maxlength',60);
		$this->SetFieldAttr('idtipoprot','readonly',true);

		$buttons = array(
			new MButton('btnSalvar','Editar'),
				);
		$this->SetButtons($buttons);
                $this->SetBackgroundColor('#eee');

		$validators=array(
			new MRequiredValidator('tipo'),
				);

		$this->SetData();
	}
	function SetData()
	{
		$data=$this->tipoprot;
		$this->SetFieldValue('idtipoprot',$data->idtipoprot);
		$this->SetFieldValue('tipo',$data->tipo);

	}
	public function btnSalvar_click()
	{
		$data=$this->GetData();
		$data->tipo = trim($data->tipo);
		$data->tipo = trim(implode(' ', preg_split('/\s+/', $data->tipo)));
		
		$this->tipoprot->SetData($data);
		$this->tipoprot->tipo = trim($this->tipoprot->tipo);
		$this->tipoprot->tipo = trim(implode(' ', preg_split('/\s+/', $this->tipoprot->tipo)));
		
		if ($data->group_dir == S)
		{
			$this->tipoprot->diretor = 'S';
		}else{ 	
			$this->tipoprot->diretor = 'N';
		}

		if ($data->group_ger == S)
		{
			$this->tipoprot->gerente = 'S';
		}else{ 	
			$this->tipoprot->gerente = 'N';
		}

		if ($data->group_coo == S)
		{
			$this->tipoprot->coord = 'S';	
		}else{ 	
			$this->tipoprot->coord = 'N';	
		}
		
		if ( strlen($data->tipo) == 0)
		{
			$this->AddError("Especifique um tipo valido.");
		}
		else {	

			try
			{
				$this->tipoprot->save();
				$this->AddInfo("Dados alterados com sucesso!");
			}
			catch (Exception $e)
			{
				$this->AddError($e->GetMessage());
			}
		}
	}	
} 
?>
