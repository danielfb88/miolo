
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
MIOLO::Import('modules::protocolo::controls::linktipoprot');
 
class frmTipoprotNew extends Form
{
	protected $tipoprot;
	
	public function __construct()
	{
	        global $MIOLO, $page, $item;
	        $this->tipoprot  = $MIOLO->GetBusiness('protocolo','tipoprot');
	    
	        parent::__construct('Incluir Tipo Protocolado');
	        $this->SetClose($MIOLO->GetActionURL('protocolo','tipoprot:find'));
	        $this->SetIcon($MIOLO->GetUI()->GetImage('protocolo','setor_mini.png'));
	}    
	 
	public function CreateFields()
	{
		global $MIOLO, $module;


	        $options = array(
        	        new MOption('dir','S','Diretor ou Vice-diretor', false),
                	new MOption('ger','S','Gerente', false),
                	new MOption('coo','S','Coordenador', false),
                	);
				
		$fields = array(	
	        	new TextField('tipo','','Tipo','60','Máx 60 caracteres'),
                new MCheckBoxGroup('group','Precisa da aprovação do:',$options,'','vertical','css'),
			);

	        $this->SetFields($fields);
	        $this->tipo->AddAttribute('maxlength',60);
				
        	$buttons = array(
		        new FormButton('btnNew','Salvar'),
			       );
			$this->SetButtons($buttons);

	        $validators = array();
	        
	        $this->EventHandler();
	}	

	function btnNew_click()
    {
        global $MIOLO,$page,$module;

		$data=$this->GetData();
		$data->tipo = trim($data->tipo);
		$data->tipo = trim(implode(' ', preg_split('/\s+/', $data->tipo)));
		
        $tipoprot=$MIOLO->GetBusiness($module,'tipoprot');
        
        $tipoprot->SetData($data);
        $tipoprot->tipo = trim(implode(' ', preg_split('/\s+/', $tipoprot->tipo)));
		
		if ($data->group_dir == S)
		{
			$tipoprot->diretor = 'S';				
		}else {
			$tipoprot->diretor = 'N';
		}

		if ($data->group_ger == S)
		{
			$tipoprot->gerente = 'S';				
		}else{ 	
			$tipoprot->gerente = 'N';
		}

		if ($data->group_coo == S)
		{
			$tipoprot->coord = 'S';	
		}
		else {
			$tipoprot->coord = 'N';
		}
		
		if ( strlen($tipoprot->tipo) == 0)
		{
			$this->AddError("Especifique um tipo valido.");
		}
		else {

                try
                {
                        $tipoprot->save();
                        $go=$MIOLO->GetActionURL('protocolo','main:tipoprot',$tipoprot->idtipoprot);
                        $page->redirect($go);

                }
                catch (Exception $e)
                {
                        $this->AddError($e->GetMessage());
                }
            }
                
	}
}
?>
