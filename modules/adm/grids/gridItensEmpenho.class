
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class gridItensEmpenho extends MGrid
{
    function __construct($idEmpenho)
    {
        global $MIOLO, $page, $action;
        $objEmpenho = $MIOLO->getBusiness('adm','empenho',$idEmpenho);
        $objEmpenho->retrieveAssociation('empenhado');
        $cf = new MCurrencyFormatter();
        foreach ($objEmpenho->empenhado as $empenhado)
        {
            $dados[$empenhado->idEmpenhado][0] = $empenhado->idEmpenhado;
			$empenhado->retrieveAssociation('itemreq');
			if($empenhado->itemreq){
				$empenhado->itemreq[0]->retrieveAssociation('material');
				$dados[$empenhado->idEmpenhado][1] = $empenhado->itemreq[0]->material->descricao;
				$dados[$empenhado->idEmpenhado][2] = $empenhado->quantidadeEmp;
				$dados[$empenhado->idEmpenhado][3] = $cf->formatWithSymbol($empenhado->valorEmp);
			}else{
				var_dump($empenhado->idEmpenhado);
				var_dump($empenhado->itemServExt->idServico);
				$empenhado->itemServExt->retrieveAssociation('servico');
				$dados[$empenhado->idEmpenhado][1] = $empenhado->itemServExt->servico->descricao;
				$dados[$empenhado->idEmpenhado][2] = $empenhado->quantidadeEmp;
				$dados[$empenhado->idEmpenhado][3] = $cf->formatWithSymbol($empenhado->valorEmp);
			}
        }
        $columns = array(
            new MGridColumn('idEmpenhado','left',false,'',false),
            new MGridColumn('Material','left',false,'64%'),
            new MGridColumn('Quantidade','center',true,'18%'),
            new MGridColumn('Valor','center',true,'18%'),
			
        );
        $this->SetFilter(false);
        parent::__construct($dados,$columns,$action,30);
    }
    function GenerateHeader()
    {
        return null;
    }
    function GenarateFooter()
    {
        return null;
    }
}

?>
