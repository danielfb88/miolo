
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
/**
 * Grid Licitacao
 * Grid de uso geral para selecionar licitacao
 * @package br.org.miolo.ufjf.adm.grids
 */
/**
 * Use Module Control
 */
global $MIOLO;
$MIOLO->Uses('controls/linklicitacao.class','adm');

class gridLicitacao extends MDataGrid
{

    /**
     * Constructor
     */
    function __construct($local)
    {
        global $MIOLO, $self;

        $linkLicitacao = new LinkLicitacao('linklicitacao','%0%');
        $columns = array(
            new MDataGridControl($linkLicitacao,'licitacao','Número','center', true,'10%'),
			new DataGridColumn('numpro','Processo','center', true,'20%'),
           	new DataGridColumn('numProcesso','Título do Processo','left', false,'60%'),
           	//new DataGridColumn('dataAbertura','Data Abertura','center', true,'0%'),
            new DataGridColumn('idTipoLicitacao','Tipo','center', true,'10%'),
            new DataGridColumn('status','Status','center', true,'30%')
         );

        $this->SetFilter(false);
        $filter = Form::GetFormValue('licitacao');
        $licitacao = empty($filter) ? '%' : $filter;

        $objLicitacao = $MIOLO->GetBusiness('adm','licitacao');
        $query = $objLicitacao->ListEmAndamento($local);
        
		if ($local != "Todos")
		{
        	$query = $objLicitacao->filtraLicitacoes($query,$local);
		}
		
		//var_dump($query2->result);
        
         $objLicitacao = $MIOLO->GetBusiness('adm','licitacao');
        $query = $objLicitacao->ListEmAndamentoComNumProcesso();
        
        //$query = $objLicitacao->ListById(strtoupper("'$licitacao%'"));
        $href_grid = $MIOLO->GetActionURL('adm',$self);

        parent::__construct($query, $columns, $href_grid,0);
        $this->AddFilterText('licitacao','Licitacao',$licitacao);
        $this->SetIndex(1);
		$this->SetRowMethod($this,'MyRowMethod');

    }

    // Método a ser executado antes de renderizar cada linha
    function MyRowMethod($i, $row, $actions, $columns)
    {
	       global $MIOLO, $self;	
       		
        if ($row[6] == '1')
            $tipo = "CONSUMO";
        else if ($row[6] == '2')
            $tipo = "SERV";
        else if ($row[6] == '3')
            $tipo = "LIVRO";       
        else if ($row[6] == '4')
            $tipo = "PERMANENTE";    
        
		$columns["idTipoLicitacao"]->control[$i]->setValue($tipo);


		// troca o numero do processo pelo titulo
	$objProcesso   = $MIOLO->GetBusiness('protocolo','processo'); //instancia a classe
	$dadosProcesso = $objProcesso->getByNumero($row[2]);  // seleciona o processo referente ao numero atual da linha da grid
	$columns["numProcesso"]->control[$i]->setValue( $dadosProcesso->titulo ); // troca os valores
	// fim 
    }   

}
