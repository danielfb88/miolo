
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
global $MIOLO;
class gridUoAlmoxarifadoSaidaMaterial extends MObjectGrid
{
    function __construct($objRequisicao)
    {
        global $MIOLO, $page, $action, $item;
        $this->setTitle('Lista de materias requisitados');
        $objRequisicao->retrieveAssociation('materialAlmoxarifado');
        $objEstoque = $MIOLO->getBusiness('adm','estoque');
        $cf = new MCurrencyFormatter();
        $quantAutorizada = Form::getFormValue('quantAutorizada');
        if ($objRequisicao->materialAlmoxarifado)
        {
            foreach ($objRequisicao->materialAlmoxarifado as $material)
            {
                $material->retrieveAssociation('material');
                $objEstoque->getById($item,$material->idMaterial);
                $material->quantDisponivel = $objEstoque->estoque;
                if ($quantAutorizada)
                {
                    $material->quantAutorizada = $quantAutorizada[$material->idMaterial];
                }
                else
                {
                    if ($material->quantPedida > $material->quantDisponivel)
                    {
                        $material->quantAutorizada = $material->quantDisponivel;
                    }
                    else
                    {
                        $material->quantAutorizada = $material->quantPedida;
                    }
                }
            }
        }
        $quantAutorizada = new MTextField('quantAutorizada[%0%]','%5%','','4');
        $columns = array(
            new MObjectGridColumn('idMaterial','IdMaterial','','','',false),
            new MObjectGridColumn('material->codmaterial','Código','center',false,'8%'),
            new MObjectGridColumn('material->descricao','Material','left',false,'59%'),
            new MObjectGridColumn('quantDisponivel','Quantidade Disponível','center',false,'11%'),
            new MObjectGridColumn('quantPedida','Quantidade Pedida','center',false,'11%'),
            new MObjectGridControl($quantAutorizada,'quantAutorizada','Quantidade Autorizada','center',false,'11%'),
        );
        $this->SetFilter(false);
        parent::__construct($objRequisicao->materialAlmoxarifado,$columns,$action,0);
        $this->setClose(null);
        $this->SetLinkType('hyperlink');
    }
    function GenerateFooter()
    {
        $footer[] = new Separator();
        return $footer;
    }
}
