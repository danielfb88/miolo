
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class BusinessAdmSolicitacao extends Business
{
    var $idLicitacao;
    var $item;
    var $data;
    var $quantidade;
    var $status;
    var $numero;
    var $valorUnitario;

    function __construct($data = null)
    {
       parent::__construct('sigaept',$data);
    }

    function OnCreate($data)
    {
        if (!empty($data))
        {
            $this->GetById($data);
        }
    }

    function GetById($data)
    {
        $this->idLicitacao = $data[0];
        $this->item = $data[1];
        $this->data = $data[2];
        $this->retrieve();
        return $this;
    }

    function GetQuantidadeByLicitacaoItemData($idLicitacao, $item, $data)
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('sum(quantidade)');
        $criteria->addCriteria('idLicitacao','=', $idLicitacao);
        $criteria->addCriteria('item','=', $item);
        $criteria->addCriteria('data','=', $data);
        $criteria->addCriteria('status','=', '1');
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }

    function GetQuantidadeByItemSolicitacao($idLicitacao, $solicitacao, $item, $status=null)
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('sum(quantidade)');
        $criteria->addCriteria('idLicitacao','=', $idLicitacao);
        $criteria->addCriteria('numero','=', "'$solicitacao'");
        $criteria->addCriteria('item','=', $item);
        if($status)
        {
            $criteria->addCriteria('status','=', "$status");
        }
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }

    function GetQuantidadeValorByItemSolicitacao($idLicitacao, $solicitacao, $item, $status=null)
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('quantidade');
        $criteria->AddColumnAttribute('valorUnitario');
        $criteria->addCriteria('idLicitacao','=', $idLicitacao);
        $criteria->addCriteria('numero','=', "'$solicitacao'");
        $criteria->addCriteria('item','=', $item);
        if($status)
        {
            $criteria->addCriteria('status','=', "$status");
        }
        $query = $criteria->retrieveAsQuery();
        return $query->result[0];
    }

    function GetStatusByItemSolicitacao($solicitacao, $item)
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('tabelaGeral.item2');
        $criteria->addCriteria('numero','=', "'$solicitacao'");
        $criteria->addCriteria('item','=', $item);
        $criteria->addCriteria('tabelaGeral.tabela','=', "'AD_SOLICITACAOSTATUS'");
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }

    function GetByItemNaoAtendido($idLicitacao, $item)
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('data');
        $criteria->addCriteria('idLicitacao','=', $idLicitacao);
        $criteria->addCriteria('item','=', $item);
        $criteria->addCriteria('status','=', '1');
        $query = $criteria->retrieveAsQuery();
        $array = array($idLicitacao, $item, $query->result[0][0]);
        $this->GetById($array);
        return $this;
    }

    function existeSolicitacaoNestaData($idLicitacao, $data)
    {
        $k = new MKrono();
        $data = $k->invertDate($data);
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('numero');
        $criteria->addCriteria('idLicitacao','=', $idLicitacao);
        $criteria->addCriteria('data','=', "'$data'");
        $criteria->addCriteria('status','=', '1');
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }

    function GetIdLicitacaoBySolicitacao($solicitacao)
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('idLicitacao');
        $criteria->addCriteria('numero','=', "'$solicitacao'");
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }
}
?>
