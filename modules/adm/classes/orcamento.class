
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
/**
Ricardo Silva Campos
*/
class BusinessAdmOrcamento extends Business
{
    public $idOrcamento;
    public $ano;
    public $dotacao;
    public $suplementacao;
    public $bloqueio;
    public $anulacao;
    public $pago;
    public $idPtr;
    public $idFonte;
    public $idRubrica;
    public $esfera;

    public $ptr;
    public $fonte;
    public $rubrica;


    function __construct($data = null)
    {
       parent::__construct('sigaept',$data);
    }
    

    function GetById($idOrcamento)
    {
        $this->idOrcamento = $idOrcamento;
        $this->retrieve();
        return $this;
    } 

    function GetByClassOrcamentaria($ano,$ptr,$fonte,$rubrica,$esfera,$ug)
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('idOrcamento');
        $criteria->addCriteria('ano','=', $ano);
        $criteria->addCriteria('idPtr','=', "'$ptr'");
        $criteria->addCriteria('idFonte','=', "'$fonte'");
        $criteria->addCriteria('idRubrica','=', "'$rubrica'");
        $criteria->addCriteria('esfera','=', "'$esfera'");
		$criteria->addCriteria('ug','=', "'$ug'");		
        $criteria->addOrderAttribute('idOrcamento');
        return $criteria->retrieveAsQuery();
    }

    function GetSaldo($idOrcamento=null)
    {
        if(!$idOrcamento)
        {
            $idOrcamento = $this->idOrcamento;
        }
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('(dotacao + suplementacao - bloqueio - anulacao - pago)', 'saldo');
        $criteria->addCriteria('idOrcamento','=', "$idOrcamento");
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }

    function listAll()
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('idOrcamento');
        $criteria->AddColumnAttribute('dotacao');
        $criteria->addOrderAttribute('idOrcamento');
        return $criteria->retrieveAsQuery();
    }

    function ListByAno($ano)
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('idPtr');
        $criteria->AddColumnAttribute('idFonte');
        $criteria->AddColumnAttribute('idRubrica');
        $criteria->AddColumnAttribute('esfera');
        $criteria->AddColumnAttribute('(dotacao + suplementacao)','disponivel');
        $criteria->AddColumnAttribute('(bloqueio + anulacao + pago)','empenhado');
        $criteria->AddColumnAttribute('(dotacao + suplementacao - bloqueio - anulacao - pago)', 'saldo');
        $criteria->addCriteria('ano','=', $ano);
        return $criteria->retrieveAsQuery();
    }

    function ListByClassOrcamentaria($ano,$ptr,$esfera,$fonte,$rubrica,$ug)
    {
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('idOrcamento');
        $criteria->AddColumnAttribute('ano','ano');
        $criteria->AddColumnAttribute('idPtr','ptr');
        $criteria->AddColumnAttribute('idFonte','fonte');
        $criteria->AddColumnAttribute('idRubrica');
        $criteria->AddColumnAttribute('esfera');
        $criteria->AddColumnAttribute("(dotacao + suplementacao - bloqueio - anulacao - pago)", 'valor');
		$criteria->AddColumnAttribute('ug');		
	
	
		if(is_numeric($ano) and (!empty($ano))){
			  $criteria->addCriteria('ano','=', $ano);
		}
		    
		$criteria->addCriteria('idPtr','LIKE', "'$ptr'");
        $criteria->addCriteria('idFonte','LIKE', "'$fonte'");
        $criteria->addCriteria('idRubrica','LIKE', "'$rubrica'");
        $criteria->addCriteria('esfera','LIKE', "'$esfera'");
		if($ug != '%')
        	$criteria->addCriteria('ug','LIKE', "'$ug'");
        $criteria->addOrderAttribute('idOrcamento');

        return $criteria->retrieveAsQuery();
    }
	
	 function GetDotacao($idOrcamento)
    {
     
        $criteria = $this->getCriteria();
        $criteria->AddColumnAttribute('(dotacao)');
        $criteria->addCriteria('idOrcamento','=', "$idOrcamento");
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }
	
	function TransfereOrc($IdOrc1,$IdOrc2,$ValOrc1,$ValOrc2,$Quant)
	{
	
	$sql = new sql('dotacao','ad_orcamento',"idorcamento = '$IdOrc1'");
	$dot = $ValOrc1-$Quant;
	 $this->Execute($sql->Update($dot));
	 $sql1 = new sql('dotacao','ad_orcamento',"idorcamento = '$IdOrc2'");
	 $dot1 = $ValOrc2+$Quant;
	 $this->Execute($sql1->Update($dot1));
	//var_dump($IdOrc1,$IdOrc2,$ValOrc1,$ValOrc2,$Quant);
	
	}
	
	function GetPtrById($idptr)
	{
		$sql = new sql('idptr,descricao','ad_ptr',"idptr = '$idptr'");
		
		$query = $this->Query($sql);

		return $query->result;
	}
	
	function GetFonteById($idfonte)
	{
		$sql = new sql('idfonte,descricao','ad_fonte',"idfonte = '$idfonte'");
		
		$query = $this->Query($sql);

		return $query->result;
	}
	
	function GetRubricaById($idrubrica)
	{
		$sql = new sql('idrubrica,descricao','ad_rubrica',"idrubrica = '$idrubrica'");
		
		$query = $this->Query($sql);

		return $query->result;
	}
}
?>
