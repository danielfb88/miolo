
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class BusinessAdmAbastecimento extends Business
{
    public $idAbastecimento;
    public $posto;
    public $cidadePosto;
    public $dataHoraAbastecimento;
    public $valorAbastecimento;
    public $quantidade;
    public $combustivel;
    
    function __construct($data = null)
    {
        parent::__construct('sigaept', $data);
    }

    function OnCreate($data)
    {
        if (empty($data))
        {
//            $this->initialize();
        }
        else
        {
            $this->GetById($data);
        }
    }

    function GetById($id)
    {
      $this->idAbastecimento = $id;
      $this->retrieve();
      return $this;
    }
    function setData($data)
    {
    	$this->posto = strToUpper($data->posto);
    	$this->enderecoPosto = strToUpper($data->enderecoPosto);
    	$this->cidadePosto = strToUpper($data->cidadePosto);
    	$this->dataHoraAbastecimento = $data->dataHoraAbastecimento;
    	$this->valorAbastecimento = $data->valorAbastecimento;
    	$this->quantidade = $data->quantidade;
    	$this->combustivel = $data->combustivel;
    	
    }
    function getByIdRequisicao($idReq)
    {
	$sql = new MSql("a.idabastecimento, a.posto,a.enderecoposto, a.cidadeposto, a.quantidade, a.valorabastecimento","ad_abastecimento a, ad_abastecimentorequisicao ar","a.idabastecimento = ar.idabastecimento AND ar.idrequisicao = '$idReq'");
	$query = $this->Query($sql);
	return $query;
    }
    function saveItemReqVeiculo($idRequisicao)
    {
	$idAbastecimento = $this->idAbastecimento;
	$sql = new sql('idabastecimento, idrequisicao','ad_abastecimentorequisicao');
	$args = array($idAbastecimento,$idRequisicao);
	$cmd = array(); 
	$cmd[] = $sql->Insert($args);
	$this->Execute($cmd);
    }
    function Delete($id)
    {
	$this->Desassociar($id);
        $values = array($id);
        $sql = new sql('','ad_abastecimento','idabastecimento = ?');    
        try
        {
            $this->Execute($sql->Delete($values));
            $ok = true;
        }
        catch(Exception $e)
        {                
            $ok = false;
        }    

        if ($ok)
        {
            $this->Log(OP_DEL,"idabastecimento = $id");
        }

        return $ok;
      }
      function Desassociar($id)
      {

	$values = array($id);
        $sql = new sql('','ad_abastecimentorequisicao','idabastecimento = ?');    
        try
        {
            $this->Execute($sql->Delete($values));
            $ok = true;
        }
        catch(Exception $e)
        {                
            $ok = false;
        }    

        if ($ok)
        {
            $this->Log(OP_DEL,"idabastecimentorequisicao = $id");
        }

        return $ok;
      }

}
?>
