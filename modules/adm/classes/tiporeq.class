
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?

class BusinessAdmTipoReq extends Business
{
	public $idTipoReq;
	public $descricao;
	public $uos;

	public $rubricas;

	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}

    function OnCreate($data)
    {
        if (empty($data))
        {

        }
        else
        {
            $this->GetById($data);
        }
    }

	function GetById($id)
	{
		$this->idTipoReq = $id;
		$this->retrieve();
		return $this;
	}

	function ListAll()
	{
        $criteria =  $this->getCriteria();
        return $criteria->retrieveAsQuery();
	}

	function ListByDescricao($desc)
	{
		$desc = strtoupper($desc);
		$criteria =  $this->getCriteria();
		$criteria->addCriteria('upper(descricao)','LIKE', "'%$desc%'");
		$criteria->addOrderAttribute('descricao');
		return $criteria->retrieveAsQuery();
	}

/* Gevã Schaefer Pereira Martins - 28/02/05 */
	function ListByUo()
	{
	   $sql = new sql("t.idtiporeq, t.descricao","ad_tiporeq t, ad_orcamentointerno oi, ad_uo uo","t.idrubrica = oi.idrubrica and oi.iduo = uo.iduo and uo.iduo = '1'");  
       $query = $this->Query($sql);
	   return $query;
	}
	
	function GetTiposByUoRubrica($uo, $rubrica, $dataInicial, $dataFinal)
	{
		$dataInicial = substr($this->_db->CharToTimestamp($dataInicial .= " 00:00:00"),1);
		$dataFinal = substr($this->_db->CharToTimestamp($dataFinal .= " 23:59:59"),1);

		$sql = new sql('distinct(t.descricao)', 'ad_tiporeq t, ad_requisicao r, ad_requisita e', "(r.tiporequisicao = t.idtiporeq) and (iduoreq = ?) and (r.datahorareq >= $dataInicial) and (r.datahorareq <= $dataFinal) and (r.tiporequisicao = e.idtiporeq) and (r.iduoreq = e.iduo) and (e.idrubrica = ?)");
		$query = $this->Query($sql, array($uo, $rubrica));
		

		return $query->result;
	}

	function selectionAll($source)
	{
	   $selection; $i = 0; $a; $b; $i = 0;
		foreach ($source->result as $chave => $valor)
	   {
	      $a[$i] = $valor[0];
	      $b[$i++] = $valor[1];
	   }
	   return $selection = array_combine($a,$b);	   
	}
}
?>
