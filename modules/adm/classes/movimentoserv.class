
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class BusinessAdmMovimentoServ extends Business
{
	var $idMovimento;
	var $tipoMovimento;
	var $dataMovimento;
	var $quantidade;
	var $valorTotal;
	var $idRequisicao;
	var $idItemNota;
	var $idMovimentoRef;

	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}
	
    function getById($id)
	{
		$this->idMovimento = $id;
		$this->retrieve();
		return $this;
	}

	function GetQuantidadeByRequisicaoIdEmpenhado($idRequisicao, $idEmpenhado)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('sum(quantidade)');
		$criteria->addCriteria('itemNota.idEmpenhado', '=', "$idEmpenhado");
		$criteria->addCriteria('idRequisicao', '=', "$idRequisicao");
		$criteria->addCriteria('tipoMovimento','in', "('1','5')");
		$criteria->addCriteria('idMovimentoRef','is', "null");
		$query = $criteria->retrieveAsQuery();
		return $query->result[0][0];
	}

	function GetByIdItemNotaNaoEstornado($idItemNota)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('idMovimento');
		$criteria->addCriteria('idItemNota', '=', "$idItemNota");
		$criteria->addCriteria('idMovimentoRef','is', "null");
		$query = $criteria->retrieveAsQuery();
		$this->idMovimento = $query->result[0][0];
		$this->retrieve();
		return $this;
	}

	function GetByRequisicaoItemNotaTipo($requisicao,$idItemNota=null,$tipo=null)
	{
		$criteria = $this->getCriteria();
		$criteria->addCriteria('idRequisicao','=', "$requisicao");
		if($idItemNota)
		{
			$criteria->addCriteria('idItemNota','=', "$idItemNota");
		}
		if($tipo)
		{
			$criteria->addCriteria('tipoMovimento','in', "$tipo");
		}
		$criteria->addCriteria('idMovimentoRef','IS', "null");
		return $criteria->retrieveAsQuery();
	}
}
?>
