
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class BusinessAdmExecuta extends Business
{
	public $idTipoReq;
	public $idUo;
	public $idRubrica;
	public $ano;

	public $tipoReq;
	public $uo;
	public $rubrica;

	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}

	function GetById($idTipoReq,$idUo,$ano=null)
	{
		if(!$ano)
		{
			/*Removida a referencia

		$anoReferencia = Date('Y');
			$sql = new MSql('anoref','ad_controle');
			$ano = $this->Query($sql)->result[0][0];
			*/

		$ano = Date('Y');
		
		}
		$this->idTipoReq = $idTipoReq;
    	$this->idUo = $idUo;  
        $this->ano = $ano;
		$this->retrieve();
		return $this;
	}

	function ListByUo($idUo)
	{
        $criteria =  $this->getCriteria();
		$criteria->addColumnAttribute('idTipoReq');
		$criteria->addColumnAttribute('tipoReq.descricao');
		$criteria->addCriteria('idUo','=', $idUo);
        return $criteria->retrieveAsQuery();
	}
	
	function jaExiste($idtiporeq,$iduo)
	{
	    $criteria = $this->getCriteria();
	    $criteria->addCriteria('idTipoReq','=', $idtiporeq);
	    $criteria->addCriteria('idUo','=', "$iduo");
	    return $criteria->retrieveAsQuery()->result;
	}
	
	function preencheMultPorIdUo($iduo)
	{
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('idUo','=', "$iduo");
        $cursor = $criteria->retrieveAsCursor();
       
        while($requisita = $cursor->getObject())
        {
           $v[] = array($requisita->tipoReq->descricao);           
        }
        return $v;
	}
	
	function deleteByIdUo($iduo)
	{
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('idUo','=', "$iduo");
        $cursor = $criteria->retrieveAsCursor();
        
        while($requisita = $cursor->getObject())
        {
           $requisita->delete();
        }
	}
	
	function getAlmoxarifados()
	{
	    $criteria =  $this->getCriteria();
	    $criteria->addColumnAttribute('idUo');
        $criteria->addCriteria('idtiporeq','=', '8');
        return $criteria->retrieveAsQuery();
	}
}	
?>
