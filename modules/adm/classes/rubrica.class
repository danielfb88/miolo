
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?

class BusinessAdmRubrica extends Business
{
    public $idRubrica;
    public $descricao;
    public $tipoReqs;
 
    function __construct($data = null)
    {
        parent::__construct('sigaept',$data);
    }
	
    function OnCreate($data)
    {
        if (!empty($data))
        {
            $this->GetById($data);
        }
    }

    function GetById($id)
    {
        $this->idRubrica = $id;
        $this->retrieve();
        return $this;
    }
	
    function getTipoReqs()
    {
        $this->retrieveAssociation('tipoReqs');
        if ($this->tipoReqs != NULL)
        {
            if (!is_array($this->tipoReqs))
            {
                $this->tipoReqs = array($this->tipoReqs);  
            }
        }
    }

    function deleteTipoReq($id)
    {
        $tipoReq = $this->getTipoReq($id);
        $this->deleteAssociation('tipoReqs',$tipoReq);
    }

    function getTipoReq($id)
    {
        if ( $this->tipoReqs != NULL )
        {
            $this->retrieveAssociation('tipoReqs');
            if ($this->tipoReqs != NULL)
            {
                foreach ( $this->tipoReqs as $t )
                {
                    if ( $t->idTipoReq == $id )
                    {
                        return $t;
                    }
                }
            }
        }
    }

    function ListById($id)
    {
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('idRubrica','LIKE', "'%$id%'");
        $criteria->addOrderAttribute('idRubrica');
        return $criteria->retrieveAsQuery();
    }

    function ListByDescricao($descricao)
    {
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('descricao','ILIKE', "'%$descricao%'");
        $criteria->addOrderAttribute('idRubrica');
        return $criteria->retrieveAsQuery();
    }

    function GetDescricao()
    {
        $this->idRubrica = $id;
        return $this->descricao;
    }

    function ListAll()
    {
        $criteria =  $this->getCriteria();
        $criteria->AddColumnAttribute('idRubrica');
        $criteria->AddColumnAttribute('descricao');
        $criteria->addOrderAttribute('descricao');
        return $criteria->retrieveAsQuery();
    }

    function ListRubricasDoOrcamentoInterno()
    {
        $criteria =  $this->getCriteria();
        $criteria->AddColumnAttribute('rubricasDoOrcamento.idRubrica');
        $criteria->AddColumnAttribute('descricao');
        $criteria->addCriteria('rubricasDoOrcamento.ano','=', date("Y"));
        $criteria->addOrderAttribute('descricao');
        $criteria->setDistinct(true);
        return $criteria->retrieveAsQuery();
    }

    function findByCodigo($codigo)
    {
	$busca = "select count(*) as total from ad_rubrica where idrubrica = '$codigo'";					
	return pg_fetch_result( pg_query($busca) ,0, 'total' );
    }

    function findByTipoReq($idRubrica,$idTipoReq)
    {
	$busca = "select count(*) as total from ad_reqrubrica where idrubrica = '$idRubrica' and idtiporeq = '$idTipoReq'";
	return pg_fetch_result( pg_query($busca) ,0, 'total' );
    }
}
?>
