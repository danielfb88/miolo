
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class BusinessAdmServico extends Business
{
    var $idServico;
    var $descricao;
    var $codServico;
    var $idelemento;
    var $idsubelemento;
    var $ativo;
    
    var $elemento;
    var $subelemento;

    function BusinessAdmServico($data=null)
    {
        $this->Business('sigaept',$data);
    }

    function GetById($id)
    {
        $this->idServico = $id;
        $this->retrieve();
    }
      
    function GetByCod($id)
    {
        $this->codServico = $id;
        $criteria = $this->GetCriteria();
        $criteria->AddCriteria('codServico','=',$this->codServico);
        return $this->retrieveFromCriteria($criteria);
    }

    function ListByIdElemento($idelemento)
    {
        $criteria = $this->GetCriteria();
        $criteria->AddCriteria('idelemento',' = ','?');
        $query = $criteria->retrieveAsQuery($idelemento);
        return $query;
    }
    
    function ListSubElementos()
    {
        $criteria = $this->GetCriteria();
        $criteria->AddColumnAttribute('subelemento.idSubElemento');
        $criteria->AddColumnAttribute('subelemento.idElemento');
        $criteria->AddColumnAttribute('subelemento.descricao');
        $criteria->AddGroupAttribute('subelemento.idElemento');
        $criteria->AddGroupAttribute('subelemento.idSubElemento');
        $criteria->AddGroupAttribute('subelemento.descricao');
        $query = $criteria->retrieveAsQuery();
        return $query;
    }
       
    function ListAll()
    {
        $criteria = $this->GetCriteria();
        $criteria->AddOrderAttribute('idelemento');
        $criteria->AddOrderAttribute('idsubelemento');
        $criteria->AddOrderAttribute('codmaterial');    
        $query = $criteria->retrieveAsQuery();
        return $query;
    }

    function SetIdElemento($idelemento)
    {
        $this->idelemento = $idelemento;
    }
    
    function SetIdSubElemento($idsubelemento)
    {
        $this->idsubelemento = $idsubelemento;
    }
    
    function ListByDescricao($descricao)
    {
        $criteria = $this->GetCriteria();
        $cc = new CriteriaCondition();
        $cc->addCriteria($criteria->getCriteria('descricao','like', "'%$descricao%'"));
        if(is_numeric($descricao))
        	$cc->addOrCriteria($criteria->getCriteria('codServico','=', $descricao));
        $criteria->AddOrderAttribute('descricao'); 
        $criteria->addCriteria($cc);
        $query = $criteria->retrieveAsQuery();
        return $query;
    }

    function jaFoiEmpenhado()
    {
        $itemreqservext = $this->_miolo->getBusiness('adm','itemservext');
        $criteria = $itemreqservext->GetCriteria();
        $criteria->addColumnAttribute('idServico');
        $criteria->addColumnAttribute('empenhado.idLicitacao');
        $criteria->addColumnAttribute('empenhado.item');
        $criteria->addCriteria('idServico','=',$this->idServico);
        $query = $criteria->retrieveAsQuery();
        return $query;
    }
    
	//Retorna quantidade de registros com idelemento e idsubelemento iguais
    function findBySubID($idelemento, $idsubelemento)
	{
		$busca = "select count(*) as total from ad_subelemento where idelemento = $idelemento and idsubelemento = $idsubelemento";					
		return pg_fetch_result( pg_query($busca) ,0, 'total' );
	}
	
	//Retorna quantidade de registros com codigos iguais
	function findByCodigo($codServico)
	{
		$busca = "select count(*) as total from ad_servico where codservico = $codServico";					
		return pg_fetch_result( pg_query($busca) ,0, 'total' );
	}
}
?>
