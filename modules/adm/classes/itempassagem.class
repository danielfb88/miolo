
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class BusinessAdmItemPassagem extends Business
{
	public $idRequisicao;
	public $idPessoa;
    public $tipoTransporte;
	public $motivo;
	public $bilhete; //N. do Voo
	public $bilhete2; //N. do Bilhete
    public $notaFiscal;
    public $dataNotaFiscal;
	public $valorReal;
	public $ocorrencias;
	public $conceito;
	public $obs;
	public $idEmpenho;
	public $valorEstimado;
	public $idMunicipioOrigem;
	public $idMunicipioDestino;
    public $dataHoraPassagem;
    public $idEmpresaPassagem;
    public $classe;
	public $emailRequisitante;
	public $codLocalizador;

	public $pessoa;
	public $municipioOrigem;
	public $municipioDestino;
    public $liquidacao;
	public $requisicao;
	public $empenho;

	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}

    function OnCreate($data)
    {
        if (empty($data))
        {
//            $this->initialize();
        }
        else
        {
            $this->GetById($data);
        }
    }

	function GetById($id)
	{
		$this->idRequisicao = $id;
		$this->retrieve();
		return $this;
	}
	
	/* @return: id dos itens prontos para serem liquidados */
	function GetItensParaLiquidar($idEmpenho)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('idRequisicao');
		$criteria->addCriteria('notaFiscal','is not','null');
		$criteria->addCriteria('dataNotaFiscal','is not','null');
		$criteria->addCriteria('valorReal','is not','null');
//		$criteria->addCriteria('idLiquidacao','is','null');
		$criteria->addCriteria('idEmpenho','=', $idEmpenho);
		$criteria->addCriteria('requisicao.status','=',"'E'");
        $criteria->addOrderAttribute('idRequisicao');
        return $criteria->retrieveAsQuery()->result;
	}

	/* @return: valor total para liquidacao */
	function GetValorTotalPorEmpenho($idEmpenho)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('sum(valorReal)');
		$criteria->addCriteria('notaFiscal','is not','null');
		$criteria->addCriteria('dataNotaFiscal','is not','null');
		$criteria->addCriteria('valorReal','is not','null');
//		$criteria->addCriteria('idLiquidacao','is','null');
		$criteria->addCriteria('idEmpenho','=', $idEmpenho);
		$criteria->addCriteria('requisicao.status','=',"'E'");
        return $criteria->retrieveAsQuery()->result[0][0];
	}

	function RepDespesasPassagem($idempresapassagem, $inicio, $fim, $idtipotransporte)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('requisicao.idRequisicao');
		$criteria->addColumnAttribute('requisicao.uoRequisitante.sigla');
		$criteria->addColumnAttribute('pessoa.nome');
		$criteria->addColumnAttribute('dataHoraPassagem', 'dataHoraPassagem');
		$criteria->addColumnAttribute('notaFiscal');
		$criteria->addColumnAttribute('valorReal');
		$criteria->addCriteria('idEmpresaPassagem','=',"$idempresapassagem");
		$criteria->addCriteria("to_date(dataNotaFiscal,'DD/MM/YYYY')", '>=', "to_date('$inicio','DD/MM/YYYY')");
		$criteria->addCriteria("to_date(dataNotaFiscal,'DD/MM/YYYY')", '<=', "to_date('$fim','DD/MM/YYYY')");
		$criteria->addCriteria('tipoTransporte','=',"'$idtipotransporte'");
		return $criteria->retrieveAsQuery();
	}

}
?>
