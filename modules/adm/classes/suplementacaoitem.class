
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class BusinessAdmSuplementacaoItem extends Business
{
    public $idSuplementacaoItem;
    public $idLicitacao;
    public $item;
    public $data;
    public $quantidadeSuplementar;
    public $valorUnitSuplementar;
    public $idSuplementacaoItemRef;
    public $idRequisicao;
	

    function __construct($data = null)
    {
       parent::__construct('sigaept',$data);
    }
    
    function OnCreate($data)
    {
        if (!empty($data))
        {
            $this->GetById($data);
        }
    }

    function GetById($idSuplementacaoItem)
    {
        $this->idSuplementacaoItem = $idSuplementacaoItem;
        $this->retrieve();
        return $this;
    } 

    function GetTotalByIdLicitacaoItem($idLicitacao,$item)
    {
        $criteria = $this->getCriteria();
        $criteria->addColumnAttribute('sum(quantidadeSuplementar*valorUnitSuplementar)');
        $criteria->addCriteria("item = '$item'");
        $criteria->addCriteria('idLicitacao','=', "$idLicitacao");
        $criteria->addCriteria('idSuplementacaoItemRef','is', "null");
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }

    function GetQuantidadeByIdLicitacaoItem($idLicitacao,$item)
    {
        $criteria = $this->getCriteria();
        $criteria->addColumnAttribute('sum(quantidadeSuplementar)');
        $criteria->addCriteria('item','=', "'$item'");
        $criteria->addCriteria('idLicitacao','=', $idLicitacao);
        $criteria->addCriteria('idSuplementacaoItemRef','is', "null");
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }

    function GetUltimaSuplementacaoByIdLicitacaoItem($idLicitacao,$item)
    {
        $criteria = $this->getCriteria();
        $criteria->addColumnAttribute('max(idSuplementacaoItem)');
        $criteria->addCriteria('item','=', "'$item'");
        $criteria->addCriteria('idLicitacao','=', $idLicitacao);
        $criteria->addCriteria('idSuplementacaoItemRef','is', "null");
        $query = $criteria->retrieveAsQuery();
        $this->idSuplementacaoItem = $query->result[0][0];
        $this->retrieve();
        return $this;
    }

    function GetValorTotal($idLicitacao,$statusRequisicao,$statusItensReq)
    {
        $criteria = $this->getCriteria();
        $criteria->addColumnAttribute('licitacao.idTipoLicitacao');
        $criteria->addCriteria('licitacao.idLicitacao','=', "$idLicitacao");
        $query0 = $criteria->retrieveAsQuery();

        $criteria = $this->getCriteria();
        $criteria->addColumnAttribute('sum(quantidadeSuplementar*valorUnitSuplementar)');
        $criteria->addCriteria('idLicitacao','=', "$idLicitacao");
        $criteria->addCriteria('idSuplementacaoItemRef','is', "null");
        if($query0->result[0][0] == '1')//COMPRA
        {
            $criteria->addCriteria('requisicao.materialCompra.status', 'in', "$statusItensReq");
        }
        elseif($query0->result[0][0] == '2')//SERVICO
        {
            $criteria->addCriteria('requisicao.servext.status', 'in', "$statusItensReq");
        }
            $criteria->addCriteria('requisicao.status', 'in', "$statusRequisicao");
        $query = $criteria->retrieveAsQuery();
        return $query->result[0][0];
    }
}
?>
