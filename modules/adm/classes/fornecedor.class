
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class BusinessAdmFornecedor extends Business
{
	var $idFornecedor;
	var $contaCorrente;
	var $idInstituicao;
	var $idPessoa;
	var $idBanco;
	var $idAgencia;

	var $instituicao;
    var $fornecedor;
    var $licitacao;

	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	    $this->fmtStrToDate =  "TO_DATE(?,'DD/MM/YYYY')";
        $this->fmtStrToNumber =  "TO_NUMBER(?)";

	}

    function OnCreate($data)
    {
        if (!empty($data))
        {
            $this->GetById($data);
        }
    }

    function getById($id)
    {
        $this->idFornecedor = $id;
        $this->retrieve();
        return $this;
    }
    
    function getByIdInstituicao($id)
    {
        $this->idInstituicao = $id;
        $this->retrieve();
        return $this;
    }


	function getTotalDeLicitacoesVencidas($id)
	{
        $ano = date("Y");
        $data = "01/01/".$ano;
		$sql = new sql();        
		$sql->SetColumns('sum(m.preco)');
		$sql->SetTables('ad_mapalicitacao m, ad_licitacao l');
		$sql->SetWhere("l.idlicitacao = m.idlicitacao and m.vencedor = '1' and l.idModalidadeLicitacao = '1' and m.idfornecedor = ? and l.dataabertura > TO_DATE('$data','DD/MM/YYYY')");
		$query = $this->ObjQuery($sql->Select($id));
		return $query->result[0][0];
	}

	function getTotalDeLicitacoesVencidasPorMaterial($idFornecedor,$idLicitacao)
	{
        $ano = date("Y");
        $data = "01/01/".$ano;
		$sql = new sql();        
		$sql->SetColumns('count(i.idrequisicao)');
		$sql->SetTables('ad_itemreq i, ad_mapalicitacao m, ad_licitacao l');
		$sql->SetWhere("l.idlicitacao = m.idlicitacao and i.idlicitacao = m.idlicitacao and i.item = m.item and m.vencedor = '1' and m.idfornecedor = ? and l.dataabertura > TO_DATE('$data','DD/MM/YYYY') and i.idmaterial in (select idmaterial from ad_itemreq where idlicitacao = ?)");
        $args = array($idFornecedor,$idLicitacao);
		$query = $this->ObjQuery($sql->Select($args));
		return $query->result[0][0];
	}
    
    function getInstituicao()
    {
        $this->retrieveAssociation('instituicao');
        return $this->instituicao;
    }

	function GetByDocumentoOuNome($documento='%')
	{
		global $MIOLO;

		$criteria =  $this->getCriteria();
		$criteria->addCriteria('instituicao.cgc','=', "'$documento'");
		$criteria->addOrCriteria('instituicao.nome','LIKE', "'%$documento%'");
		$cursor = $criteria->retrieveAsCursor();
		$obj = $cursor->getObject();
		if($obj->idFornecedor == null)
		{
			$pessoa = $MIOLO->GetBusiness('common', 'pessoa');
			$p = $pessoa->GetByCpf($documento);
			if($p->idpessoa == null)
			{
				$p = $pessoa->ListByNome($documento);
				return $p->result[0];
			}
			else
			{
				return array($p->idpessoa, $p->nome);
			}
		}
		else
		{
			return array($obj->idFornecedor, $obj->instituicao->nome);
		}
	}
	
	function ListAll(){
		$criteria =  $this->getCriteria();
		$criteria->AddColumnAttribute('idFornecedor');
		$criteria->addColumnAttribute('instituicao.nome','instit');
		$criteria->addColumnAttribute('instituicao.cgc','cgc');
		$criteria->addOrderAttribute('instituicao.nome');
		return $criteria->retrieveAsQuery();
    }
	function ListByNomeOuDocumento($param){
		$criteria =  $this->getCriteria();
		
		$criteria->AddColumnAttribute('idFornecedor');
		$criteria->addColumnAttribute('instituicao.nome','instit');
		$criteria->addColumnAttribute('instituicao.cgc','cgc');
		$criteria->addOrderAttribute('instituicao.nome');
		$criteria->addCriteria('instituicao.nome','LIKE',"'%".strtoupper($param)."%'");
		$criteria->addOrCriteria('instituicao.cgc','=', "'$param'");
		return $criteria->retrieveAsQuery();
    }
	

}
?>
