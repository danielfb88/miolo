
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class BusinessAdmNovoMaterial extends Business
{
	var $idNovoMaterial;
	var $descricao;
	var $codmaterial;
	var $descricaodetalhada;
	var $status;
    var $idUoReq;
    var $idUsuario;
    var $telefone;
    var $dataPedido;
    var $precoestimado;
	var $ativo;
	
    function __construct($data=NULL)
    {
		$this->Business('sigaept',$data);
	}
	function getById($id)
	{
		$this->idNovoMaterial = $id;
		$this->retrieve();
	}
    function OnCreate($id)
    {
        if ($id) $this->getById($id);
    }
    function setStatus($status)
    {
        $this->status = $status;
    }
    function setUsuario($idUsuario)
    {
        $this->idUsuario = $idUsuario;
    }
    function setUoReq($idUoReq)
    {
        $this->idUoReq = $idUoReq;
    }
    function setCodMaterial($codmaterial)
    {
        $this->codmaterial = $codmaterial;
    }
	
	//Lista novos materiais para executores com permissão adm_cadastromaterial (todas as UOs)
	function listConsultaForExec($descricao,$numero,$status, $data, $idUoReq, $ativo)
    {
        global $MIOLO;
        $idUsuario = $MIOLO->getLogin()->idkey;
        $criteria =  $this->getCriteria();
	$criteria->addColumnAttribute('idNovoMaterial');
        $criteria->addColumnAttribute('descricao');
        $criteria->addColumnAttribute('status');
        $criteria->addColumnAttribute('codmaterial');
	$criteria->addColumnAttribute('datapedido');
	$criteria->addColumnAttribute('descricaodetalhada');
        $criteria->addCriteria('descricao','LIKE',$descricao);

	if($numero and is_numeric($numero))
	    $criteria->addCriteria('idnovomaterial','=',$numero);

		$criteria->addCriteria('status','=',"'$status'");

	if($data)
		$criteria->addCriteria('datapedido','=',"'$data'");

		if ($idUoReq != NULL){ //caso não especificar UO mostra de todas
			$criteria->addCriteria('idUoReq','=', $idUoReq); //filtra para a UO especificada

		}
		if ($ativo == 'N'){
			$criteria->addCriteria('ativo','=',"'N'");	
		}
		else {
			$criteria->addCriteria('ativo','=',"'S'");
			$cc = new CriteriaCondition();
			$cc->addCriteria($criteria->getCriteria('status','=', "'1'"));
			$cc->addOrCriteria($criteria->getCriteria('status','=', "'2'"));
			$criteria->addCriteria($cc);
		}
        $criteria->addOrderAttribute('status');
        $criteria->addOrderAttribute('idNovoMaterial');
        return $criteria->retrieveAsQuery();
    }
	
	//Lista novos materiais para gestores (apenas as UOs onde é gestor)
	//Deve ser especificada uma UO
	function listConsultaForGestor($descricao,$numero,$status, $data, $idUoReq)
    {
        global $MIOLO;
        $idUsuario = $MIOLO->getLogin()->idkey;
        $criteria =  $this->getCriteria();
		$criteria->addColumnAttribute('idNovoMaterial');
        $criteria->addColumnAttribute('descricao');
        $criteria->addColumnAttribute('status');
        $criteria->addColumnAttribute('codmaterial');
		$criteria->addColumnAttribute('datapedido');
		$criteria->addColumnAttribute('descricaodetalhada');
        $criteria->addCriteria('descricao','LIKE',$descricao);


	if($numero and is_numeric($numero))
		$criteria->addCriteria('idnovomaterial','=',$numero);

	$criteria->addCriteria('status','=',"'$status'");

	if($data)
		$criteria->addCriteria('datapedido','=',"'$data'");

	if($idUoReq)
	    $criteria->addCriteria('idUoReq','=', $idUoReq);

	$criteria->addCriteria('ativo','=',"'S'");
        $cc = new CriteriaCondition();
        $cc->addCriteria($criteria->getCriteria('status','=', "'1'"));
        $cc->addOrCriteria($criteria->getCriteria('status','=', "'2'"));
        $criteria->addCriteria($cc);
        $criteria->addOrderAttribute('status');
        $criteria->addOrderAttribute('idNovoMaterial');
        return $criteria->retrieveAsQuery();
    }
	
	//Lista novos materiais para requisitantes (apenas requisicções feitas por ele)
	function listConsulta($descricao,$numero,$status, $data, $idUsuario)
    {
        global $MIOLO;
        $idUsuario = $MIOLO->getLogin()->idkey;
        $criteria =  $this->getCriteria();
		$criteria->addColumnAttribute('idNovoMaterial');
        $criteria->addColumnAttribute('descricao');
        $criteria->addColumnAttribute('status');
        $criteria->addColumnAttribute('codmaterial');
		$criteria->addColumnAttribute('datapedido');
		$criteria->addColumnAttribute('descricaodetalhada');
        $criteria->addCriteria('descricao','LIKE',$descricao);

	if($numero and is_numeric($numero))
	      $criteria->addCriteria('idnovomaterial','=',$numero);
	
	$criteria->addCriteria('status','LIKE',"'$status'");
 	
	if($data)
	    $criteria->addCriteria('datapedido','=',"'$data'");
        
	$criteria->addCriteria('idUsuario','=',$idUsuario);
		$criteria->addCriteria('ativo','=',"'S'");
        $criteria->addOrderAttribute('status');
        $criteria->addOrderAttribute('idNovoMaterial');
        return $criteria->retrieveAsQuery();
    }
	
	 function listByDescricao($descricao)
    {
        global $MIOLO;
        $idUsuario = $MIOLO->getLogin()->idkey;
        $criteria =  $this->getCriteria();
		$criteria->addColumnAttribute('idNovoMaterial');
        $criteria->addColumnAttribute('descricao');
        $criteria->addColumnAttribute('status');
        $criteria->addColumnAttribute('codmaterial');
		$criteria->addColumnAttribute('datapedido');
		$criteria->addColumnAttribute('descricaodetalhada');
        $criteria->addCriteria('descricao','LIKE',$descricao);
        $criteria->addCriteria('idUsuario','=', $idUsuario);
		$criteria->addCriteria('ativo','=',"'S'");
        $criteria->addOrderAttribute('status');
        $criteria->addOrderAttribute('idNovoMaterial');
        return $criteria->retrieveAsQuery();
    }
    function listByDescricaoForAdmin($descricao)
    {
        global $MIOLO;
        $idUsuario = $MIOLO->getLogin()->idkey;
        $criteria =  $this->getCriteria();
        $criteria->addColumnAttribute('idNovoMaterial');
        $criteria->addColumnAttribute('descricao');
        $criteria->addColumnAttribute('status');
        $criteria->addColumnAttribute('codmaterial');
		$criteria->addColumnAttribute('datapedido');
		$criteria->addColumnAttribute('descricaodetalhada');
        $criteria->addCriteria('descricao','LIKE',$descricao);
		$criteria->addCriteria('idUsuario','=',$idUsuario);
		$criteria->addCriteria('ativo','=',"'S'");
        $cc = new CriteriaCondition();
        $cc->addCriteria($criteria->getCriteria('status','=', "'1'"));
        $cc->addOrCriteria($criteria->getCriteria('status','=', "'2'"));
        $criteria->addCriteria($cc);
        $criteria->addOrderAttribute('status');
        $criteria->addOrderAttribute('idNovoMaterial');
        return $criteria->retrieveAsQuery();
    }
	
	
}
?>
