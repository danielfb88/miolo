
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class BusinessAdmVeiculo extends Business
{
	public $placa;
	public $tipoVeiculo;
	public $renavam;
    public $chassis;
    public $marca;
    public $modelo;
    public $anoFab;
    public $anoMod;
    public $capacidade;
	public $combustivel;

	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}

    function OnCreate($data)
    {
        if (empty($data))
        {

        }
        else
        {
            $this->GetById($data);
        }
    }

	function GetById($id)
	{
		$this->placa = $id;
		$this->retrieve();
		return $this;
	}

	function ListAll()
	{
        $criteria =  $this->getCriteria();
        return $criteria->retrieveAsQuery();
	}

	function ListByPlaca($placa)
	{
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('placa','LIKE', "$placa");
        $criteria->addOrderAttribute('placa');
        return $criteria->retrieveAsQuery();
	}

	
	function listMarcaByPlaca($idPlaca)
	{
		$criteria = $this->getCriteria();		
		$criteria->addColumnAttribute('marca');
		$criteria->addCriteria('placa','LIKE', "'$idPlaca'");		
		return $criteria->retrieveAsQuery();	
	}	
	
	function listModeloByPlaca($idPlaca)
	{
		$criteria = $this->getCriteria();		
		$criteria->addColumnAttribute('modelo');
		$criteria->addCriteria('placa','LIKE', "'$idPlaca'");		
		return $criteria->retrieveAsQuery();	
	}

	function ListByModelo($modelo)
	{
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('modelo','LIKE', "$modelo");
        $criteria->addOrderAttribute('modelo');
        return $criteria->retrieveAsQuery();
	}
	
	function ListByMarcaModPlaca($param)
	{
		$sql = new sql('placa, marca, modelo, renavam, cm_instituicao.instituicao', 'ad_veiculo INNER JOIN cm_instituicao ON (ad_veiculo.idinstituicao = cm_instituicao.idinstituicao)', "upper(marca||modelo||placa||renavam) LIKE $param");
		$sql->SetOrderBy('modelo');
		$query = $this->Query($sql);		
		return $query;
/*		
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('upper(marca||modelo||placa||renavam)','LIKE', "$param");
        $criteria->addOrderAttribute('modelo');
        return $criteria->retrieveAsQuery();*/
	}	

	function listAllByData($dataInicio,$dataFim)
	{
		global $MIOLO;
        $item = $MIOLO->getBusiness('adm','itemveiculo');    
		$criteria =  $item->getCriteria();
		
		$criteria->addColumnAttribute('placa');
		$criteria->addColumnAttribute('odometroSaida');
		$criteria->addColumnAttribute('odometroChegada');
		
		$criteria->addColumnAttribute('dataHoraSaidaGaragem');
		$criteria->addColumnAttribute('dataHoraChegadaGaragem');
		
		$criteria->addCriteria('dataHoraSaidaGaragem','>=',"to_date('$dataInicio','DD/MM/YYYY')");
        $criteria->addCriteria('dataHoraChegadaGaragem','<=',"to_date('$dataFim','DD/MM/YYYY')");
        
        $criteria->addOrderAttribute('placa');
		
		return $criteria->retrieveAsQuery();	
	}
	
	function GetByRenavam($renavam)
	{
		$criteria =  $this->getCriteria();
        $criteria->addCriteria('renavam','LIKE', "'$renavam'");        
		return $criteria->retrieveAsQuery();
	}
	
	
	function GetByChassis($chassis)
	{
		$criteria =  $this->getCriteria();
        $criteria->addCriteria('chassis','LIKE', "'$chassis'");
		return $criteria->retrieveAsQuery();
	}	
	
	function listByInstituicao($idInstituicao)
	{
		$sql = new sql('placa, marca, modelo, renavam, cm_instituicao.instituicao', 'ad_veiculo INNER JOIN cm_instituicao ON (ad_veiculo.idinstituicao = cm_instituicao.idinstituicao)', "ad_veiculo.idinstituicao = $idInstituicao");
		$sql->SetOrderBy('modelo');
		$query = $this->Query($sql);		
		return $query;
	}
}
?>
