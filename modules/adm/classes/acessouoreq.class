
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class BusinessAdmAcessouoreq extends Business
{
	public $idUo;
	public $idUsuario;

	public $uo;
	public $usuario;

	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}
    
	function listUoByUsuario($idUsuario)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('idUo');
		$criteria->addCriteria('idUsuario','=',$idUsuario);
		$query = $criteria->retrieveAsQuery();
		return ( !$query->eof() ) ? $query : FALSE;
	}
    
	function isRequisitanteDaGaragem($idUsuario)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('idUo');
        $criteria->addCriteria('idUo','=','1');
		$criteria->addCriteria('idUsuario','=',$idUsuario);
		$query = $criteria->retrieveAsQuery();
		return ( !$query->eof() ) ? $query : FALSE;
	}

	function isRequisitanteDaUo($idUsuario,$idUo)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('idUo');
		$criteria->addCriteria('idUo','=',$idUo);
		$criteria->addCriteria('idUsuario','=',$idUsuario);
		$query = $criteria->retrieveAsQuery();
		return ( !$query->eof() ) ? $query : FALSE;
	}

	function listUoSaldoPublicoByUsuario($idUsuario)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('idUo');
		$criteria->addColumnAttribute('uo.sigla');
        $criteria->addOrderAttribute('uo.sigla');
		$criteria->addCriteria('idUsuario','=',$idUsuario);
		$criteria->addCriteria('uo.saldoPublico','=',"'S'");
		$query = $criteria->retrieveAsQuery();
		return ( !$query->eof() ) ? $query : FALSE;
	}
    
}
?>
