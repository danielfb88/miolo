
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class repRelatorioFechamento extends PDFReport
{
	var $img;
	var $timestamp;
	var $objItemReq;

	function __construct()
	{
		global $MIOLO, $module, $page, $context, $self, $action, $perms;

		$dataInicio = Form::GetFormValue('dataInicio');
		$dataFim = Form::GetFormValue('dataFim');
		
		parent::__construct(NULL, NULL, 55);
	    
		$ui = $MIOLO->GetUI();
        $this->img = $ui->GetImageSrc('logo_siga.png',$module);

		$this->SetOption('showLines',0);
		$this->timestamp = date('d/m/Y G:i');

		
		$this->pdf->ezStartPageNumbers(580, 800, 10, 'rigth', 'Página: {PAGENUM}/{TOTALPAGENUM}');
		$this->pdf->ezSetMargins(50, 30, 30, 30);
		$this->SetOption('fontSize',8);

		$objItemReq = $MIOLO->GetBusiness($module,'itemreq');
		$objItemServExt = $MIOLO->GetBusiness($module,'itemservext');		
		$objUo = $MIOLO->GetBusiness($module,'uo');
		
		$queryUos = $objUo->listFechamento($dataInicio,$dataFim);
		
		$totalLic = 0;
		$totalEmp = 0;
		$totalALic = 0;
			
		$totalLic = floatval(str_replace(',','.',$totalLic));
		$totalEmp = floatval(str_replace(',','.',$totalEmp));
		$totalALic = floatval(str_replace(',','.',$totalALic));
		
		foreach ($queryUos->result as $rs)
		{
			//Material Consumo
			$queryConsumo = $objItemReq->listValorByUoRubrica($dataInicio, $dataFim,'1',$rs[0]);
			
			
			
				if ($queryConsumo->result){
				
					foreach ($queryConsumo->result as $row)
					{
						//calcula Valor Licitado
						$row[2] = floatval(str_replace(',','.',$row[2]));
						$row[3] = floatval(str_replace(',','.',$row[3]));
						$row[2] = $row[2] * $row[3];
						
						//calcula Valor Empenhado
						$row[4] = floatval(str_replace(',','.',$row[4]));
						$row[5] = floatval(str_replace(',','.',$row[5]));
						$row[4] = $row[4] * $row[5];

						//calcula Valor a Licitar
						$row[6] = $row[2] - $row[4];
			
						$valLic +=$row[2];
						$valEmp +=$row[4];
						$valALic +=$row[6];
	
					}//
					
					$totalLic += $valLic;
					$totalEmp += $valEmp;
					$totalALic += $valALic;
					
					$valLic = 'R$ '.number_format(str_replace(',','.',$valLic),2,',','.');
					$valEmp = 'R$ '.number_format(str_replace(',','.',$valEmp),2,',','.');
					$valALic = 'R$ '.number_format(str_replace(',','.',$valALic),2,',','.');
					
					
					
					$data[] = array ($row[0],  
									 'Consumo',
									 $valLic,
									 $valEmp,
									 $valALic
								 );				
				}
			//Material Permanente
			$queryPermanente = $objItemReq->listValorByUoRubrica($dataInicio, $dataFim,'4',$rs[0]);
				if ($queryPermanente->result){
					foreach ($queryPermanente->result as $row)
					{
						//calcula Valor Licitado
						$row[2] = floatval(str_replace(',','.',$row[2]));
						$row[3] = floatval(str_replace(',','.',$row[3]));
						$row[2] = $row[2] * $row[3];
						
						//calcula Valor Empenhado
						$row[4] = floatval(str_replace(',','.',$row[4]));
						$row[5] = floatval(str_replace(',','.',$row[5]));
						$row[4] = $row[4] * $row[5];
						
						//calcula Valor a Licitar
						$row[6] = $row[2] - $row[4];
						
						$valLic +=$row[2];
						$valEmp +=$row[4];
						$valALic +=$row[6];
						

					}//
					
					$totalLic += $valLic;
					$totalEmp += $valEmp;
					$totalALic += $valALic;
					
					$valLic = 'R$ '.number_format(str_replace(',','.',$valLic),2,',','.');
					$valEmp = 'R$ '.number_format(str_replace(',','.',$valEmp),2,',','.');
					$valALic = 'R$ '.number_format(str_replace(',','.',$valALic),2,',','.');
						
						$data[] = array ($row[0],  
										 'Permanente',
										 $valLic,
										 $valEmp,
										 $valALic
								 );				
				}
			//Serviço Externo
			$queryServico = $objItemServExt->listValorByUoRubrica($dataInicio, $dataFim,'2',$rs[0]);
				if($queryServico->result){
					foreach ($queryServico->result as $row)
					{
						//calcula Valor Licitado
						$row[2] = floatval(str_replace(',','.',$row[2]));
						$row[3] = floatval(str_replace(',','.',$row[3]));
						$row[2] = $row[2] * $row[3];
						
						//calcula Valor Empenhado
						$row[4] = floatval(str_replace(',','.',$row[4]));
						$row[5] = floatval(str_replace(',','.',$row[5]));
						$row[4] = $row[4] * $row[5];
						
						//calcula Valor a Licitar
						$row[6] = $row[2] - $row[4];
						
						$valLic +=$row[2];
						$valEmp +=$row[4];
						$valALic +=$row[6];
						
						
					}//
					$totalLic += $valLic;
					$totalEmp += $valEmp;
					$totalALic += $valALic;
						
					$valLic = 'R$ '.number_format(str_replace(',','.',$valLic),2,',','.');
					$valEmp = 'R$ '.number_format(str_replace(',','.',$valEmp),2,',','.');
					$valALic = 'R$ '.number_format(str_replace(',','.',$valALic),2,',','.');
						
					$data[] = array ($row[0],  
									 'Servico',
									 $valLic,
									 $valEmp,
									 $valALic
							 );				
			  }
			 
		}
		$totalLic = 'R$ '.number_format(str_replace(',','.',$totalLic),2,',','.');
		$totalEmp = 'R$ '.number_format(str_replace(',','.',$totalEmp),2,',','.');
		$totalALic = 'R$ '.number_format(str_replace(',','.',$totalALic),2,',','.');
		
		$data[] = array("",
						"Total:",
						$totalLic,
						$totalEmp,
						$totalALic); 
		

		if($data <> null){

			$total = 0;
				
			$columns = array(
				new PDFReportColumn('uo','<b>UO Requisitante</b>','center',true,25,true,null,true),
				new PDFReportColumn('idtipolicitacao','<b>Tipo Licitacao</b>','left',true,25,true,null,true),
				new PDFReportColumn('quantPedida','<b>Valor Licitado</b>','right',true,20,true,null,true),
				new PDFReportColumn('quantEmpenhada','<b>Valor Empenhado</b>','right',true,15,true,null,true),
				new PDFReportColumn('valorReal','<b>Valor a Licitar</b>','right',true,15,true,null,true),
			);

			$this->SetColumns($columns);

		}
		
		$this->GeneratePageHeader($nomeRestaurante, $dataInicio, $dataFim);
		$this->GeneratePageFooter();
		
		if ($data == NULL) 
		{
			$this->GenerateDataNULL();
		}
		else 
		{
			$this->GenerateData($data);		
			$this->GenerateResumoFinal($total);	
		}
		
	}

	function GeneratePageHeader($nomeRestaurante, $dataInicio, $dataFim)
	{
		global $MIOLO;

		$h = $this->pdf->getFontHeight(12);
		$this->pdf->ezImage($this->img,5,50,'none','left');

		$x00=$this->pdf->left;
		$hh = $this->pdf->getFontHeight(12);
		$this->pdf->addText($x00, 800, 12, $this->manager->getConf('instituicao.sigla')." - ".$this->manager->getConf('instituicao.nome'));
		$this->pdf->addText($x00, 800 - $hh, 12, $this->manager->getConf('theme.system'));

/*
		$this->pdf->addText(90,800,12,'UFJF - Universidade Federal de Juiz de Fora');
		$this->pdf->addText(90,800-$h,12,'CGCO - Centro de Gestão do Conhecimento Organizacional');
		$this->pdf->addText(90,800-$h-$h,12,'SIGA - Sistema Integrado de Gestão Acadêmica');
*/


		$this->pdf->addTextWrap(450, 800-$h-$h, 100, 10, $this->timestamp,'right');

		$this->pdf->addTextWrap(0,800-5*$h,600,11,'Relatório de Fechamento','center');
		$this->pdf->addTextWrap(0,800-6*$h,600,11,$nomeRestaurante.'Período de '.$dataInicio.' a '.$dataFim, 'center');

		$this->pdf->ezSetY(800-$h-$h-$h-$h-$h-$h-$h);
	}

	function GenerateResumoFinal($valorTotal)
	{
		global $MIOLO, $module, $page, $context, $self, $action, $perms;

		$this->pdf->SetStrokeColor(0,0,0); 
		$this->pdf->ezSetDy(-10);
    
		$this->pdf->line(370,$this->pdf->y,560,$this->pdf->y);
		$this->pdf->ezSetDy(-15);

		if($this->pdf->y < 160){
			$this->pdf->ezNewPage();
		}		

		$this->pdf->ezSetDy(-50);

		$data = date('d/m/Y');

		$this->pdf->ezSetDy(-50);

	}
	
	function GeneratePageFooter()
	{
		$x0 = $this->pdf->left;
        $x1 = $this->pdf->right;
        $footer = $this->pdf->openObject();
        $this->pdf->saveState();
        $this->pdf->SetStrokeColor(0, 0, 0);
        $this->pdf->line($x0, 28, $x1, 28);
        $this->pdf->addText($x0, 19, 9, $this->timestamp . ' - CGCO/DSI');
        $this->pdf->restoreState();
        $this->pdf->closeObject();
        $this->pdf->addObject($footer, 'all');    		

	}
	function GenerateDataNULL()
	{
		$this->pdf->ezSetDy(-12);
		$h = $this->pdf->getFontHeight(12);		
		$this->pdf->addTextWrap(0,800-12*$h,600,11,' NÃO FORAM ENCONTRADOS DADOS RELATIVOS À CONSULTA SOLICITADA ', 'center');
		
	}

	function GenerateData($data)
	{
		$this->pdf->ezSetDy(-12);
		$this->SetData($data);
		$this->rawdata = $this->GenerateTableData();
		$this->GenerateBody($this->rawdata);
	}

	function Generate()
	{
		$this->SetOutput();
		$this->Execute();
	}
}
