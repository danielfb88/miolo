
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class repEncLicitacao extends PDFReport
{
	var $img;
	var $timestamp;
	var $objLicitacao;

	function __construct($info)
	{
        global $MIOLO, $module, $page, $context, $self, $action, $perms;

        parent::__construct(NULL, NULL, 55);
        $ui = $MIOLO->GetUI();
		$this->img = $ui->GetImageSrc('logo_siga.png',$module); 
        //        $this->SetPDF(new ezPDFReport('2'));
        $this->timestamp = date('d/m/Y G:i');
        //        $this->SetTrigger('AfterNewPage','repMultiLevel2','AfterNewPage', $this);
        $this->pdf->ezStartPageNumbers(520, 800, 12, 'rigth', 'Página: {PAGENUM}');
        $this->pdf->ezSetMargins(110, 30, 30, 30);
        $this->GeneratePageHeader();
        $this->GeneratePageFooter();
		$this->SetOption('fontSize',9);

		$enc = Form::GetFormValue('enc');
		$legislacao = Form::GetFormValue('legislacao');
		$licitacao = $info['licitacao'];
		$this->objLicitacao = $MIOLO->GetBusiness($module,'licitacao');
		$result = $this->objLicitacao->GetByNumero($licitacao);
		$this->objLicitacao->GetById($result[0][0]);

		$data0 = $this->objLicitacao->RepEncLicitacao($licitacao, $this->objLicitacao->idTipoLicitacao);
		//$data0 = [0-uo.nome, 1-idelemento, 2-quantPedida, 3-preco, 4-item]
		$data = array();
		$k = -1;
		$cf = new MCurrencyFormatter();
		for($i = 0; $i < count($data0); $i++)
		{
			if( ($data0[$i][0] != $data0[$i-1][0]) or ($data0[$i][1] != $data0[$i-1][1]) )
			//(uo.nome dif) ou (idelemento dif)
			{
				$k++;
				$data[$k] = array($data0[$i][0], $data0[$i][1], $cf->toDecimal($data0[$i][3])*$data0[$i][2], $data0[$i][4]);
			}
			else
			{
				$data[$k] = array($data[$k][0], $data[$k][1], $cf->toDecimal($data[$k][2]) + $cf->toDecimal($data0[$i][3])*$data0[$i][2], $data[$k][3] . ',' . $data0[$i][4]);
			}
		}

		$this->pdf->ezText('ENC. Nº' . $enc,12);
		$this->pdf->ezText('ATIVIDADE: VIDE RELAÇÃO ABAIXO',12);
		$this->pdf->ezText('Coordenador(a) de Suprimentos',12);
		$this->pdf->ezText('',12);
		$this->pdf->ezText("   Encaminhamos o presente processo ".$this->objLicitacao->modalidade->descricao." nº $licitacao, que se acha devidamente formalizado e de acordo com a Legislação vigente.",12, array('justification'=>'full'));
		$this->pdf->ezText('',12);
		$this->pdf->ezText($legislacao,12);
		$this->pdf->ezText('',12);

		$soma = 0.0;
		for($k = 0; $k < count($data); $k++)
		{
			if($data[$k][0] != $data[$k-1][0])
			{
				//mostra nome da UO e lista de itens apenas se for diferente da anterior 
				//(caso contrario, é rubrica diferente)

				//preparando a lista de itens
				$itens = explode(',', $data[$k][3]); //transforma string em array
				$stringItens = '';
				for($i = 0; $i < count($itens); $i++)//stringItens será: 1, 3-4, 6-7-8-9-10, 12...
				{
					if(($itens[$i] == $itens[$i-1]+1) && ($i != 0))
					{
						$stringItens .= '-' . $itens[$i];
					}
					else
					{
						if($i == 0)
						{
							$stringItens .= $itens[$i];
						}
						else
						{
							$stringItens .= ', ' . $itens[$i];
						}
					}
				}
				$itens = explode(',', $stringItens);
				for($i = 0; $i < count($itens); $i++)//stringItens será: 1, 3-4, 6-10, 12...
				{
					$seqItens = explode('-', $itens[$i]);//array com a sequencia de itens (ex: 6-7-8-9-10)
					if(count($seqItens) > 1)//transforma (6-7-8-9-10) em (6-10)
					{
						$itens[$i] = $seqItens[0] . ' a ' . $seqItens[count($seqItens)-1];
					}
				}
				if( (count($itens) == 1) && (!strpos($itens[0], 'a')) )//transforma array em string
				{
					$stringItens = 'Item ';
				}
				else
				{
					$stringItens = 'Itens ';
				}
				for($i = 0; $i < count($itens); $i++)
				{
					$stringItens .= $itens[$i];
					if($i != count($itens)-1)
					{
						$stringItens .= ',';
					}
				}//lista de itens está ok

				$this->pdf->ezText("VERBA " . $data[$k][0] . " (" . $stringItens . ")",12);
			}
			$this->pdf->ezText("Elemento: " . $data[$k][1],12);
			$soma += $data[$k][2];
			$valor = number_format(str_replace(',','.',$data[$k][2]),2,',','.');
			$this->pdf->ezText("Despesas com este processo..............................................R$ " . $valor, 12);
			$this->pdf->ezText('',12);
		}

		$tg = $MIOLO->GetBusiness('common', 'tabelageral');
		$mes = $tg->GetByItem('MES', intval(date('m')));

		$soma = number_format(str_replace(',','.',$soma),2,',','.');
		$this->pdf->ezText("TOTAL..................................................................................R$ ".$soma,12);
		$this->pdf->ezText("",12);
		$this->pdf->ezText("Em ".date('d')." de ".$mes->item2." de ".date('Y'),12, array('justification'=>'center'));
		$this->pdf->ezText("",12);
		$this->pdf->ezText("",12);
		$this->pdf->ezText("Julieta M A Barra",12, array('justification'=>'center'));
		$this->pdf->ezText("Coordenadora de Suprimentos",12, array('justification'=>'center'));
		$this->pdf->ezText("",12);
		$this->pdf->ezText(str_repeat("-x",40).'-',12, array('justification'=>'justification'));
		$this->pdf->ezText("AO",12);
		$this->pdf->ezText("GERENTE DE ORÇAMENTO",12);
		$this->pdf->ezText("",12);
		$this->pdf->ezText("   Homologo e adjudico a licitação e solicito empenho e pagamento.",12);
		$this->pdf->ezText("",12);
		$this->pdf->ezText("Em ________ de ___________________ de ".date('Y'),12, array('justification'=>'center'));
		$this->pdf->ezText("",12);
		$this->pdf->ezText("Gerente do Setor de Execução Orçamentária",12, array('justification'=>'center'));
		

		$this->Execute();
	}

	function GeneratePageHeader()
	{
		$this->ano = Form::GetFormValue('ano');
		$x0 = $this->pdf->left-5;
		$x1 = $this->pdf->right-5;
		$h = $this->pdf->getFontHeight(12);
		$header = $this->pdf->openObject();
		$this->pdf->saveState();

		$x00=$this->pdf->left;
		$hh = $this->pdf->getFontHeight(12);
		$this->pdf->addText($x00, 800, 12, $this->manager->getConf('instituicao.sigla')." - ".$this->manager->getConf('instituicao.nome'));
		$this->pdf->addText($x00, 800 - $hh, 12, $this->manager->getConf('theme.system'));

		/*$this->pdf->addPngFromFile($this->img, $x0, 780, 50, 25);
		$this->pdf->addText($x0 + 60, 800, 12, 'UFJF - Universidade Federal de Juiz de Fora');
		$this->pdf->addText($x0 + 60, 800 - $h, 12, 'CGCO - Centro de Gestão do Conhecimento Organizacional');
		$this->pdf->addText($x0 + 60, 800 - $h - $h, 12, 'SIGA - Sistema Integrado de Gestão Acadêmica');
		*/
		$this->pdf->SetStrokeColor(0, 0, 0);
		$y = 800 - $h - $h - 5;
		$this->pdf->line($x0, $y, $x1 + 5, $y);
		$this->pdf->addText($x0, $y - 13, 12, "Relatório de Fechamento de Licitação");
		$this->pdf->line($x0, $y - 15, $x1 + 5, $y - 15);
		$this->pdf->restoreState();
		$this->pdf->closeObject();
		$this->pdf->addObject($header, 'all');
		$this->pdf->ezSetDy(+15);
	}

	function GeneratePageFooter()
	{
		$x0 = $this->pdf->left;
		$x1 = $this->pdf->right;
		$footer = $this->pdf->openObject();
		$this->pdf->saveState();
		$this->pdf->SetStrokeColor(0, 0, 0);
		$this->pdf->line($x0, 28, $x1, 28);
		$this->pdf->addText($x0, 19, 9, $this->timestamp . ' - CGCO/DSI');
		$this->pdf->restoreState();
		$this->pdf->closeObject();
		$this->pdf->addObject($footer, 'all');
	}
/*
	function GenerateData($data)
	{
		$this->pdf->ezSetDy(-5);
		$this->SetData($data);
		$this->rawdata = $this->GenerateTableData();
		$this->GenerateBody($this->rawdata);
	}

	function Generate()
	{
		$this->SetOutput();
		$this->Execute();
	}
*/
}
?>
