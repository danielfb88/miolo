
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmRubricaTipoReqs extends Form
{
    protected $objRubrica;
	
    function __construct($objRubrica)
    {
	$this->objRubrica = $objRubrica;
        $this->Form('Tipo Reqs.');
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO;
       
       $objTipoReq = $MIOLO->GetBusiness('adm','tiporeq');
       $tipoReqs = $objTipoReq->ListAll();
       $fields = array(
	           new MSelection('tipoReqs','','Tipo da Requisição',$tipoReqs->result),
	           $grid,
		);
        $this->SetFields($fields);
		
	$buttons = array(
        	   new FormButton('btnSalvar', 'Salvar')
            	);
	$this->SetButtons($buttons);

	$validators = array(
		   new RequiredValidator('idRubrica'),
		   new RequiredValidator('descricao'),
		);
	$this->SetValidators($validators);
	
    }
    public function btnSalvar_click()
    {	
	// Caso não seja selecionado nenhum tipo de requisição
	if($this->GetFormValue('tipoReqs') == NULL) 
	{
		$this->addError('Selecione um Tipo da Requisição');	
	}
	// Caso já exista a tipo de requisição cadastrado
	elseif($this->objRubrica->findByTipoReq( $this->objRubrica->idRubrica , $this->GetFormValue('tipoReqs') )) 
	{
		$this->addError('Tipo de Requisição já cadastrada');
	}
	else
	{
		global $MIOLO;
		$idTipoReq = $this->GetFormValue('tipoReqs');
		$objReqRubrica = $MIOLO->GetBusiness('adm','reqrubrica');
		$objReqRubrica->idRubrica = $this->objRubrica->idRubrica;
		$objReqRubrica->idTipoReq = $idTipoReq;

		try
		{
			$objReqRubrica->save();
			$objReqRubrica->Log(OP_UPD,"Dados de rubrica modificados");
			$go = $MIOLO->GetActionURL($module,$self,$this->objRubrica->idRubrica,array('form'=>'tiporeqs'));
			$this->page->Redirect($go);
		}
		catch (Exception $e)
		{
			$this->addError($e->getMessage());
		}
	}
    }
 }
?>
