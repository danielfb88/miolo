
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmUoAlmoxarifadoOrdemEntregaRequisicoesFind extends MForm
{
    protected $uoalmoxarifado;
    protected $ordem;
    function __construct($objUo)
    {
		global $MIOLO, $module;
        $this->uoalmoxarifado = $objUo;
        parent::__construct('Pesquisa de ordens de entrega');
		$this->SetClose($MIOLO->GetActionURL($module,'main'));
        $this->EventHandler();
    }
    function CreateFields()
    {
        $this->uoalmoxarifado->retrieveAssociation('ordemEntrega');
        $grid = $this->manager->getUI()->getGrid('adm','gridUoAlmoxarifadoOrdemEntregaRequisicoesFind',$this->uoalmoxarifado);
        $busca = new MThemeBox('&nbsp;&nbsp;Buscar por', array(new MLabel('Número da OE:'), new MTextField('numero',Form::getFormValue('numero'),'',8), new MLabel('ou N. da Requisição:'),new MTextField('idRequisicao',Form::getFormValue('idRequisicao'),'',8),new MButton('btnPost','Buscar'),new MLabel('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'),new MLink('lista', 'Listar Não Impressas', MIOLO::getCurrentURL(), 'Listar Não Impressas')));
        $lista = new MThemeBox('&nbsp;&nbsp;Listar por período', array(new MLabel('Início:'),new MCalendarField('dataInicio',Form::getFormValue('dataInicio'),'',10),new MLabel('Fim:'),new MCalendarField('dataFim',Form::getFormValue('dataFim'),'',10),new MButton('btnPost','Listar')));
        $fields = array(
            $busca,
            $lista,
			$grid,
		);
        $this->setFields($fields);
        $this->defaultButton = false;
    }
    function GenerateReportFooter($report)
    {
        $x0 = $report->pdf->left;
        $x1 = $report->pdf->right;
        $footer = $report->pdf->openObject();
        $report->pdf->saveState();
        $report->pdf->SetStrokeColor(0, 0, 0);
        $h = $report->pdf->getFontHeight(9);
        $report->pdf->addText($x0+0, 180, 9, 'VISTO');
        $report->pdf->addText($x0+180, 180, 9, "SR. COORDENADOR DA COSUP");
        $report->pdf->addText($x0+180, 180-(1*$h), 9, "PROVINDECIAMOS A ENTREGA DO");
        $report->pdf->addText($x0+180, 180-(2*$h), 9, "MATERIAL ESPECIFICADO ACIMA");
        $report->pdf->addText($x0+360, 180, 9, "DECLARO PELO PRESENTE ");
        $report->pdf->addText($x0+360, 180-(1*$h), 9, "DOCUMENTO DE RESPONSABILIDADE,");
        $report->pdf->addText($x0+360, 180-(2*$h), 9, "QUE RECEBI DO SETOR DE ESTOQUE");
        $report->pdf->addText($x0+360, 180-(3*$h), 9, "DA UFJF, O MATERIAL ACIMA"); 
        $report->pdf->addText($x0+360, 180-(4*$h), 9, "ESPECIFICADO");
        $report->pdf->addText($x0+0, 120, 9, date('d/m/Y'));
        $report->pdf->addText($x0+180, 120, 9, date('d/m/Y'));
        $report->pdf->line($x0+0, 60, $x0+160, 60);
        $report->pdf->line($x0+180, 60, $x0+340, 60);
        $report->pdf->line($x0+360, 60, $x0+520, 60);
        $report->pdf->addText($x0+0, 50, 9, 'JULIETA M. BARRA');
        $report->pdf->addText($x0+180, 50, 9, 'PAULO SÉRGIO F. GOMES');
        $report->pdf->addText($x0+360, 50, 9, 'FUNCIONÁRIO RESPONSÁVEL');
        $report->pdf->addText($x0+0, 40, 9, 'COORDENADOR DE SUPRIMENTOS');
        $report->pdf->addText($x0+180, 40, 9, 'GERENTE DE ESTOQUE / UFJF');
        $report->pdf->restoreState();
        $report->pdf->closeObject();
        $report->pdf->addObject($footer, 'add');
    }
    function GeneratePageHeader($report,$ordem)
    {
        $ordem->movimento[0]->retrieveAssociation('requisicao');
        $ordem->movimento[0]->requisicao->getUoRequisitante();
        //$orcamento = $ordem->movimento[0]->requisicao->uoRequisitante->getOrcamentoByRubrica($ordem->movimento[0]->requisicao->getRubrica());
        $x0 = $report->pdf->left-5;
        $x1 = $report->pdf->right-5;
        $h = $report->pdf->getFontHeight(10);
        $header = $report->pdf->openObject();
        $report->pdf->saveState();
        $report->pdf->addPngFromFile($this->manager->getUI()->GetImageSrc('logonet.png','adm'), $x0, 760, 50, 50);
        $alturaCabecalho = $x0 + 70;
        $ano = date('Y');
        $report->pdf->setColor(1,1,1,1);
        $report->pdf->filledRectangle(300,758,270,50);
        $report->pdf->setColor(0,0,0,1);
        $report->pdf->SetStrokeColor(0, 0, 0);
        $space = str_repeat(" ",82 - 2.3*strlen($this->uoalmoxarifado->nome));
        $report->pdf->addText($alturaCabecalho, 800, 9,"UNIVERSIDADE FEDERAL DE JUIZ DE FORA      {$ordem->movimento[0]->requisicao->uoRequisitante->nome}");
        $report->pdf->addText($alturaCabecalho, 800 - $h, 9,"{$this->uoalmoxarifado->nome}{$space}{$ordem->movimento[0]->requisicao->localEntrega}");
        $report->pdf->addText($alturaCabecalho, 800 - $h - $h, 9,"COORDENADORIA DE SUPRIMENTOS                TIPO DE MATERIAL: CONSUMO     NUMERO:{$ordem->numero}/{$ano}");
        $report->pdf->addText($alturaCabecalho, 800 - $h - $h- $h, 9,"ORDEM DE ENTREGA DE MATERIAL                   ELEMENTO: 349030                         DATA:{$ordem->data}");
        $report->pdf->restoreState();
        $report->pdf->closeObject();
        $report->pdf->addObject($header, 'all');
        $report->pdf->ezSetDy(+15);
    }
    function btnOrdemEntrega_click()
    {
		$cf = new MCurrencyFormatter();
        $report = new MEzPDFReport('2','portrait');
	    $report->pdf->ezSetMargins(80,220,32,32);
        $cols = array('Código','N. Empenho','Especifição','UN','Quant.','Valor Total');
        $options['textCol'] = array(0,0,0);
        $options['shaded'] = 1;
        $options['showLines'] = 0;
        $options['fontSize'] = 10;
        $options['width'] = 540;
        $options['xPos'] = 'left';
        $options['xOrientation'] = 'right';
        $ordens = $this->uoalmoxarifado->listOrdemEntregaForAlmoxarifado();
        if ($ordens)
        {
            foreach ($ordens as $ordem)
            {
                try
                {
                    $this->generatePageHeader($report,$ordem);
                    $report->pdf->ezText('',20);
                    $ordem->retrieveAssociation('movimento');
                    unset($data,$resultado);
                    foreach ($ordem->movimento as $movimento)
                    {
                        $movimento->retrieveAssociation('itemreq');
                        $movimento->itemreq->retrieveAssociation('material');
                        $movimento->retrieveAssociation('itemNota');
                        if ($movimento->itemNota)$movimento->itemNota->retrieveAssociation('empenhado');
                        if ($movimento->itemNota->empenhado) $movimento->itemNota->empenhado->retrieveAssociation('empenho');
                        $data[$movimento->itemreq->material->idMaterial][0] =  $movimento->itemreq->material->codmaterial;
                        $data[$movimento->itemreq->material->idMaterial][1] =  $movimento->itemNota->empenhado->empenho->numero;
                        $data[$movimento->itemreq->material->idMaterial][2] =  $movimento->itemreq->material->descricao;
                        $data[$movimento->itemreq->material->idMaterial][3] =  $movimento->itemreq->material->unidade;
                        $data[$movimento->itemreq->material->idMaterial][4] +=  $movimento->quantidade;
                        $data[$movimento->itemreq->material->idMaterial][5] +=  $cf->toDecimal($movimento->valorTotal);
                        $total = $cf->toDecimal($total) + $cf->toDecimal($movimento->valorTotal);
                    }
                    foreach ($data as $d)
                    {
                        $resultado[] = array($d[0],$d[1],$d[2],$d[3],$d[4],$cf->formatWithSymbol($d[5]));
                    }
                    $resultado[] = array('Total','','','','',$cf->formatWithSymbol($cf->toDecimal($total)));
                    $ordem->impresso = 1;
                    $ordem->save();
                    $ordem->Log(OP_UPD,"Ordem Entrega impressa.");
                    $report->pdf->ezText("Requisição: {$ordem->movimento[0]->idRequisicao}",14,array('justification'=>'center'));
                    $report->pdf->ezText("",14);
                    $report->pdf->ezTable($resultado,$cols,'',$options);
                    $report->pdf->ezText('_______________________________________________________________________________________________',10);
                    $this->generateReportFooter($report);
                    if (next($ordens)) $report->pdf->ezNewPage();
                }
                catch (Exception $e)
                {
                    $this->addError($e->getMessage());
                }
            }
            $report->Execute();
        }
    }
    function btnOrdemEntregaPorPeriodo_click()
    {
		$cf = new MCurrencyFormatter();
        $report = new MEzPDFReport('2','portrait');
	    $report->pdf->ezSetMargins(80,220,32,32);
        $cols = array('Código','N. Empenho','Especifição','UN','Quant.','Valor Total');
        $options['textCol'] = array(0,0,0);
        $options['shaded'] = 1;
        $options['showLines'] = 0;
        $options['fontSize'] = 10;
        $options['width'] = 540;
        $options['xPos'] = 'left';
        $options['xOrientation'] = 'right';
        $ordens = $this->uoalmoxarifado->listOrdemEntregaForPeriodo(Form::getFormValue('dataInicio'),Form::getFormValue('dataFim'));
        if ($ordens)
        {
            foreach ($ordens as $ordem)
            {
                try
                {
                    $this->generatePageHeader($report,$ordem);
                    $report->pdf->ezText('',20);
                    $ordem->retrieveAssociation('movimento');
                    unset($data,$resultado);
                    foreach ($ordem->movimento as $movimento)
                    {
                        $movimento->retrieveAssociation('itemreq');
                        $movimento->itemreq->retrieveAssociation('material');
                        $movimento->retrieveAssociation('itemNota');
                        if ($movimento->itemNota)$movimento->itemNota->retrieveAssociation('empenhado');
                        if ($movimento->itemNota->empenhado) $movimento->itemNota->empenhado->retrieveAssociation('empenho');
                        $data[$movimento->itemreq->material->idMaterial][0] =  $movimento->itemreq->material->codmaterial;
                        $data[$movimento->itemreq->material->idMaterial][1] =  $movimento->itemNota->empenhado->empenho->numero;
                        $data[$movimento->itemreq->material->idMaterial][2] =  $movimento->itemreq->material->descricao;
                        $data[$movimento->itemreq->material->idMaterial][3] =  $movimento->itemreq->material->unidade;
                        $data[$movimento->itemreq->material->idMaterial][4] +=  $movimento->quantidade;
                        $data[$movimento->itemreq->material->idMaterial][5] +=  $cf->toDecimal($movimento->valorTotal);
                        $total = $cf->toDecimal($total) + $cf->toDecimal($movimento->valorTotal);
                    }
                    foreach ($data as $d)
                    {
                        $resultado[] = array($d[0],$d[1],$d[2],$d[3],$d[4],$cf->formatWithSymbol($d[5]));
                    }
                    $resultado[] = array('Total','','','','',$cf->formatWithSymbol($cf->toDecimal($total)));
                    $ordem->impresso = 1;
                    $ordem->save();
                    $ordem->Log(OP_UPD,"Ordem Entrega impressa.");
                    $report->pdf->ezText("Requisição: {$ordem->movimento[0]->idRequisicao}",14,array('justification'=>'center'));
                    $report->pdf->ezText("",14);
                    $report->pdf->ezTable($resultado,$cols,'',$options);
                    $report->pdf->ezText('_______________________________________________________________________________________________',10);
                    $this->generateReportFooter($report);
                    if (next($ordens)) $report->pdf->ezNewPage();
                }
                catch (Exception $e)
                {
                    $this->addError($e->getMessage());
                }
            }
            $report->Execute();
        }
    }
 }
?>
