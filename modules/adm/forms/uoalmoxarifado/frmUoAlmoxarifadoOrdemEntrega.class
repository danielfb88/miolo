
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmUoAlmoxarifadoOrdemEntrega extends MCompoundForm
{
    protected $uoalmoxarifado;
    protected $ordem;
    function __construct($objUO)
    {
        global $MIOLO;
        $this->uoalmoxarifado = $objUO;
        $this->ordem = $MIOLO->getBusiness('adm','ordementrega',Form::getFormValue('idOrdemEntrega'));
		parent::__construct("Ordem de Entrega {$this->ordem->numero}");
        $this->eventHandler();
    }

	function CreateFields()
	{
		global $MIOLO;
	
	        $this->ordem->retrieveAssociation('movimento');
	        $this->ordem->movimento[0]->retrieveAssociation('requisicao');
		$this->ordem->movimento[0]->requisicao->retrieveAssociation('uoRequisitante');
		$this->ordem->movimento[0]->requisicao->retrieveAssociation('uoExecutante');
		$tipoReq = $this->manager->GetBusiness('adm','tiporeq');
		$tipoReq->GetById($this->ordem->movimento[0]->requisicao->idTipoReq);
		$idOrdemEntrega = $this->ordem->idOrdemEntrega;
	       	$tabelaGeral = $MIOLO->GetBusiness('common','tabelageral');

		//IFSUDESTEMG
		$tabelaGeral->GetByItem('AD_ALMOXSTATUSREQ',$this->ordem->movimento[0]->requisicao->status);
		$status=$tabelaGeral->item2;

		$grid = $MIOLO->GetUI()->GetGrid('adm','gridMaterialOrdemEmpenho', array($this->ordem->movimento[0]->requisicao->idRequisicao,$idOrdemEntrega));
		$grid->SetTitle(NULL);
		$fields = array(
				new MSeparator(),
				new MTextLabel('txt1','Ordem de Entrega: '.$this->ordem->numero),
				new MTextLabel('txt2','Status: '.$status),
				new MTextLabel('txt3','Requisição: '.$this->ordem->movimento[0]->requisicao->idRequisicao),
				new MTextLabel('txt4','Tipo de Requisição: '.$tipoReq->descricao),
				new MTextLabel('txt5','Data/Hora: '.$this->ordem->movimento[0]->requisicao->dataHora),
				new MTextLabel('txt6','UoRequisitante: '.$this->ordem->movimento[0]->requisicao->uoRequisitante->nome),
				$grid,
				);
		$buttons = array(new MButton('btnReport','Imprimir Ordem de Entrega', 'PDF'));
		$this->setFields($fields);
		$this->setButtons($buttons);
	}
    function btnReport_click()
    {
		global $MIOLO;

		$ui = $this->manager->GetUI();
		$ordem = $this->manager->getBusiness('adm','ordementrega',$this->ordem->idOrdemEntrega);
		try
		{
			$ordem->impresso = 1;
			$ordem->save();
			$ordem->Log(OP_UPD,"Ordem Entrega impressa.");
			//$report = $ui->GetReport('adm','repUoAlmoxarifadoOrdemEntrega',$this->uoalmoxarifado);
			//$report->Generate();
				$report = new MJasperReport('sigaept');
				$parameters['int_idordement']   = $this->ordem->idOrdemEntrega;
				$parameters['SUBREPORT_DIR'] = $MIOLO->GetConf('home.modules');
				$parameters['pURL']          = $MIOLO->GetConf('home.url');
				$parameters['int_pIdUsuario']    = $MIOLO->login->idkey;
			
				$report->Execute('adm', 'repOrdemEntrega', $parameters);

		}
		catch (Exception $e)
		{
			$this->addError($e->getMessage());
		} 
    }

 }
?>
