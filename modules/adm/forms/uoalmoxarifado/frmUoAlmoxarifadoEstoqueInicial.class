<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmUoAlmoxarifadoEstoqueInicial extends Form
{
    protected $objEstoque;

    function __construct($objEstoque)
    {
        $this->objEstoque = $objEstoque;
        $this->Form('Dados do Estoque de Material');
        $this->EventHandler();
    }

    function CreateFields()
    {
        $this->objEstoque->retrieveAssociation('material');
        
        $cf = new MCurrencyFormatter();
        $valorTotal = $cf->formatWithSymbol($this->objEstoque->valorTotal);
        
        $fields = array(            
            array( new MTextField('idMaterial',$this->objEstoque->idMaterial,'ID'), 
			       new MTextField('catmat',$this->objEstoque->material->codmaterial,'CATMAT'),			
				 ),
            new MTextField('lkpMaterial',$this->objEstoque->material->descricao,'Material',80), 
            new MTextField('estoque',$this->objEstoque->estoque,'Quantidade',10,'Ex: 1000'),
            new MTextField('valorTotal',$valorTotal,'Valor Total',10,'Ex: 45,00'),
			new MTextField('unidade', $this->objEstoque->material->unidade,'Unidade de medida',10), 
            new MTextField('estoqueMin',$this->objEstoque->estoqueMin,'Estoque Mínimo',10,'Ex: 500'),
        );
		
        $this->SetFields($fields);
        $this->SetFieldAttr('lkpMaterial','module','adm');
        $this->SetFieldAttr('lkpMaterial','item','material');
        $this->SetFieldAttr('lkpMaterial','event','filler');
        $this->SetFieldAttr('lkpMaterial','related','idMaterial,lkpMaterial');
        
        $this->SetFieldAttr('idMaterial','readonly',true);
		$this->SetFieldAttr('catmat','readonly',true);
        $this->SetFieldAttr('estoque','readonly',true);
        $this->SetFieldAttr('valorTotal','readonly',true);
		$this->SetFieldAttr('unidade','readonly',true);
        $this->SetFieldAttr('lkpMaterial','readonly',true);
		
        
        $validators = array(
          new MRequiredValidator('idMaterial'),
		  new MCompareValidator('estoque','','>','1','i','required','É necessário informar uma quantidade maior ou igual a zero!'),
          new MRequiredValidator('valorTotal'),
          new MCompareValidator('estoqueMin','','>=','0','i','required','É necessário informar Estoque Mínimo maior ou igual a zero!'),
        );
        $this->SetValidators($validators);
        $url = $this->manager->GetActionURL('adm','main:uoalmoxarifado',$this->objEstoque->idUo,array('form'=>'estoqueinicial'));
        
        $buttons = array(
            new FormButton('btnPost', 'Gravar'),                        
            new MButton('btnSair','Voltar',$url),
            new FormButton('btnDel' , 'Excluir')
        );
        $this->SetButtons($buttons);
        $perms = $this->manager->getPerms();
        $this->setButtonAttr('btnDel','visible',false); //$perms->checkAccess('banco_delete',A_ACCESS,false));

    }

    function btnPost_click()
    {
        global $item;
        $data = $this->getData();
        $this->objEstoque->getById($item,$this->objEstoque->idMaterial);
        $update = $this->objEstoque->isPersistent();
        $cf = new MCurrencyFormatter();
		$anterior = array('R$','.',',');
		$proximo  = array('','','.');
		$data->valorTotal = str_replace( $anterior, $proximo ,$data->valorTotal);
    	$data->valorTotal = $cf->toDecimal($data->valorTotal);
		$this->objEstoque->estoque = $data->estoque;
    	$this->objEstoque->valorTotal = $cf->toDecimal($data->valorTotal);
    
	if(($data->estoque < 0)){
	    $this->objEstoque->estoque = 0;
	    $this->manager->Information('A quantidade foi informada com um valor negativo.<br> Deve ser informado um valor positivo!.', $go );
	}else
	if(($data->estoqueMin < 0)){
	    $this->objEstoque->estoqueMin = 0;
	    $this->manager->Information('Estoque mínimo foi informado com valor negativo!', $go );
	}else{
	    $this->objEstoque->estoqueMin = $data->estoqueMin;		
		
        try
        {
            $this->objEstoque->save();
            $go = $this->manager->GetActionURL('adm','main:uoalmoxarifado',$this->objEstoque->idUo, array('form'=>'estoqueinicial'));
            if ($update)
            {
                $this->manager->Information('Material atualizado com sucesso.', $go );
            }
            else
            {
                $this->manager->Information('Material inserido com sucesso.', $go );
            }
        }
        catch ( Exception $e )
        {
            $this->AddError('Ocorreu um erro ao inserir os dados.');
        }
	 }        
    }

    function btnDel_click()
    {
        $action_sim = $this->manager->GetActionURL('adm','main:uoalmoxarifado',$this->objEstoque->idUo,array('form'=>'estoqueinicial','id'=>$this->objEstoque->idMaterial,'conf'=>'sim','event'=>'btnDel:click'));
        $action_nao = $this->manager->GetActionURL('adm','main:uoalmoxarifado',$this->objEstoque->idUo,array('form'=>'estoqueinicial','id'=>$this->objEstoque->idMaterial));
        $conf = $this->GetFormValue('conf');
        if ($conf == 'sim')
        {
            try 
            {
                $this->objEstoque->Delete();
                $this->manager->Information('Material excluído com sucesso!',$this->manager->GetActionURL('adm','main:uoalmoxarifado',$this->objEstoque->idUo,array('form'=>'estoqueinicial')));
            }
            catch ( Exception $e )
            {
                $this->manager->Error($e->getMessage());
            }
              
        }
        else
        {
            $this->manager->Question("Tem certeza que deseja excluir o material de código ".$this->objEstoque->material->codmaterial."?",$action_sim,$action_nao);
        }
    }

}
?>
