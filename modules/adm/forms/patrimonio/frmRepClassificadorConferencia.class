
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmRepClassificadorConferencia extends MForm
{
    function __construct()
    {
        parent::__construct('Relatório Classificador - Conferência');
        $this->EventHandler();
		$this->defaultButton = false;
    }

	function CreateFields()
    {
		global $MIOLO, $module, $action, $item, $theme;
		
		$lkpsetor = new MLookupTextField('siglaSetor','','Localização',14, 
			'Exemplos: 1) CAMPUS 2) CAMPUS-SETOR 3) CAMPUS DEPEND');
		
		$fields = array(
			new MLookupTextField('classificador','','Classificador',40),
			new MHiddenField('idClassificador'),
			$lkpsetor, 			
			new MTextField('empenho','','Empenho',14, 'NÃO OBRIGATÓRIO!')
		);
		$this->SetFields($fields);
		
		$lkpsetor->setFieldsIni ($this, 'common', 'setor_patri', 'idSetor');
		
		$this->SetFieldAttr('classificador','module',$module);
		$this->SetFieldAttr('classificador','item','classificador');
		$this->SetFieldAttr('classificador','related','idClassificador,classificador');

		$buttons = array(
			new MButton('btnPost','Gerar Relatório','PDF'),
			
		);
		$this->SetButtons($buttons);		
	}

    function btnPost_click()
    {
		global $MIOLO, $module, $item, $perms;;
		$classificador = Form::GetFieldValue('idClassificador');
		$siglaSetor = trim(Form::GetFieldValue('siglaSetor')) ;
		$siglaSetor = str_replace ( '-' , '%' , $siglaSetor );
		$siglaSetor = str_replace ( ' ' , '%' , $siglaSetor );
		
		
		$numeroempenho = trim(Form::GetFieldValue('empenho')) ;		
		
		if (empty($numeroempenho)) {$numeroempenho = '%';}
		
		if ( empty($siglaSetor)) {
			$login = $MIOLO->GetLogin();
			$perm = $MIOLO->getPerms()->isMemberOf($login,'ADM_PATRIMONIOADMIN');
			if ($perm) {$siglaSetor = '%';}
		}
		
		$n_classificador = Form::GetFieldValue('classificador'); // nomes dos parâmetros
		$n_siglasetor = ($siglaSetor == '%') ? 'INDIFERENTE' : $siglaSetor;
		$n_numeroempenho = ($numeroempenho == '%') ? 'INDIFERENTE'  : $numeroempenho;
		
		
		//var_dump($n_numeroempenho, $n_classificador, $n_siglasetor);
		//exit();
		
		
		if(empty($classificador)){ $this->AddError('Por gentileza selecione um Classificador (use a lupa)'); }
			else if ( empty($siglaSetor)) { $this->AddError('Por gentileza selecione uma localização'); }
			else
			{
				$report = new MJasperReport('sigaept'); 
				$parameters['SUBREPORT_DIR']	     = $MIOLO->GetConf('home.modules');
				$parameters['int_pIdUsuario']	     = $MIOLO->login->idkey;
				$parameters['pClassificador']	     = $classificador;
				$parameters['str_pSiglaSetor']		 = strtoupper($siglaSetor) . "%";	
				$parameters['str_pNumeroEmpenho']    = $numeroempenho;
				
				$parameters['str_pn_classificador']  = $n_classificador;
				$parameters['str_pn_siglasetor']     = $n_siglasetor;
				$parameters['str_pn_numeroempenho']  = $n_numeroempenho;
				
				
				
				$parameters['pURL']		= $MIOLO->GetConf('home.url');
				/*
				echo('<pre>');
				var_dump($parameters);
				echo('</pre>');
				exit();
				*/
		
				$report->Execute('adm', 'repClassificadorConferencia', $parameters);	
			}
	}
}
?>
