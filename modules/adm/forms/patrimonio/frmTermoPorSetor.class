
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmTermoPorSetor extends MForm
{
    function __construct()
    {
        parent::__construct('Termo de Responsabilidade');
        $this->EventHandler();
		$this->defaultButton = false;
    }

	function CreateFields()
    {
		global $MIOLO, $module, $action, $item, $theme;
		

		//$lkpsetor = new MLookupTextField('Setor','','Sigla do Setor',10);
		
		$fields = array(
			new MLookupTextField('setor','','Nome Setor',20),
			$lkpsetor,
			new MHiddenField('idSetor'),
			new MHiddenField('flagTermo','frmTermoSetor'),
                        new MSeparator('Relatório por Dependência'),
                        new MLookupTextField('dependencia','','Dependência',50),
                        new MHiddenField('idDependencia'),
		);
		

		$this->SetFields($fields);
		
		//$lkpsetor->setFieldsIni ($this, 'common', 'setor_patri', 'idSetor');
		
		$this->SetFieldAttr('setor','module','common');
		$this->SetFieldAttr('setor','item','setor_patri');
		$this->SetFieldAttr('setor','related','idSetor,setor');
		
        $this->SetFieldAttr('dependencia','module',$module);
        $this->SetFieldAttr('dependencia','item','dependencia');
        $this->SetFieldAttr('dependencia','related','idDependencia,dependencia');
        $this->SetFieldAttr('dependencia','filter','dependencia,idSetor,setor');
        $this->SetFieldAttr('dependencia','readonly',true);
				

		$buttons = array(
                        new MButton('btnPost','Gerar Termo Por Setor', 'PDF'),
			new MButton('btnSelDependencia','Selecionar Dependência'),
			new MButton('btnGerarRelDependencia','Gerar Termo Por Dependência'),
		);
		$this->SetButtons($buttons);
		$this->setButtonAttr('btnGerarRelDependencia','visible',false);
	}

    function btnPost_click()
    {	
		global $MIOLO, $module, $item;
	
		$setor = Form::GetFieldValue('idSetor');
		if($setor == NULL)
		{
			$this->AddError('Você deve selecionar um Setor (Use a lupa)');	
		}
		else
		{
        	$aux = $MIOLO->getBusiness('adm', 'executoralmox');
			$sql = new sql('idresponsavel', 'cm_setor', 'idsetor = ' . $setor);			
			$query = $aux->Query($sql);
			if ( empty($query->result[0][0]) )
			{
				$this->AddError('O responsável pelo setor ainda não registrado no sistema!');
			}
			else
			{
				$report = new MJasperReport('sigaept'); 
				$parameters['SUBREPORT_DIR']	= $MIOLO->GetConf('home.modules');
				$parameters['int_pIdUsuario']	= $MIOLO->login->idkey;
				$parameters['int_pIdSetor']	= Form::GetFormValue('idSetor'); 
				$parameters['pURL']		= $MIOLO->GetConf('home.url');
				$report->Execute('adm', 'repTermoPorSetor', $parameters);
			}
		}
	}

	function btnSelDependencia_click()
    {	
		if (!Form::GetFormValue('idSetor')){        
			$this->addInfo("Selecione um setor para selecionar a dependência!");
		}else{
			$this->setButtonAttr('btnSelDependencia','visible',false);
			$this->setButtonAttr('btnGerarRelDependencia','visible',true);
			$this->SetFieldAttr('dependencia','readonly',false);		
		}
	}

	function btnGerarRelDependencia_click()
    {
			global $MIOLO;
			$setor = Form::GetFieldValue('idSetor');
			if (!Form::GetFormValue('idDependencia'))
			{
				$this->addInfo("Selecione uma dependência!");
				$this->setButtonAttr('btnSelDependencia','visible',false);
				$this->setButtonAttr('btnGerarRelDependencia','visible',true);
				$this->SetFieldAttr('dependencia','readonly',false);
			}
			else
			{
				
				$aux = $MIOLO->getBusiness('adm', 'executoralmox');
				$sql = new sql('idresponsavel', 'cm_setor', 'idsetor = ' . $setor);			
				$query = $aux->Query($sql);
				if ( empty($query->result[0][0]) )
				{
					$this->AddError('O responsável pelo setor ainda não registrado no sistema!');
				}
				else 
				{
					$sql = new sql('count(*) AS NumItens', 'ad_itempatrimonio', 
					   'idsetor = ' . $setor . ' AND idDependencia = ' . Form::GetFormValue('idDependencia'));			
					   
					$query = $aux->Query($sql);
					var_dump($query->result[0][0]);
					if ( $query->result[0][0] == 0 )
					{
						$this->AddError('Nenhum bem alocado à dependência física escolhida!');
					}
					else
					{				
						global $MIOLO, $module, $item;

						$report = new MJasperReport('sigaept');
						$parameters['SUBREPORT_DIR']    = $MIOLO->GetConf('home.modules');
						$parameters['int_pIdUsuario']   = $MIOLO->login->idkey;
						$parameters['int_pIdSetor']     = Form::GetFormValue('idSetor');
						$parameters['int_pIdDependencia']       = Form::GetFormValue('idDependencia');

						$parameters['pURL']             = $MIOLO->GetConf('home.url');                        
						$report->Execute('adm', 'repTermoPorDependencia', $parameters);
					}
				}				
			}
    }

}
?>
