<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmPatrimonioBaixaBloco extends MForm
{
	protected $perms;
	
    function __construct()
    {
		global $MIOLO,$module,$action,$item;
		
        parent::__construct( 'Baixa em Bloco' );
        $this->perms  = $MIOLO->getPerms();
		$this->SetClose( null );    
        $this->EventHandler();
    }
    function CreateFields()
    {
        global $MIOLO;
	$ui = $MIOLO->GetUI();
        $grid = $ui->GetGrid( 'adm', 'gridItensPatrimonioSelection' );
        $grid->SetTitle(NULL);
	$tabelaGeral = $MIOLO->GetBusiness( 'common', 'tabelageral' );
	$options = $tabelaGeral->ListByTabela( 'AD_MOTIVOBAIXAPAT' );

	$objSetor = $this->manager->GetBusiness( 'common', 'setor' );                
	$optionSetores= $objSetor->listAll();

	$fields = array
	(
		new MSeparator( 'Selecione um setor para filtrar a listagem: ' ),
		new MSelection( 'setores', '', '', $optionSetores->result ),
		new MButton( 'btnListar', 'Listar' ),
		$grid,
		new MSpacer( 1 ),
		new MSelection( 'motivoBaixa', '', 'Motivo da Baixa', $options->result ),
		new MCalendarField( 'dataMovimento', date('d/m/Y'),'Data', 20 ),
		new MTextField( 'numeroProcesso', '', 'Nº do processo', 20 ),
	);
		
        $this->SetFields( $fields );

	$buttons = array
	(
        	   new MButton( 'btnBaixa', 'Dar Baixa' )
        );
	
	$this->SetButtons( $buttons );
    }

    function btnListar_click()
    {
        global $self;
	
    }

    function btnBaixa_click()
    {
    	global $page, $MIOLO;
		$itens = $page->Request( 'select' );   
	
		if( $itens == NULL )
		{
	        	$this->manager->Error( 'Você deve selecionar os itens antes de dar baixa!',
		             $this->manager->GetActionURL('adm','main:baixabloco:find' ) );
	
		}
		else
		{
	
			 /*  IFRO - Alan de Oliveira Silva
	            Controle de Acesso de usuários no Patrimônio
	            -- Inicio --
	        */
	        $setor = $MIOLO->GetBusiness('common','setor');
	        $user  = $MIOLO->GetBusiness('common','usuario');
	        $usuario = $user->GetByLogin($MIOLO->login->id);
	        $instituicao_usuario = $setor->getById($usuario->idSetor)->idinstituicao;	        
	        
			foreach( $itens as $it )
			{
				$objPatrimonio = $this->manager->GetBusiness( 'adm','itempatrimonio' );
				$objPatrimonio->GetById( $it );
				$objPatrimonio->SetData( $this->GetData() );
				
				
	       		$setorOrigem = $objPatrimonio->idSetor;
		        $instituicao_patrimonio = $setor->getById($setorOrigem)->idinstituicao;		        		      
		        
		        if ($instituicao_usuario == $instituicao_patrimonio || $this->perms->checkAccess('ADM_PATRIMONIOADMIN', A_EXECUTE)) {
		            /* --Fim-- */		
	
					$data = $this->GetData();
					$movimentoPat = $this->manager->GetBusiness('adm','movimentopat');		
					$movimentoPat->tipoMovimento = '3';
					$movimentoPat->motivoBaixa = $data->motivoBaixa;
					$movimentoPat->idItemPatrimonio = $objPatrimonio->idItemPatrimonio;
					$movimentoPat->idSetorOrigem  =   $objPatrimonio->idSetor;
					$movimentoPat->idSetorDestino =   $objPatrimonio->idSetor;
					$movimentoPat->dataMovimento  =   $data->dataMovimento;
					$movimentoPat->numeroProcesso =   $data->numeroProcesso;
					$objPatrimonio->ativo   =   'N'; 
														
					try
					{
					     $movimentoPat->save();
					     $objPatrimonio->save();
					     $objPatrimonio->Log(OP_UPD,
					     "Item excluído: " . $this->objPatrimonio->idItemPatrimonio);
					}
					catch ( Exception $e )
					{
			        	     $this->manager->Error(
				     		"Informe o seguinte erro à equipe do CGCO: ".$e->getMessage(),
					           $this->manager->GetActionURL('adm','main:baixabloco',
						        $objPatrimonio->idItemPatrimonio));
					}
			
				        
				} else {
					$msg="Erro";
				}
				
				if ($msg=="Erro"){
					    $this->manager->Information('Você não possui permissão para excluir alguns dos item(ns) selecionados!',
				        $this->manager->GetActionURL('adm','main:baixabloco:find' ) );
				}else {					
						$this->manager->Information('Item(ns) excluído(s) com sucesso!',
				        $this->manager->GetActionURL('adm','main:baixabloco:find' ) );
				}        
			}
		}
	}    
}
?>
