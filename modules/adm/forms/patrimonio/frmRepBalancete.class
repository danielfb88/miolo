
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmRepBalancete extends MForm
{
    function __construct()
    {
        parent::__construct('Relatório de Movimentação de Bens Móveis');
        $this->EventHandler();
		$this->defaultButton = false;
    }

	function CreateFields()
    {
		global $MIOLO, $module, $action, $item, $theme;
		$instituicao = $MIOLO->GetBusiness('common','instituicao');
        $idinstituicao = $this->manager->GetBusiness('common','instituicao');
        $instituicao = $idinstituicao->listAll();

		$fields = array(
			new MCalendarField('dataInicial','','A partir de',20),
			new MCalendarField('dataFinal','','Até',20),
			new MSelection ('idinstituicao','','Instituição'),
		);
		
		$this->SetFields($fields);

		$buttons = array(
			new MButton('btnPost','Gerar Relatório','PDF'),
		);
		$this->SetButtons($buttons);
		
		$objinst = $MIOLO->GetBusiness('common','instituicao');
        $query = $objinst->ListRange(NULL, 'instituicao');
		$options['0'] = 'TODAS';
        while ( !$query->eof() )
		{
			if(($query->fields('ug')!='') or ($query->fields('uasg')!=''))
			{
				$options[$query->fields('idinstituicao')] = $query->fields('instituicao');
            }
			$query->moveNext();
		}
		$this->SetFieldAttr('idinstituicao','options', $options);
	}

    function btnPost_click()
    {
		global $MIOLO, $module, $item;
		
		$instituicao = Form::GetFormValue('idinstituicao');
        $inicio = $this->getFieldValue('dataInicial');
        $final = $this->getFieldValue('dataFinal');
        $partesDataInicial = explode('/',$inicio);
        $datainicial =  $partesDataInicial[2].'/'.$partesDataInicial[1].'/'.$partesDataInicial[0];
        $partesDataFinal = explode('/',$final);
        $datafinal =  $partesDataFinal[2].'/'.$partesDataFinal[1].'/'.$partesDataFinal[0];
        if( $instituicao == '')
        {
	        $this->AddError('Você deve selecionar uma Instituição');
        }
     	elseif(( $inicio == "") || ($final == ""))
     	{
        	$this->addError('É necessário informar as duas datas!');
        }
        elseif(($partesDataInicial[0] < 1) || ($partesDataInicial[0] > 31) || ($partesDataInicial[1] < 1)
        || ($partesDataInicial[1] > 12) || ($partesDataInicial[2] < 1900) || ($partesDataInicial[2] > 2100))
        {
        	$this->addError('Data inicial inválida!');
        }
        elseif(($partesDataFinal[0] < 1) || ($partesDataFinal[0] > 31) || ($partesDataFinal[1] < 1)
        || ($partesDataFinal[1] > 12) || ($partesDataFinal[2] < 1900) || ($partesDataFinal[2] > 2100))
        {
        	$this->addError('Data final inválida!');
        }
        elseif($datainicial > $datafinal)
        {
        	$this->addError('É necessário que a data inicial seja inferior a final!');
        }
        else
        {
			$report = new MJasperReport('sigaept');
			$parameters['SUBREPORT_DIR'] = $MIOLO->GetConf('home.modules');
			$parameters['pURL']          = $MIOLO->GetConf('home.url');
			$parameters['int_pIdUsuario']   = $MIOLO->login->idkey;
			$parameters['int_pIdInstituicao'] = $instituicao;
			$parameters['pDataIni']  = $inicio;
			$parameters['pDataFim']  = $final;
			if( $parameters['int_pIdInstituicao'] == 0 )
			{
				$report->Execute($module, 'RelBalanceteTodas', $parameters);
			}
			else
			{
				$report->Execute($module, 'RelBalancete', $parameters);
            }
			
		}
	}
/*    function btnPost_click()
    {
		global $MIOLO, $module, $item;

		$ui = $MIOLO->GetUI();
        $report = $ui->GetReport($module,'repBalancete');
        $report->Generate();
	}
*/	
}
?>
