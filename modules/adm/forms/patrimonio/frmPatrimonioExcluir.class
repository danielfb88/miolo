<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmPatrimonioExcluir extends MForm
{

	protected $objPatrimonio;
	protected $perms;
	
    function __construct($objPatrimonio)
    {
		global $MIOLO,$module,$action,$item;
		
		$this->objPatrimonio = $objPatrimonio;
		$this->perms  = $MIOLO->getPerms();
        parent::__construct('Baixa');
		$this->SetClose(null);
        $this->EventHandler();
    }

    function CreateFields()
    {
		global $MIOLO;

		$tabelaGeral = $MIOLO->GetBusiness('common', 'tabelageral');
		$options = $tabelaGeral->ListByTabela('AD_MOTIVOBAIXAPAT');
		$fields = array
			(
				new MSelection('motivoBaixa','','Motivo da Baixa',$options->result),
				new MCalendarField('dataMovimento',date('d/m/Y'),'Data',20),
				new MTextField('numeroProcesso','','Nº Processo',20),
			);
		
        $this->SetFields($fields);
		
		$buttons = array
			(
        	   new MButton('btnSalvar', 'Baixa')
            );
		$this->SetButtons($buttons);
    }

	public function btnSalvar_click()
	{        
        $data = $this->GetData();
        global $MIOLO;
        /*  IFRO - Alan de Oliveira Silva
            Controle de Acesso de usuários no Patrimônio
            -- Inicio --
        */
        
	    $setor = $MIOLO->GetBusiness('common','setor');
	    $user  = $MIOLO->GetBusiness('common','usuario');
   		$setorOrigem = $this->objPatrimonio->idSetor;	    
	    $usuario = $user->GetByLogin($MIOLO->login->id);
	    $instituicao_usuario = $setor->getById($usuario->idSetor)->idinstituicao;	        
	    $instituicao_patrimonio = $setor->getById($setorOrigem)->idinstituicao;		        		      
	    if ($instituicao_usuario == $instituicao_patrimonio || $this->perms->checkAccess('ADM_PATRIMONIOADMIN', A_EXECUTE)) {
        /* --Fim-- */
        
        	if($this->invertData($this->objPatrimonio->dataAquisicao) > $this->invertData($data->dataMovimento))
        	{
        		$this->addError('A data da baixa deve ser igual ou posterior a data de aquisição');
        		return;
        	}
        
			$movimentoPat = $this->manager->GetBusiness('adm','movimentopat');		
			$movimentoPat->tipoMovimento = '3';
			$movimentoPat->motivoBaixa = $data->motivoBaixa;
			$movimentoPat->idItemPatrimonio = $this->objPatrimonio->idItemPatrimonio;
			$movimentoPat->idSetorOrigem  =   $this->objPatrimonio->idSetor;
			$movimentoPat->idSetorDestino =   $this->objPatrimonio->idSetor;
			$movimentoPat->dataMovimento  =   $data->dataMovimento;
			$movimentoPat->numeroProcesso =   $data->numeroProcesso;
			$this->objPatrimonio->ativo   =   'N'; 
													
			try
			{
	       		$movimentoPat->save();
				$this->objPatrimonio->save();
				$this->objPatrimonio->Log(OP_UPD,"Item excluído: " . $this->objPatrimonio->idItemPatrimonio);
				$this->manager->Information('Item excluído com sucesso',$this->manager->GetActionURL('adm','main:itempatrimonio:find'));
			}
			catch (Exception $e)
			{
				$this->manager->Error("Informe o seguinte erro à equipe do CGCO: ".$e->getMessage(),$this->manager->GetActionURL('adm','main:itempatrimonio',$this->objPatrimonio->idItemPatrimonio));
			}
		}else {
		    $msg = 'Este usuário não tem permissão para acessar este Patrimonio';
			$this->manager->Information($msg,$this->manager->GetActionURL('adm','main:patrimonio'));
		}
	}
	
	function invertData($datainv)
	{//recebe a data

		$ano	= substr("$datainv",6, 4);
		$mes	= substr("$datainv",3, 2);
		$dia	= substr("$datainv",0, 2);
		$datainv = "$ano$mes$dia";
		
		return $datainv;
	}
	
 }
?>
