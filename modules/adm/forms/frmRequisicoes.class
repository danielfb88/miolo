
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmRequisicoes extends Form
{
	var $requisicao;
	/*----------------------------------------
	Construtor
	----------------------------------------*/
	function __construct()	
	{
		parent::__construct('Lista de requisições');
		$this->EventHandler();
	}
	/*-------------------------------------------
	Método createFields()
	--------------------------------------------*/
	function createFields()
	{
		global $MIOLO, $module,$self;
		$login = $MIOLO->GetLogin();
		$usuario = $MIOLO->GetBusiness('common','usuario');
		$usuario->GetById($login->idkey);
		$idsetor = $usuario->idsetor;
		$requisicao = $MIOLO->GetBusiness($module,'requisicao');
		$dInicial = $this->GetFormValue('dInicial');
		if ($dInicial)
		{
			$dFinal = $this->GetFormValue('dFinal');
			if ($dFinal) $query = $requisicao->ListBySetorAndTempo($idsetor,$dInicial,$dFinal);
			else $query = $requisicao->ListBySetorAndTempo($idsetor,$dInicial);
			$data = array('dInicial'=>$dInicial,'dFinal'=>$dFinal);
		}
		else $query = $requisicao->ListBySetorAndTempo($idsetor);
		
		$columns = array(
			new DataGridColumn('idrequisicao','','','','',false),
			new DataGridColumn('datarequisicao','Data','center','','20%'),
			new DataGridColumn('numero','Número','center','','12%'),
			new DataGridColumn('ano','Ano','center','','12%'),
			new DataGridColumn('status','Status','center','','18%'),
			new DataGridColumn('destino','Destino','center','','33%'),
			new DataGridColumn('codstatus','','','','',false),
			new DataGridColumn('codtipo','','','','',false),
		);
		$href_dg=$MIOLO->GetActionUrl($module,$self,'',$data);
		$datagrid = new DataGrid2($query,$columns,$href_dg,20);
		$datagrid->SetRowMethod('frmRequisicoes','setRow');
		$href_edit = $MIOLO->GetActionURL($module,'requisicoes','%0%',array('event'=>'btnExibirRequisicao:click'));
	    $datagrid->AddActionUpdate($href_edit);
        $datagrid->AddFilterText('numero','Buscar por número de requisição: ','');
		$this->AddField($datagrid);
        $datagrid->SetFilter(true);
	   	$this->defaultButton = false;
		$this->SetClose(false);
	}
	/*----------------------------------------
	Método setRow()
	----------------------------------------*/
    function setRow($i, $row, $actions, $columns)
    {
		global $MIOLO,$module;
		if ($row[7] == 2) $actions[0]->href = $MIOLO->GetActionUrl($module,'main:requisicoes:requisicaoexterna','',array('idRequisicao'=>'%0%','event'=>'btnExibirRequisicao:click'));
		else $actions[0]->href = $MIOLO->GetActionUrl($module,'main:requisicoes:requisicaointerna','',array('idRequisicao'=>'%0%','event'=>'btnExibirRequisicao:click'));
		//if ($row[6] == 6 || $row[6] == 1) $actions[1]->enabled = true;
		//else $actions[1]->enabled = false;
		if (!$row[2]) $columns['numero']->control[$i]->SetValue('SN');
	}
}
?>
