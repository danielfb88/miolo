
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmMaterial extends MCompoundForm
{
    protected $oid;
    protected $material;
    function __construct($objMaterial)
    {
        $this->material = $objMaterial;
        parent::__construct();
	$this->SetTitle('Código '.$this->material->idMaterial);
        $this->SetIcon($this->manager->GetUi()->GetImage('adm','default_mini.png'));
        $this->SetClose($this->manager->GetActionURL('adm','main:material:find'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $action, $history;
        $material = $this->material;
    
//form
        $ui = $this->manager->GetUI();
        $form = MForm::GetFormValue('form');
        switch ($form)
        {
            case 'dados' :
                $this->_form[0] = $ui->GetForm($module,'frmMaterialDados',$material,'material');
                break;
            case 'excluir' :
                $this->_form[0] = $ui->GetForm($module,'frmMaterialDel',$material,'material');
                break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($this->manager->GetActionURL('adm','main:material', $material->idMaterial));
        }
// panel
        $action = $context->action;
        $this->_panel[0] = $panel = new MActionPanel('pnlCompound','Opções','',false);
        $panel->AddAction('Editar',$ui->GetImage('adm','edit.png'),'adm',$action,$material->idMaterial,array("form"=>"dados"));
        $panel->AddAction('Excluir',$ui->GetImage('adm','excluir.png'),'adm',$action, $material->idMaterial,array("form"=>"excluir"));
  
// info para exibição no formulário
        $this->_info[0] = new MTextLabel('txtDescricao',$material->descricao,'Descrição');
        $this->_info[1] = new MTextLabel('txtUnidade',$material->unidade,'Unidade');
        $this->_info[2] = new MTextLabel('txtPermCons',($material->permcons == 'C') ? 'Consumo' : 'Permanente','Tipo');
        $this->_info[3] = new MTextLabel('txtPermCons',($material->estocavel == 'S') ? 'Sim' : 'Não','Estocável');
	$this->_info[4] = new MTextLabel('txtElemento',$material->idelemento,'Elemento');
        $this->_info[5] = new MTextLabel('txtSubelemento',$material->idsubelemento,'Subelemento');
        $this->_info[6] = new MTextLabel('txtAtivo',($material->ativo == 'S') ? 'Sim' : 'Não','Ativo');
    }
}
?>
