<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmMaterialDados extends MForm
{
    protected $objMaterial;
    
    function __construct($objMaterial)
    {
        $this->objMaterial = $objMaterial;
        parent::__construct('Dados do Material');
        $this->EventHandler();
    }

    function CreateFields()
    {    
        $opcoes1 = array("S"=>"SIM","N"=>"NÃO");            
        $opcoes2 = array("C"=>"CONSUMO","P"=>"PERMANENTE");

        $fields = array(
			new MTextField('codmaterial','','CATMAT','14','Máximo 14 caracteres'),
			new MMultiLineField('descresum','','Descricao Resumida','',3,60,'Máx. 200 caracteres'),
			new MMultiLineField('descricao','','Descricao Detalhada','',5,60,'Máx. 810 caracteres'),
			new MTextField('unidade','KG','Unidade','10','Máximo 10 caracteres'),
			new MCurrencyField('precoestimado','','Preço Estimado',14),
			//new MTextField('precoestimado','','Preço Estimado','14','Separação decimal por ponto'),
			new MSelection('permcons','C','Tipo',$opcoes2),
			new MSelection('estocavel','N','Estocável',$opcoes1),
			new MTextField('idelemento','','Elemento','6','Máximo 6 caracteres'),
			new MTextField('idsubelemento','','Subelemento','2','Máximo 2 caracteres'),
			new MSelection('ativo','S','Ativo',$opcoes1),
			new MHiddenField('idMaterial')
        );

        $this->SetFields($fields);
        $this->SetFieldAttr('idMaterial','readonly',true);
        $this->codmaterial->addAttribute('maxlength', 14);
        $this->descresum->addAttribute('maxlength', 200);
        $this->descricao->addAttribute('maxlength', 810);
        $this->unidade->addAttribute('maxlength', 10);
        $this->idelemento->addAttribute('maxlength', 6);
        $this->idsubelemento->addAttribute('maxlength', 2);
 
        
        $buttons = array(
                  new MButton('btnSalvar','Enviar'),
        );        
        $this->SetButtons($buttons);
        

        $this->SetData();
    }



    function SetData()
    {
        $data = $this->objMaterial;
        $this->SetFieldValue('idMaterial',$data->idMaterial);
		$this->SetFieldValue('descresum',$data->descresum);
        $this->SetFieldValue('descricao',$data->descricao);
        $this->SetFieldValue('unidade',$data->unidade);
		$this->SetFieldValue ('precoestimado',$data->precoestimado);
        $this->SetFieldValue('permcons',$data->permcons);
        $this->SetFieldValue('estocavel',$data->estocavel);
        $this->SetFieldValue('codmaterial',$data->codmaterial);
        $this->SetFieldValue('idelemento',$data->idelemento);
        $this->SetFieldValue('idsubelemento',$data->idsubelemento);
		$this->SetFieldValue('ativo',$data->ativo);
    }

    public function btnSalvar_click()
    {
        $dadosMaterial 	= $this->objMaterial->getData();
        $data 			= $this->getData();
			
		if (substr_count($data->precoestimado, ",") == 0) {
                 $data->precoestimado = str_replace(".",",",$data->precoestimado);
        }else{
	         $data->precoestimado = str_replace(".","",$data->precoestimado);
        }
        
        $cf = new MCurrencyFormatter();
        $data->precoestimado = $cf->toDecimal($data->precoestimado);
		if ($data->precoestimado <= 0)
		{
			$this->manager->error('O material não pode ter valor igual ou menor que zero.');
		}
		elseif(strlen(trim($data->descresum)) > 400)
		{
			$this->AddError('O campo Descrição Resumida deve conter no máximo 400 caracteres.');
		}
		elseif(strlen(trim($data->descricao)) > 810)
		{
			$this->AddError('O campo Descrição deve conter no máximo 810 caracteres.');
		}
		elseif(!is_numeric($data->codmaterial))
		{
			$this->AddError('O campo CATMAT deve conter somente números.');
		}
		elseif(!strlen(trim($data->descricao)))
		{
			$this->AddError('O campo Descrição não pode ser vazio.');
		}
		elseif(!strlen(trim($data->unidade)))
		{
			$this->AddError('O campo Unidade não pode ser vazio.');
		}
		elseif(!is_numeric($data->idelemento))
		{
			$this->AddError('O campo Elemento deve conter somente números.');
		}
		elseif(!is_numeric($data->idsubelemento))
		{
			$this->AddError('O campo Subelemento deve conter somente números.');
		}
		elseif(!($dadosMaterial->findBySubID((int)$data->idelemento, (int)$data->idsubelemento)))
		{
			$this->AddError('Elemento não cadastrado.');
		}
		elseif($data->permcons == "")
		{
			$this->AddError('Selecione o tipo do material.');
		}
		elseif($data->estocavel == "")
		{
			$this->AddError('Selecione se é ou não estocável.');
		}
		elseif($data->ativo == "")
		{
			$this->AddError('Selecione se o material está ou não ativo.');
		}
        elseif(($data->idelemento != $dadosMaterial->idelemento)||($data->idsubelemento != $dadosMaterial->idsubelemento))
        {
              if ($this->objMaterial->jaFoiEmpenhado()->result == NULL)    //nunca foi empenhado
              {
                  $this->salvarAlteracoes();
              }
              else
              {
                  $this->manager->error('Existe empenho com este material. <BR> Não é possível alterar o elemento ou subelemento.');
              }
        }
        else
        {
            $this->salvarAlteracoes();
        }
    }
    
    function salvarAlteracoes()
    {
        $this->objMaterial->SetData($this->GetData());
	 if (substr_count($this->objMaterial->precoestimado, ",") == 0) {
                 $this->objMaterial->precoestimado = str_replace(".",",",$this->objMaterial->precoestimado);
        }else{
                 $this->objMaterial->precoestimado = str_replace(".","",$this->objMaterial->precoestimado);
        }

		$this->objMaterial->descricao = str_replace("\n"," ", $this->objMaterial->descricao); 
		$this->objMaterial->descricao = str_replace("\r"," ", $this->objMaterial->descricao); 
		//$data->descricao
		
        $cf = new MCurrencyFormatter();
        $this->objMaterial->precoestimado = $cf->toDecimal($this->objMaterial->precoestimado);
		try
        {
             $this->objMaterial->save();
             $this->manager->information("Dados alterados com sucesso.",$this->manager->getActionUrl('adm','main:material:find') );
        }
        catch (Exception $e)
        {
             $this->AddError($e->GetMessage());
        }
    }
}
?>
