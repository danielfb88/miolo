<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmTipoManutencaoDados extends Form
{

	protected $objTipoManutencao;
	
    function __construct($objTipoManutencao)
    {	
	$this->objTipoManutencao = $objTipoManutencao;
        $this->Form('Tipo de Manutenção');
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO;
		$fields = array(
            new TextField('tipoManutencao','','Tipo','30', 'Máx. 30 caracteres'),
			new HiddenField('idTipoManutencao','')
        );
		
        $this->SetFields($fields);
		$buttons = array(
        	new FormButton('btnSalvar', 'Salvar')
			        );

		$this->SetButtons($buttons);
		$this->tipoManutencao->addAttribute('maxlength',30);
		$validators = array(
			new RequiredValidator('tipoManutencao')
		);
		$this->SetValidators($validators);
		$this->SetData();
    }
    function SetData()
    {
		$data = $this->objTipoManutencao;
		$this->SetFieldValue('tipoManutencao',$data->tipoManutencao);
		$this->SetFieldValue('idTipoManutencao',$data->idTipoManutencao);
    }	
    public function btnSalvar_click()
    {
		$this->objTipoManutencao->SetData($this->GetData());
		$tipoM = $this->objTipoManutencao->listByTipo($this->objTipoManutencao->tipoManutencao);
		if ($tipoM->result)	
		{
			$this->addError('Já existe registro de um tipo de manutenção com este mesmo nome');
		}
		elseif(strlen(trim($this->objTipoManutencao->tipoManutencao)) == '0')
		{
			$this->addError('Favor informar o Tipo de Manutenção');
		}
		elseif(!preg_match("/^[A-Z|0-9]/" ,$this->objTipoManutencao->tipoManutencao))
		{
			$this->addError('Campo nome inválido');
		}
		else
		{
			try
			{
				$this->manager->Information("Dados de tipo de manutencao modificados com sucesso");
				$this->objTipoManutencao->save();
				$this->objTipoManutencao->Log(OP_UPD,"Dados de tipo de manutencao modificados");
			}
			catch (Exception $e)
			{
				$this->addError($e->getMessage());
			}
		}
    }
}
?>
