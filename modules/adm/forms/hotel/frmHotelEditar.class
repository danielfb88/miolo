
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
MIOLO::Import('modules::adm::forms::hotel::frmHotelPai');

class frmHotelEditar extends frmHotelPai
{

	protected $objHotel;

	function __construct($objHotel)
	{
		$this->objHotel = $objHotel;
		$this->Form('Dados do Hotel');
		$this->EventHandler();
	}

	function CreateFields()
	{
		global $MIOLO;

		$this->CommonFields();

		$buttons = array(
		      new FormButton("btnSalvar","Salvar")
		);
		$this->SetButtons($buttons);
		$this->nome->addAttribute('maxlength',30);
		$this->valorDiaria->addAttribute('maxlength',8);

		$this->SetData();
	}

	public function btnSalvar_click()
	{
		$data = $this->GetData();

		if (substr_count($data->valorDiaria, ",") == 0) {
                      $data->valorDiaria = str_replace(".",",",$data->valorDiaria);
                }else{
                      $data->valorDiaria = str_replace(".","",$data->valorDiaria);
                }

                $cf = new MCurrencyFormatter();
                $data->valorDiaria = $cf->toDecimal($data->valorDiaria);

		$this->objHotel->SetData($data);	
		
		$ativo = $data->ativo;
		$nome = $data->nome;
		$valorDiaria = $data->valorDiaria;	
		
		$this->objHotel->ativo = $data->ativo;
		$this->objHotel->valorDiaria = str_replace(',', '.', $this->objHotel->valorDiaria);
		$this->objHotel->nome = strtoupper($this->objHotel->nome);
		
		if(strlen(trim($nome)) < 4)
		{
			$this->AddError('Insira um nome válido para o Hotel.');
		}
		elseif(strlen(trim($nome)) > 30)
		{
			$this->AddError('Insira um nome menor que 30 caracteres.');
		}
		elseif($valorDiaria == '')
		{
			$this->AddError('Informe o valor da diária.');
		}
		elseif(!is_numeric($valorDiaria))
		{
			$this->AddError('Informe um valor correto para a diária.');
		}
		elseif($valorDiaria <= 0)
		{
			$this->AddError('O valor da diária não pode ser negativo.');
		}
		elseif($ativo == '')
		{
			$this->AddError('Informe se o Hotel está ativo ou não no sistema.');
		}
		else
		{
			try
			{
				$this->objHotel->save();
				$this->objHotel->Log(OP_UPD,"Dados de hotel modificados");
				$go = $this->manager->GetActionURL('adm','main:hotel:find');
				$this->manager->Information('Dados do Hotel alterado com sucesso.',$go);
			}
			catch (Exception $e)
			{
				$this->addError($e->getMessage());
			}
		}
	}
 }
?>
