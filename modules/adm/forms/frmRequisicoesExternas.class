
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?

/*
Gevã Schaefer Pereira Martins - Início: 29/09/04 Término: 18/10/04 
Classe base: frmRequisicoes.class
*/

class frmRequisicoesExternas extends Form
{
	var $requisicaoexterna;
	
	/*----------------------------------------

	Construtor

	Instancia um objeto requisição,
	nomeio o formulário e ativa os eventos.

	----------------------------------------*/
	
	function __construct()	
	{
		// nome do formulário
		parent::__construct('Requisições Externas');

		// eventos
		$this->EventHandler();
	}

	/*----------------------------------------

	Método CreateFields()

	Renderiza o estrutura inicial do
	formulário.

	----------------------------------------*/
	
	function CreateFields()
	{
		// variáveis globais
		global $MIOLO, $module, $action;
		
		// recupera o idsetor 
		$login = $MIOLO->GetLogin();
		$usuario = $MIOLO->GetBusiness('common','usuario');
		$usuario->GetById($login->idkey);
		$idsetor = $usuario->idsetor;
		
		// instancia o objeto
		$requisicao = $MIOLO->GetBusiness($module,'requisicao');
		
		// cria o datagrid
		$query = $requisicao->ListByExterna();
		$columns = array
			(
			   new DataGridColumn('idrequisicao','idrequisicao','','','',false),
			   new DataGridHyperLink('datarequisicao','Data da Requisição','','','25%'),
               new DataGridColumn('status','Status','','','25%'),
			   new DataGridColumn('dataatendimento','Data Atendimento','','','25%'),
			   new DataGridColumn('numero','Número','','','25%'),
			);
		$datagrid = new DataGrid2($query,$columns,$action,20);
		$datagrid->SetRowMethod('frmRequisicoesExternas','SetURL2');
		$this->AddField($datagrid);

		// desabilita o botão padrão do datagrid
	   	$this->defaultButton = false;

		// botão voltar
		$buttons = Array(
			new FormButton('btnVoltar','Voltar',$MIOLO->GetActionURL($module,'sectionsRequisicao'))
		);
		$this->SetButtons($buttons);
	}

	function SetURL($i, $row, $actions, $columns)
	{
		global $MIOLO,$module;
		if ($row[5] == 'COSUP') $href = $MIOLO->GetActionURL($module,'requisicaoexterna',$row[0]);
		else $href = $MIOLO->GetActionURL($module,'requisicaointerna',$row[0]);
		$columns['datarequisicao']->control[$i]->href = $href;
	}
	
    function SetURL2($i, $row, $actions, $columns)
	{
       global $MIOLO,$module;
	   $href = $MIOLO->GetActionURL($module,'ordenadordespesa',$row[0]);
	   $columns['datarequisicao']->control[$i]->href = $href;
	}

}
?>
