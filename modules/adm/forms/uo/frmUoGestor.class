
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmUoGestor extends Form
{
	protected $objUo;
	
    function __construct($objUo)
    {
        global $MIOLO, $module, $self, $page;
        
		$this->objUo = $objUo;
        
        $urlBase = $MIOLO->getActionUrl($module,'main:uo',$this->objUo->idUo,array('form'=>'gestor'));
        $page->setAction($urlBase);
        
        $this->Form('Incluir');
        $this->EventHandler();
    }

    function CreateFields()
    {
		$fields = array(
			new MLookupTextField('lkpUsuario','','Login',20),
			new MTextField('nome','','Nome',50),
            new MCalendarField('dataInicio','','Data Início',15),
			new MHiddenField('idUsuario','')
        );
        $this->SetFields($fields);
        
        $this->nome->addAttribute('readonly', TRUE);

        $validators = array(
            new MDateDMYValidator('dataInicio','','required')
        );
        
        $this->SetValidators($validators);
		
        $this->SetFieldAttr('lkpUsuario','module','common');
	    $this->SetFieldAttr('lkpUsuario','item','usuario');
	    $this->SetFieldAttr('lkpUsuario','event','filler');
	    $this->SetFieldAttr('lkpUsuario','related','idUsuario,lkpUsuario,NULL,NULL,NULL,NULL,nome');
		
		$buttons = array(
        	new FormButton('btnSalvar', 'Incluir')
        );

		$this->SetButtons($buttons);
    }

	public function btnSalvar_click()
	{
		$idUsuario = $this->GetFormValue('idUsuario');
	
		if($idUsuario == NULL)
		{
			$this->addError('Informe um Login.');
		}
		else
		{
		    if( !isset($idUsuario) )
		    {
		        $this->manager->Error('Usuário gestor não informado corretamente.',false);
		        return;
		    }
		    
		    $gestor = $this->objUo->getGestor($idUsuario);

		    $msgLog = '';

		    /* caso gestor ja existir */
		    if( $gestor )
		    {
		        if( $gestor->dataFim )
		        {
		            $gestor->dataFim = '';
		            $msgLog = 'Reativando Gestor relacionado à UO';
		            
		        }
		        else
		        {
		            $this->manager->Error('Gestor já está relacionado à UO',false);
		            return;
		        }
		    }
		    else
		    {
		        $gestor = $this->manager->GetBusiness('adm','gestor');
		        $gestor->setData($this->getData());
		        $gestor->idUo = $this->objUo->idUo;
		        $msgLog = 'Novo gestor relacionado à UO';
		    }
		    
			try
			{
		        $gestor->save();
				$this->objUo->Log(OP_INS,$msgLog);
			}
			catch (Exception $e)
			{
		        $this->manager->Error("Informe o seguinte erro à equipe do CGCO: ",$e->getMessage());
		        $this->addError("Informe o seguinte erro à equipe do CGCO: ",$e->getMessage());
			}        

			$this->SetFieldValue('lkpUsuario','');
			$this->SetFieldValue('nome','');
		    $this->SetFieldValue('dataInicio','');
		}
	}

 }
?>
