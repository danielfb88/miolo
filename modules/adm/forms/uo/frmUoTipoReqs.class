
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class frmUoTipoReqs extends Form
{

	protected $objUo;
	
    function __construct($objUo)
    {
		$this->objUo = $objUo;
        $this->Form('Incluir');
        $this->EventHandler();
    }

    function CreateFields()
    {
		$fields = array(
			new Selection('idTipoReq','','Tipo da Requisição'),
			new HiddenField('idRubrica'),
			new MLookupTextField('lkpRubrica','','Rubrica',20)
        );
		
        $this->SetFields($fields);
		
		$tipoReq = $this->manager->GetBusiness('adm','tiporeq');
		$query = $tipoReq->listAll();
	   	$this->SetFieldAttr('idTipoReq','options',$query->result);
	   	$this->SetFieldAttr('lkpRubrica','visible',false);
	   	
	   	$this->lkpRubrica->addAttribute('readonly',TRUE);
		
		$buttons = array(
			new FormButton('btnEnviar', 'Enviar'),
        	new FormButton('btnSalvar', 'Incluir'),
            );
		$this->SetButtons($buttons);
		
		$this->SetButtonAttr('btnSalvar','visible',false);
		
		$this->SetFieldAttr('lkpRubrica','module','adm');
	    $this->SetFieldAttr('lkpRubrica','item','exerubrica');
	    $this->SetFieldAttr('lkpRubrica','event','filler');
	    $this->SetFieldAttr('lkpRubrica','related','idRubrica,lkpRubrica');

		$validators = array(
			new RequiredValidator('sigla'),
			new RequiredValidator('nome'),
			new RequiredValidator('tipo'),
			new RequiredValidator('documentoRef'),
			new RequiredValidator('lkpUsuario'),
			new RequiredValidator('lkpRubrica'),
		);
		$this->SetValidators($validators);

    }
	
	public function btnEnviar_click()
	{
		$SESSAO = $this->manager->getSession();
		$SESSAO->set('tiporeq',$this->GetFormValue('idTipoReq'));
		
		if( $this->objUo->findByTipoReq($this->objUo->idUo, $this->GetFormValue('idTipoReq'), date("Y") ))
		{
			$this->addError('Tipo da Requisição já cadastrada.');
		}
		else
		{
			$this->setFieldAttr('idTipoReq','readonly',true);
			$this->setFieldAttr('lkpRubrica','visible',true);
			$this->setButtonAttr('btnEnviar','visible',false);
			$this->setButtonAttr('btnSalvar','visible',true);
		}
	}
	
	public function btnSalvar_click()
	{
		$idRubrica 	    	   = $this->GetFormValue('idRubrica');
		$idTipoReq 	    	   = $this->GetFormValue('idTipoReq');
		$tipoReq 	    	   = $this->manager->GetBusiness('adm','tiporeq');
		$objExecuta	    	   = $this->manager->GetBusiness('adm','executa');
		$objReqRubrica 		   = $this->manager->GetBusiness('adm','reqrubrica');
		$objExecuta->idTipoReq = $idTipoReq;
		$objExecuta->idUo 	   = $this->objUo->idUo;
		$objExecuta->idRubrica = $idRubrica;
		$objExecuta->ano       = date(Y);
		
		$tipoReq->GetById($idTipoReq);
	
		if($this->GetFormValue('idRubrica') == NULL)
		{
			$this->addError("Selecione uma Rubrica");
		}
		else
		{
			$this->objUo->AddTipoReq($tipoReq);
			try
			{
				$objExecuta->save();
				$this->objUo->Log(OP_INS,"Novo tipo de requisição relacionado à UO");
			}
			catch (Exception $e)
			{
				$this->addError($e->getMessage());
			}
			$this->setFieldValue('idRubrica', '');
		}
	}
 }
?>
