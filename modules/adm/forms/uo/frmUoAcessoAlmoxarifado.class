
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class frmUoAcessoAlmoxarifado extends Form
{
    protected $objUoAlmoxarifado;

    function __construct($objUoAlmoxarifado)
    {
	    $this->objUoAlmoxarifado = $objUoAlmoxarifado;
	    $this->Form('Novo Acesso a Almoxarifado');
	    $this->EventHandler();
    }

    function CreateFields()
    {
    	$resultadoPesquisaUOAlmoxarifado = $this->objUoAlmoxarifado->listByTipoReq(8)->result;
    	if (!$resultadoPesquisaUOAlmoxarifado)
    	{
    		$this->addError('Não há Unidade Orçamentária com Tipo da Execução de Almoxarifado.');
        	$this->GenerateErrors();
    	}
    	else
    	{
		    $fields = array(
		        new MSelection('idUoExecutante','','Almoxarifado',$resultadoPesquisaUOAlmoxarifado)
		    );
		
		    $this->SetFields($fields);
        
			$buttons = array(
		    	new FormButton('btnPost', 'Gravar'),
		        );
			$this->SetButtons($buttons);
		}
    }

    function btnPost_click()
    {
    	if(!Form::getFormValue('idUoExecutante')){
    		$this->addError('Informe uma UO executante.');
    	}

    	if ($this->errors != '') //Caso haja algum erro, exibe na tela.
	            $this->GenerateErrors();
        else{
		    $data = $this->getData();
		    try
		    {
		        $acesso = $this->objUoAlmoxarifado->getAcessoAlmoxarifado('new');
		        $acesso->idUoExecutante = $data->idUoExecutante;
		        $acesso->save();
		        $go = $this->manager->GetActionURL('adm','main:uo',$this->objUoAlmoxarifado->idUo, array('form'=>'acessoalmox'));
				if ($update)
				{
			        $this->manager->Information('Acesso atualizado com sucesso.', $go );
				}
				else
				{
			        $this->manager->Information('Acesso inserido com sucesso.', $go );
				}
		    }
		    catch ( Exception $e )
		    {
		        $this->AddError($e->getMessage());
		    }
	    }
    }

	function btnDel_click()
	{
		$action_sim = $this->manager->GetActionURL('adm','main:uo',$this->objUoAlmoxarifado->idUo,array('form'=>'acessoalmox','id'=>$this->getFormValue('id'),'conf'=>'sim','event'=>'btnDel:click'));
		$action_nao = $this->manager->GetActionURL('adm','main:uo',$this->objUoAlmoxarifado->idUo,array('form'=>'acessoalmox'));

		$conf = $this->GetFormValue('conf');

		if ($conf == 'sim')
		{
            try 
            {
    			$this->objUoAlmoxarifado->deleteAcessoAlmoxarifado($this->getFormValue('id'));
				$this->manager->Information('Acesso excluído com sucesso!',$this->manager->GetActionURL('adm','main:uo',$this->objUoAlmoxarifado->idUo,array('form'=>'acessoalmox')));
			}
            catch ( Exception $e )
			{
				$this->manager->Error($e->getMessage());
			}
					
	   }
	   else
	   {
           $acesso = $this->objUoAlmoxarifado->getAcessoAlmoxarifado($this->getFormValue('id'));
		   $this->manager->Question("Tem certeza que deseja excluir o acesso para ".$acesso->uoexecutante->nome."?",$action_sim,$action_nao);
		}
	}

 }
?>
