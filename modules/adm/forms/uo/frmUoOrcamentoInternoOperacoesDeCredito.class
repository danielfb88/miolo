
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmUoOrcamentoInternoOperacoesDeCredito extends Form
{
    
    protected $objUo;
	
    function __construct($objUo)
    {
       $this->objUo = $objUo;
       $this->Form('Operações de Crédito');
       $this->EventHandler();
    }

	function CreateFields()
        {
        $cf = new MCurrencyFormatter();
        $orcamento = $this->objUo->getOrcamento($this->getFormValue('idRubrica'),$this->getFormValue('ano'));
        $saldo = $cf->formatWithSymbol($cf->toDecimal($orcamento->getSaldo()));
//taka

	$credito = $cf->formatWithSymbol($cf->toDecimal($orcamento->getCredito()));
	$previsaodebito = $cf->formatWithSymbol($cf->toDecimal($orcamento->getprevisaoDebito()));
//taka

        $valor = new MCurrencyField('valor','','Valor');
        $fields = array(
            new MHiddenField('idRubrica',$this->getFormValue('idRubrica')),
            new MHiddenField('ano',$this->getFormValue('ano')),
//taka 
           
	new MTextLabel('credito',$credito,'Crédito'),
	new MTextLabel('previsaodebito',$previsaodebito,'Previsão de Débito'),

//taka
        new MTextLabel('saldo',$saldo,'Saldo'),    
	new MSelection('tipoLancamento','','Operação',array('8'=>'Suplementação de Crédito','3'=>'Estorno de Crédito')),
            $valor,
            new MMultiLineField('obs','','Obs',200,3,50)
        );
        $this->SetFields($fields);
        
        $validators = array(
			new MRequiredValidator('valor'),
		);
        $this->SetValidators($validators);
	   
        $buttons = array
        (
            new MButton('btnIncluir', 'Enviar'),
        );
        $this->SetButtons($buttons);
	}

    function btnIncluir_click()
    {
        $data = $this->getData();
        $orcamento = $this->objUo->getOrcamento($data->idRubrica,$data->ano);
        if (!$data->tipoLancamento) $this->addError('Você deve escolher uma operação.');
        else
        {
            $cf = new MCurrencyFormatter();
	    if (substr_count($data->valor, ",") == 0)
            {
                $data->valor = str_replace(".",",",$data->valor);
            }
            else
            {
                $data->valor = str_replace(".","",$data->valor);
            }

            $data->valor = $cf->toDecimal($data->valor);
	    $estorno = false;

            switch ($data->tipoLancamento)
            {
                case 8:
                    $orcamento->addCredito($data->valor);
                    $msg = 'Crédito da uo '.$this->objUo->sigla.' suplementado em '.$data->valor.' reais.';
                break;	   
                case 3:
                    if ($data->valor > $orcamento->getSaldo())
                    {
                        $erroEstorno = true;
                    }
                    else
                    {
    					$estorno = true;
                        $orcamento->removeCredito($data->valor);
                        $msg = 'Crédito da uo '.$this->objUo->sigla.' estornado em '.$data->valor.' reais.';
                    }
                break;
            }

            $orcamento->setSaldo();
            if (($orcamento->getSaldo() < 0) && ($estorno) ) 
                $this->addError('O saldo não pode ser negativo.');
            else if ($erroEstorno)
                $this->addError("O Estorno de crédito não pode ser maior do que o saldo disponível no valor de ".$cf->formatWithSymbol($cf->toDecimal($orcamento->getSaldo())).".");               
            else
            {
                try 
                {
                    $orcamento->save();
                    $orcamento->Log(OP_UPD,$msg);
                    $this->objUo->addLancamento($data->tipoLancamento,$data->idRubrica,$data->valor,$data->obs);
                    $this->setFieldValue('tipoLancamento','');
                    $this->setFieldValue('valor','');
                    $this->addInfo("Operação realizada com sucesso.");
                }
                catch(Exception $e) {$this->manager->Error($e->getMessage());}
            }
        }
        $cf = new MCurrencyFormatter();
        $orcamento = $this->objUo->getOrcamento($this->getFormValue('idRubrica'),$this->getFormValue('ano'));
        $saldo = $cf->formatWithSymbol($cf->toDecimal($orcamento->getSaldo()));
        $this->setFieldValue('saldo',$saldo);
    }
} 
?>
