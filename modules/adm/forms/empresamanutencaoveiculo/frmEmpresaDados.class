
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmEmpresaDados extends Form
{

	protected $objEmpresa;
	
    function __construct($objEmpresa)
    {	
		$this->objEmpresa = $objEmpresa;
        $this->Form('Empresa');
        $this->EventHandler();
        $this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/mask.js'));
    }

    function CreateFields()
    {
		global $MIOLO;
		$fields = array(
		    new MTextField('nome','','Nome','20','Máx. 20 caracteres'),
			new MTextField('cnpj','','CNPJ','18','formato (10.000.000/0001-01)'),	
			new MTextField('razaoSocial','','Razão Social','40','Máx 40 caracteres'),
			new MTextField('rua','','Rua','50','Máx. 50 caracteres'),
			new MTextField('numero','','Número','5','Máx. 5 caracteres'),
			new MTextField('bairro','','Bairro','30','Máx. 30 caracteres'),
			new MHiddenField('idMunicipio'),
			new LookupTextField('lkpMunicipio','','Município','40'),
			new MTextField('cep','','CEP','9','Formato: 99999-999'),
			new MTextField('telefone','','Telefone','13','Formato: (99)9999-9999')
						);

		$buttons = new MButton('btnEnviar','Salvar');
		$this->SetFields($fields);
		$this->SetButtons($buttons);
		
		$this->nome->addAttribute('maxlength',20);
		$this->cnpj->addAttribute('maxlength',18);
		$this->cnpj->addAttribute('onKeyUp','makeMask(this, \'##.###.###/####-##\');');
		$this->cnpj->addAttribute('onBlur','makeMask(this, \'##.###.###/####-##\');');
		$this->razaoSocial->addAttribute('maxlength',40);
		$this->rua->addAttribute('maxlength',50);
		$this->numero->addAttribute('maxlength',5);
		$this->bairro->addAttribute('maxlength',30);
		$this->cep->addAttribute('maxlength',9);
		$this->cep->addAttribute('onKeyUp','makeMask(this, \'#####-###\');');
		$this->cep->addAttribute('onBlur','makeMask(this, \'#####-###\');');
		$this->telefone->addAttribute('maxlength',13);
		$this->telefone->addAttribute('onKeyUp','makeMask(this, \'(##)####-####\');');
		$this->telefone->addAttribute('onBlur','makeMask(this, \'(##)####-####\');');

		$this->SetFieldAttr('lkpMunicipio','module','common');
		$this->SetFieldAttr('lkpMunicipio','item','municipio');
		$this->SetFieldAttr('lkpMunicipio','event','filler');
		$this->SetFieldAttr('lkpMunicipio','related','idMunicipio,lkpMunicipio');

		$validators = array(
			new RequiredValidator('idMunicipio'),
			new RequiredValidator('lkpMunicipio'),
			new RequiredValidator('nome'),
			new CNPJValidator('cnpj'),
			new RequiredValidator('razaoSocial'),
			new RequiredValidator('rua'),
			new RequiredValidator('numero'),
			new RequiredValidator('bairro'),
			new CEPValidator('cep'),
			new RequiredValidator('telefone'),
			
							);
		$this->SetValidators($validators);
		$this->SetData();

    }

    function SetData()
    {
    	$data = $this->objEmpresa;
		$this->SetFieldValue('nome',$data->nome);
		$this->SetFieldValue('cnpj',$data->cnpj);
		$this->SetFieldValue('razaoSocial',$data->razaoSocial);
		$this->SetFieldValue('rua',$data->rua);
		$this->SetFieldValue('numero',trim($data->numero)); // seta o número no formulário e tiraa o espaço em branco que vem da base de dados 
		$this->SetFieldValue('bairro',$data->bairro);
		$data->getMunicipio();
		$municipio = $data->municipio->municipio;
		$idMunicipio = $data->municipio->idMunicipio;
		$this->SetFieldValue('idMunicipio',$idMunicipio);
		$this->SetFieldValue('lkpMunicipio',$municipio);
		$this->SetFieldValue('cep',$data->cep);
		$this->SetFieldValue('telefone','('.substr($data->telefone,0,2).')'.substr($data->telefone,2,4).'-'.substr($data->telefone,6,4));
    }
    function btnEnviar_click()
    {
		global $MIOLO;
		$numero = Form::GetFormValue('numero');
		$tel 	= Form::GetFormValue('telefone');
		if(!is_numeric($numero)){
			$this->addError("O campo número deve conter apenas números!");
		}
		else{
			if(!preg_match("/\([0-9][0-9]\)\ {0,1}[0-9]{4}-[0-9]{4}/i", $tel)){
				$this->addError("O campo deve estar neste formato (99)9999-9999");
			}
			else{	
					$data = $this->getData();		
					if($data->cnpj == $this->objEmpresa->cnpj)		
						$empresaCnpj->result = null;
					else
						$empresaCnpj = $this->objEmpresa->listByCnpj($data->cnpj);
	
					if ($empresaCnpj->result) // Se houver empresa com este cnpj
					{
						$this->AddError("Há registro de uma empresa com este cnpj no sistema. Não é possivel duplicá-lo");
					}
					else
					{
						$this->objEmpresa->setData($data);
						$var = $this->objEmpresa->checkSpace($this->objEmpresa);
						if ($var)
						{
							$this->AddError("Favor preencher corretamente o campo: ".$var);
						}
						else
						{
							$this->objEmpresa->setMunicipio($data->idMunicipio);
						try
						{
							$this->objEmpresa->Save();
							$msg = "Dados editados com sucesso";
							$this->manager->Information($msg);
						}
						catch(Exception $e)
						{
							$this->manager->Error($e->getMessage());
						}
					}
				}	
			}	
		}
    }

}
?>
