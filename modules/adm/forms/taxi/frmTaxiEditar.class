
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
MIOLO::Import('modules::adm::forms::taxi::frmTaxiPai');

class frmTaxiEditar extends frmTaxiPai
{

	protected $objTaxi;

	function __construct($objTaxi)
	{
		$this->objTaxi = $objTaxi;
		$this->Form('Dados do Taxi');
		$this->EventHandler();
	}

	function CreateFields()
	{
		global $MIOLO;

		$this->AddField(new TextLabel('dataIni','','Data Início','8'));
		$this->AddField(new MCalendarField('dataFim','','Data Fim', '8'));	   
		$this->AddField(new MCurrencyField('valor','','Valor','10'));
		  	
		$buttons = array(
			new FormButton("btnSalvar","Salvar")
		);

		$this->SetButtons($buttons);
		$this->valor->addAttribute('maxlength',8);
		$this->SetData();
	}
	
	public function btnSalvar_click()
	{
		$this->objTaxi->SetData($this->GetData());
        $cf = new MCurrencyFormatter();
        
        //aplicando a máscara no valor
        $mascara = array("R","$");
        $taxi->valor = str_replace($mascara, "", $taxi->valor);
        
		if (substr_count($this->objTaxi->valor, ",") == 0)
        {
			$this->objTaxi->valor = str_replace(".",",",$this->objTaxi->valor);
        }
        else
        {
            $this->objTaxi->valor = str_replace(".","",$this->objTaxi->valor);
        }

		$data = $this->GetData();
        $taxi = $this->manager->GetBusiness('adm','taxi');
        $taxi->SetData($data);

        $this->objTaxi->valor = $cf->toDecimal($this->objTaxi->valor);
        $inicio = $this->objTaxi->dataIni;
        $final = $this->objTaxi->dataFim;

        $partes_da_data = explode('/',$inicio);
        $datainicial =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];
        $partes_da_data = explode('/',$final);
        $datafinal =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];

		if (Form::GetFormValue('dataFim') == '') {
			$this->AddError("Selecione a Data Fim.");
		}
		else if (Form::GetFormValue('valor') == '') {
			$this->AddError("Informe o valor do Taxi.");
		}
		else if ($datafinal < $datainicial) {
			$this->AddError("A Data fim não deve ser anterior a Data Início.");
		}
		else if ($this->objTaxi->valor < 0) {
			$this->AddError("O valor do Taxi não pode ser negativo.");
		}
		else if ($this->objTaxi->valor == 0) {
			$this->AddError("Forneça um valor válido.");
		}
		else
		{
			try
			{
				$this->objTaxi->save();
				$this->objTaxi->Log(OP_UPD,"Dados do Taxi modificados");
				
				$go = $this->manager->GetActionURL('adm','main:taxi:find');
				$this->manager->information("Dados modificados com sucesso!",$go );
			}
			catch (Exception $e)
			{
				$this->addError($e->getMessage());
			}
		}
	}
}
?>
