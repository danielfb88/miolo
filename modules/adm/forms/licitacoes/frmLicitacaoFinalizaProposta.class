
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmLicitacaoFinalizaProposta extends Form
{
	protected $objLicitacao;

    function __construct($licitacao)
    {
		global $MIOLO;
        
        $this->objLicitacao = $licitacao;
        $this->Form(NULL);
        $this->EventHandler();        
    }

    function CreateFields()
    {
        global $MIOLO,$module,$item;
        
	    $buttons = Array(
			new FormButton('btnFinalizarProposta','Finalizar Propostas'),
	    );
    
	    $this->SetButtons($buttons);
    }

	function btnFinalizarProposta_click()
	{
		global $MIOLO, $module,$item, $page, $theme, $action;
	
			$query = $this->objLicitacao->listParticipantes($this->objLicitacao->idLicitacao);
			
			 foreach ($query->result as $key => $rs)
            {
                //$list[] = array($rs[0],$rs[1],$rs[2],$rs[3],$cf->formatWithSymbol($rs[3]*$cf->toDecimal($rs[4])));
             
                if ($this->objLicitacao->getTotalDePropostasNaoLancadas($query->result[$key][0]) == 0)
                {
					$cont = $cont+1;
				}
             //    var_dump('idfornecedor',$query->result[$key][0],'contador',$cont);
            }
			
			if ($cont < 1 || $cont == null)
				{
				$action = $this->manager->GetActionURL('adm','main:licitacoes',$this->objLicitacao->idLicitacao);
			$this->AddError("Nenhuma Proposta Foi Cadastrada",$action);			
				}
				
				elseif($this->objLicitacao->status != '2')
					{
					$this->AddError("Nenhuma Proposta Foi Cadastrada",$action);
				}else
				
					
	
				{
        $this->objLicitacao->alteraStatus('3');    
		try
		{
			$this->objLicitacao->save();
            $action = $this->manager->GetActionURL('adm','main:licitacoes',$this->objLicitacao->idLicitacao);
    		$this->manager->information("Inclusão de propostas concluida com sucesso.",$action);
		}
		catch (Exception $e)
		{
			$this->AddError("Informe o seguinte erro a equipe do CGCO: ".$e->getMessage());
		}
				}
	}
 }
?>
