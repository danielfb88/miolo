
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmLicitacaoEditar extends form
{
	protected $licitacao;
	
    function __construct($licitacao)
    {
		$this->licitacao = $licitacao;
		$this->Form('Editar Licitação');
        $this->EventHandler();
        $this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/mask.js'));
    }

    function CreateFields()
    {
        global $MIOLO;
       
        $modalidadeLicitacao = $this->manager->getBusiness('adm','modalidadelicitacao');     
        $modalidadeLicitacao = $modalidadeLicitacao->listAll();
    	$queryStatus = $this->licitacao->ListAllStatus();

        $tabelaGeral = $this->manager->getBusiness('common','tabelageral');
        $tiposDeEntrega = $tabelaGeral->listByTabela('AD_TIPOENTREGA');

        $optYesNo = array("1"=>"SIM","0"=>"NÃO");
		
		$numeroCompleto = $this->licitacao->numero;
		//retira sigla, espaco e /ano
		$numeroLicitacao = substr($numeroCompleto, strpos($numeroCompleto, " ") ? strpos($numeroCompleto, " ")+1 : 0); //retira sigla e espaco, por exemplo, "PR "
		$numeroLicitacao = substr($numeroLicitacao, 0, strpos($numeroLicitacao, "/") ? strpos($numeroLicitacao, "/") : strlen($numeroLicitacao)); //retira /ano, por exemplo, "/2012"
		
        $fields = array
        (
            new MTextLabel('dataCriacao',$this->licitacao->dataCriacao,'Criação',10),
            new TextField('dataAbertura',substr($this->licitacao->dataAbertura,0,10),'Abertura',10),
            new Selection('imediata',$this->licitacao->imediata,'Abert. Imediata',$optYesNo),
            new MTextField('horaAbertura',substr($this->licitacao->dataAbertura,11,5),'Hora Abertura',4,'Ex: 19:30'),
            new MTextField('numero',$numeroLicitacao,'Número',12),
            //new MTextField('numero',$this->licitacao->numero,'Número',12),
            new MSelection('status',$this->licitacao->status,'Status',$queryStatus),
            new MSelection('idModalidadeLicitacao',$this->licitacao->idModalidadeLicitacao,'Modalidade',$modalidadeLicitacao->result),
            new MTextField('validade',$this->licitacao->validade,'Validade',3,'dias'),
            new MSelection('tipoEntrega',$this->licitacao->tipoEntrega,'Entrega',$tiposDeEntrega->result),
            new MMultiLineField('obs',$this->licitacao->obs,'Observações','',3,50),
        );
		
        $this->SetFields($fields);
        
        $this->numero->addAttribute('maxlength', 7);
		$this->dataAbertura->addAttribute('maxlength', 10);
		$this->dataAbertura->addAttribute('onKeyUp','makeMask(this, \'##/##/####\');');
		$this->dataAbertura->addAttribute('onBlur','makeMask(this, \'##/##/####\');');
		$this->horaAbertura->addAttribute('maxlength', 5);
		$this->horaAbertura->addAttribute('onKeyUp','makeMask(this, \'##:##\');');
		$this->horaAbertura->addAttribute('onBlur','makeMask(this, \'##:##\');');
		$this->obs->addAttribute('maxlength', 1000);
		
	
        $buttons = array
		(
        	  new FormButton("btnSalvar","Salvar")
        );
        $this->SetButtons($buttons);
    }
	
	public function btnSalvar_click()
	{
        $data = $this->GetData();
       	$dt = explode("/",$data->dataAbertura);
		$d = $dt[0];
		$m = $dt[1];
		$y = $dt[2];
		
		$numero 		 = $this->GetFieldValue('numero');
		$dataAbertura 	 = $this->GetFieldValue('dataAbertura');
		$horaAbertura 	 = $this->GetFieldValue('horaAbertura');
		$assuntoProcesso = $this->GetFieldValue('assuntoProcesso');
		$modalidade 	 = $this->GetFieldValue('idModalidadeLicitacao');
		$imediata 		 = $this->GetFieldValue('imediata');
		$tipoEntrega 	 = $this->GetFieldValue('tipoEntrega');
		$validade 		 = $this->GetFieldValue('validade');
		$status 		 = $this->GetFieldValue('status');
		
		if(($numero <= 0) || (strlen($numero) == 0))
		{
			$this->AddError('Informe o número da licitação.');
		}
		elseif(!$dataAbertura)
		{
			$this->AddError('Informe a data da abertura.');
		}
		elseif($imediata=='')
		{			
			$this->AddError('Informe se a abertura será imediata.');
		}
		elseif(trim($horaAbertura)=='')
		{
			$this->AddError('Informe a hora de abertura.');
		}
		//elseif( !preg_match("/^[0-2][0-3]:[0-5][0-9]/" ,$horaAbertura) )
		elseif( !$this->checktime($horaAbertura) )
		{
			$this->AddError('A hora de abertura está inválida.');
		}
		elseif(!$modalidade)
		{
			$this->AddError('Informe a modalidade.');
		}
		elseif(trim($validade) == '')
		{
			$this->AddError('Informe a validade em dias.');
		}
		elseif($validade <= 0)
		{
			$this->AddError('Informe uma validade maior que 0.');
		}
		elseif( preg_match("/\D/", $validade) )
		{
			$this->AddError('A validade está errada, informe em número de dias.');
		}
		elseif(!$tipoEntrega)
		{
			$this->AddError('Informe o tipo de entrega.');
		}
		elseif(!$status)
		{
			$this->AddError('Informe o status.');
		}
		elseif((strlen($d) != 2) || (strlen($m) != 2) || (strlen($y) != 4) || (!checkdate($m,$d,$y))){
			$this->AddError('Campo ABERTURA inválido');
		}else{
       if((!is_numeric($data->validade)) || (int)$data->validade <= 0){
			$this->AddError('Campo VALIDADE inválido');
		}else{
        if ($this->licitacao->checkNumero($data->numero) && ($this->licitacao->numero != $data->numero))
        {
            $this->manager->error("O número ".$data->numero." já foi utilizado em outra licitação.");
        }
        else
        {
        //para atribuir a sigla ao numero da licitacao, o formato do numero é PR xxxx/aaaa, onde xxxx é o numero da licitacao de 1 a 7 digitos
        	switch ($modalidade)
			{
			case '1' :
				$sigla = "CV";
				break;
			case '2' :
				$sigla = "TP";
				break;
			case '3' :
				$sigla = "CC";
				break;
			case '4' :
				$sigla = "DL";
				break;
			case '5' :
				$sigla = "PR";
				break;
			case '6' :
				$sigla = "CS";
				break;
			case '7' :
				$sigla = "LN";
				break;
			case '8' :
				$sigla = "IN";
				break;
			case '9' :
				$sigla = "CE";
				break;
			case '10' :
				$sigla = "RP";
				break;
			case '500' :
				$sigla = "PL";
				break;
			}

			$numero = $sigla." ".trim($numero)."/".date("Y");
        	$data->numero = $numero;
        	
			$statusAnterior = $this->licitacao->status;
			$data->dataAbertura = $data->dataAbertura." ".$data->horaAbertura.":00";
			$this->licitacao->setImediata($data->imediata);
			$this->licitacao->SetData($data);
			try
			{
				$this->licitacao->save();
				$this->licitacao->Log(OP_UPD,"Licitacao ".$this->licitacao->idLicitacao.". Dados modificados. Status: ".$this->licitacao->status.".");
			}
			catch (Exception $e)
			{
				$this->addError($e->getMessage());
			}			
			if($data->status != $statusAnterior && $data->status == 1)
			{
				$msg = 'Deseja apagar o mapa da licitação?';
				$action_sim = $this->manager->GetActionURL('adm','main:licitacoes','',array('form'=>'editar','item'=>$this->licitacao->idLicitacao,'event'=>'btnDeleteMapa:click','apagar'=>'sim'));
				$action_nao = $this->manager->GetActionURL('adm','main:licitacoes','',array('form'=>'editar','item'=>$this->licitacao->idLicitacao,'event'=>'btnDeleteMapa:click','apagar'=>'nao'));
				$this->manager->Question($msg,$action_sim,$action_nao);
			}
			$this->manager->Information("Dados da licitação modificados.",$this->manager->getActionUrl('adm','main:licitacoes',$this->licitacao->idLicitacao,array('form'=>'item')));
        }
		}
	}
	}
	
	function btnDeleteMapa_click()
	{
		$conf = $this->GetFormValue('apagar');
		$idLicitacao = $this->GetFormValue('item');
	    if ($conf == 'sim')
		{
			$licitacao = $this->manager->getBusiness('adm', 'licitacao', $idLicitacao);
			$licitacao->deleteItemDoMapa('all');
		}
		$this->manager->Information("Dados da licitação modificados.",$this->manager->getActionUrl('adm','main:licitacoes',$idLicitacao,array('form'=>'item')));
	}
	
	// valida hora 23:59
	function checktime($time)
	{
	   list($hour,$minute) = explode(':',$time);
	 
	   if ($hour > -1 && $hour < 24 && $minute > -1 && $minute < 60)
	   {
		  return true;
	   }
	} 
	
 }
?>
