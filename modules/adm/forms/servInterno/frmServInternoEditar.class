
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmMotoristaEditar extends Form
{

	protected $objMotorista;
	
    function __construct($objMotorista)
    {
		$this->objMotorista = $objMotorista;
        $this->Form('Dados do Motorista');
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO;
		$fields = array
			(
			  new HiddenField('idPessoa'),
			  new LookupTextField('lkpPessoa','','Nome',50),
        	  new TextField('carteiraHab','','Carteira de Habilitação','15','Máx. 15 caracteres'),
			  new Selection('categoria','','Categoria'),
			  new CalendarField('dataValidade','','Data de Validade'),
            );
		
        $this->SetFields($fields);
        $this->carteiraHab->AddAttribute('maxlength',15);
	   
	   $this->SetFieldAttr('lkpPessoa','module','common');
       $this->SetFieldAttr('lkpPessoa','item','pessoa');
       $this->SetFieldAttr('lkpPessoa','event','filler');
       $this->SetFieldAttr('lkpPessoa','related','idPessoa,lkpPessoa');
	   
	   $tabelaGeral = $this->manager->getBusiness('common','tabelageral');
	   $query = $tabelaGeral->listByTabela('AD_CATEGORIAHABILITACAO');
	   $this->SetFieldAttr('categoria','options',$query->result);
		
		$buttons = array
			(
        	   new FormButton('btnSalvar', 'Salvar')
            );
		$this->SetButtons($buttons);

		$validators = array
			(
			   new RequiredValidator('idPessoa'),
			   new RequiredValidator('carteiraHab'),
			   new RequiredValidator('categoria'),
			   new RequiredValidator('dataValidade'),
		    );
		$this->SetValidators($validators);
		$this->SetData();
    }

	function SetData()
	{
		$data = $this->objMotorista;
		$this->SetFieldValue('idPessoa',$data->pessoa->idpessoa);
		$this->SetFieldValue('lkpPessoa',$data->pessoa->nome);
		$this->SetFieldValue('carteiraHab',$data->carteiraHab);
		$this->SetFieldValue('categoria',$data->categoria);
		$this->SetFieldValue('dataValidade',$data->dataValidade);
	}
	
	public function btnSalvar_click()
	{
		$data = $this->GetData();
		$this->objMotorista->SetData($data);
		try
		{
			$this->objMotorista->save();
			$this->objMotorista->Log(OP_UPD,"Dados de motorista modificados");
		}
		catch (Exception $e)
		{
			$this->addError($e->getMessage());
		}
		$this->objMotorista->retrieveAssociation('pessoa');
	}
 }
?>
