
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
/**
 * Formulário para relatório de ficha financeira
 * 
 */
class frmRepFechamentoAlmoxarifado extends Form
{
    function __construct()
    {
    	global $MIOLO, $item;
        $this->Form('Relatório Fechamento Almoxarifado');
        $this->SetClose($this->manager->GetActionURL('adm','main:relatorios'));
        $this->EventHandler();
    }

    function CreateFields()
    {
        global $MIOLO  ;
        $executa = $this->manager->GetBusiness('adm','executa');
        $almox = $executa->getAlmoxarifados();
        $uo = $this->manager->GetBusiness('adm','uo');

        foreach ($almox->result as $almoxarifado)
        {
            $uo->getById($almoxarifado[0]);
            $select[$almoxarifado[0]] = $uo->nome;
        }

      	$fields = array(
            new MSelection('almox','','Almoxarifado',$select),
            new MTextField('elemento','','Elemento'),
            new MTextField('subelemento','','Subelemento'),
            new MCalendarField('calDataInicial','','Data Inicial'),
            new MCalendarField('calDataFinal','','Data Final'),
        );

       	$this->SetFields($fields);

        $button = array(
	    new FormButton('btnRelatorioJasper','Gerar Relatório','PDF'),
        );
       	$this->SetButtons($button);
        $this->defaultButton = false;
    }

    function btnRelatorioJasper_click()
    {
        global $MIOLO;
        $k = new MKrono();
        switch (true)
        {
            case (!Form::getFormValue('calDataInicial')):
                $this->addInfo('Selecione a data inicial.');
            return;
            case (!Form::getFormValue('calDataFinal')):
                $this->addInfo('Selecione a data final.');
            return;
            case (!Form::getFormValue('elemento')):
                $this->addInfo('Digite um elemento.');
            return;
            case (!Form::getFormValue('subelemento')):
                $this->addInfo('Digite um subelemento.');
            return;
            case (!Form::getFormValue('almox')):
                $this->addInfo('Selecione um almoxarifado.');
            return;
        }

	$dataInicio = Form::getFormValue('calDataInicial');
	$dataFim = Form::getFormValue('calDataFinal');

	$partes_da_data = explode('/',$dataInicio);
        $datainicial =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];
        $partes_da_data = explode('/',$dataFim);
        $datafinal =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];

	if($datainicial > $datafinal)
        {
	        $this->addError('É necessário que a data inicial seja inferior a final!');
        }
	else
	{
		$parameters['int_ID_UO'] = Form::getFormValue('almox');
        	$parameters['ID_ELEMENTO'] = Form::getFormValue('elemento');
	        $parameters['ID_SUBELEMENTO'] = Form::getFormValue('subelemento');
        	//$parameters['DATA_INI'] = $k->invertDate(Form::getFormValue('calDataInicial'));
		//$parameters['DATA_FIM'] = $k->invertDate(Form::getFormValue('calDataFinal'));
		$parameters['DATA_INI'] = Form::getFormValue('calDataInicial');
		$parameters['DATA_FIM'] = Form::getFormValue('calDataFinal');		
	        $parameters['int_ID_USUARIO'] = $MIOLO->login->idkey; 
        	$parameters['URL_LOGO'] = $MIOLO->GetConf('home.url');
        	//$parameters['INSTITUICAO'] = $MIOLO->GetConf('instituicao.nome');
	        $parameters['str_HEADER_DIR'] = $MIOLO->GetConf('home.modules') . '/common/reports/';
        	$report = new MJasperReport('sigaept');
	        $report->Execute('adm', 'FechamentoAlmoxarifado', $parameters);
	}
    }
}
?>
