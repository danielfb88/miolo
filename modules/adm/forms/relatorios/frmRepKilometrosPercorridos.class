
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmRepKilometrosPercorridos extends Form
{	
	protected $veiculo;
    
    function __construct()
    {
        global $MIOLO;
        $this->veiculo = $MIOLO->getBusiness('adm','veiculo');
        $this->Form('Relatório de Quilômetros Percorridos');
        $this->EventHandler();       
    }

	function CreateFields()
	{		
		$fields = Array(
			new MCalendarField('dataInicio','','Data Inicial',10,'informe a data inicial do relatório.'),
			new MCalendarField('dataFim','','Data Final',10,'informe a data final do relatório.'),
		);
		
		$this->SetFields($fields);
		$buttons = Array
		(
			new FormButton('btnGerarRelatorio', 'Gerar Relatório','pdf'),
			new FormButton('btnGerarCSV', 'Gerar Planilha')
		);
		$this->SetButtons($buttons);
	}



	function btnGerarRelatorio_click()
	{	global $MIOLO, $module, $item;

		$data = $this->getData();		
		$veiculo = $this->veiculo;	
		$placas  = $veiculo->listAllByData($data->dataInicio,$data->dataFim)->result;

		$partes_da_data = explode('/',$data->dataInicio);
                $datainicial =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];
                $partes_da_data = explode('/',$data->dataFim);
                $datafinal =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];

                if($data->dataInicio == '' || $data->dataFim == '')
                {
                        $this->addError('Favor Selecionar as Datas de Início e Término do Relatório.');
                }
                else if($datainicial > $datafinal)
                     {
                           $this->addError('É necessário que a data inicial seja inferior a final!');
                     }
                    else
                    {

			if(is_array($placas))
			{
                 
			   foreach($placas as $aux)
			   {
			    	$placa[]           = $aux[0];
			    	$odometroSaida[]   = $aux[1];
			    	$odometroChegada[] = $aux[2];
			   }
		   
	
			   $report = new MJasperReport('sigaept');
			   $parameters['dataInicio'] 	= Form::GetFormValue('dataInicio');
			   $parameters['dataFim'] 		= Form::GetFormValue('dataFim'); 
  			   $parameters['SUBREPORT_DIR']	= $MIOLO->GetConf('home.modules');
			   $parameters['int_pIdUsuario']	= $MIOLO->login->idkey;
		  	   $parameters['pURL']		= $MIOLO->GetConf('home.url');

			   $report->Execute('adm', 'KMpercorridos', $parameters);

		       }
		       else 
	 	       {
			 	$this->addError('Nenhum veículo foi utilizado no período de '.$data->dataInicio.' a '.$data->dataFim.'. <br>Portanto, nenhum relatório será gerado!');	
		       }
		  }

    }

	function btnGerarCSV_click()
	{
		$data = $this->getData();		

		$veiculo = $this->veiculo;	
		$placas  = $veiculo->listAllByData($data->dataInicio,$data->dataFim);//->result;
		
		$partes_da_data = explode('/',$data->dataInicio);
                $datainicial =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];
                $partes_da_data = explode('/',$data->dataFim);
                $datafinal =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];

                if($data->dataInicio == '' || $data->dataFim == '')
                {
                        $this->addError('Favor Selecionar as Datas de Início e Término do Relatório.');
                }
                else if($datainicial > $datafinal)
                     {
                           $this->addError('É necessário que a data inicial seja inferior a final!');
                     }
                    else
                    {

			if(is_array($placas->result))
			{
				foreach($placas->result as $aux)
				{
				    	$placa[]           = $aux[0];
				    	$odometroSaida[]   = $aux[1];
				    	$odometroChegada[] = $aux[2];
				}
		    
			    $dataRel[] = array('PLACA','MARCA','MODELO','QUILÔMETROS PERCORRIDOS');
			    foreach ($placa as $id => $p)
			    {
			    	$marca[]  = $veiculo->listMarcaByPlaca($p)->result; 	    		    	
			    	$modelo[] = $veiculo->listModeloByPlaca($p)->result; 

		    		$dataRel[] = array($p,
 		    				   $marca[$id][0][0],	    					   
						   $modelo[$id][0][0],
		    				   $odometroChegada[$id]-$odometroSaida[$id].' Km',
		    				   );	
		    					   
			    	$totalKilometros += $odometroChegada[$id]-$odometroSaida[$id];	    	
			    }
		  	          
			    $dataRel[] = array('TOTAL','','',$totalKilometros.' Km');			          
	        
		            $placas->result = $dataRel;
		 	    $placas->getCSV("Relatório de  Quilômetros percorridos- de ".$data->dataInicio." até ".$data->dataFim);
			}
			else 	
			{
			$this->addError('Nenhum veículo foi utilizado no período de '.$data->dataInicio.' a '.$data->dataFim.'. <br>Portanto, nenhum relatório será gerado!');	
			}				    	    
		}
		
	}
}
?>
