
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmRepReqPendente extends Form
{
	var $objTipoReq;
   
   function __construct()
   {
 	  global $MIOLO, $module, $self;
 	  $this->Form('Requisições Pendentes');
 	  $this->EventHandler();
   }

	function CreateFields()
	{
		global $MIOLO,$module,$self, $action, $auth;

		$this->objTipoReq = $MIOLO->GetBusiness($module,'tiporeq');		
		$lista = $this->objTipoReq->ListAll();		    	    

		for ($i=0; $i<count($lista->result); $i++){
			if (($lista->result[$i][1] <> 'ALMOXARIFADO') && ($lista->result[$i][1] <> 'COMPRA')
						&& ($lista->result[$i][1] <> 'SERVICO EXTERNO'))
			{			
				$options[$lista->result[$i][0]] = $lista->result[$i][1];
			}
		}	
			
		
		$fields = array(
			new MSelection('selTipoRequisicao','','Tipos de Requisição',$options,false),
			new CalendarField('dataInicio','','A partir de'),
            new CalendarField('dataFim','','Até'),
           
		);
		$this->SetFields($fields);

		$buttons = array(
			new FormButton('btnPost', 'Gerar Relatório', 'PDF'),
			new FormButton('btnGerarXls', 'Gerar Planilha')
		);
		$this->SetButtons($buttons);
	}

   function btnPost_click()
   {
		global $MIOLO, $module, $item;

		$inicio = Form::getFormValue('dataInicio');
        	$final = Form::getFormValue('dataFim');
		$tipoRequisicao = Form::GetFormValue('selTipoRequisicao');

	        $partes_da_data = explode('/',$inicio);
        	$datainicial =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];
	        $partes_da_data = explode('/',$final);
        	$datafinal =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];

		if($tipoRequisicao == '')
                {
                        $this->addError('Favor informar o tipo de requisição.');
                }
		else if($inicio == '' || $final == '')
        	     {
                  	   $this->addError('Favor Selecionar as Datas de Início e Término do Relatório.');
	             }
        	     else if($datainicial > $datafinal)
	                  {
                	     $this->addError('É necessário que a data inicial seja inferior a final!');
	                  }
			  else
		     	  {
     	                	$report = new MJasperReport('sigaept');
	                	$parameters['int_TIPOREQ']         = $tipoRequisicao;
	        	        $parameters['DATAINICIAL']         = $inicio;
        	        	$parameters['DATAFINAL']          = $final; 
	                	$parameters['SUBREPORT_DIR']    = $MIOLO->GetConf('home.modules');
        		        $parameters['int_ID_USUARIO']   = $MIOLO->login->idkey;
        	        	$parameters['URL_LOGO']             = $MIOLO->GetConf('home.url');
		                $report->Execute('adm', 'repRequisicaoPendente', $parameters);
		          }
   }
  
   function btnGerarXls_click()
   {
	        global $MIOLO, $module, $item;

		$inicio = Form::getFormValue('dataInicio');
                $final = Form::getFormValue('dataFim');
                $tipoRequisicao = Form::GetFormValue('selTipoRequisicao');

                $partes_da_data = explode('/',$inicio);
                $datainicial =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];
                $partes_da_data = explode('/',$final);
                $datafinal =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];

                if($tipoRequisicao == '')
                {
                        $this->addError('Favor informar o tipo de requisição.');
                }
                else if($inicio == '' || $final == '')
                     {
                           $this->addError('Favor Selecionar as Datas de Início e Término do Relatório.');
                     }
                     else if($datainicial > $datafinal)
                          {
                             $this->addError('É necessário que a data inicial seja inferior a final!');
                          }
                          else
                          {
		                $report = new MJasperReport('sigaept');
                		$parameters['int_TIPOREQ']         = Form::GetFormValue('selTipoRequisicao');
		                $parameters['DATAINICIAL']         = Form::GetFormValue('dataInicio');
                		$parameters['DATAFINAL']          = Form::GetFormValue('dataFim');
		                $parameters['SUBREPORT_DIR']    = $MIOLO->GetConf('home.modules');
                		$parameters['int_ID_USUARIO']   = $MIOLO->login->idkey;
		                $parameters['URL_LOGO']             = $MIOLO->GetConf('home.url');
				$report->Execute('adm', 'repRequisicaoPendenteXls', $parameters, null, xls);
			  }
   }

   function btnGerarCSV_click()
	{
		$objRequisicao = $this->manager->getBusiness('adm','requisicao');
	           
	    $tipoReq  	= $this->GetFormValue('selTipoRequisicao');
		$dataInicio = $this->GetFormValue('dataInicio');
		$dataFim 	= $this->GetFormValue('dataFim');
		
		$objTipoReq = $this->manager->getBusiness('adm','tiporeq');				
		$descReq = $objTipoReq->GetById($tipoReq)->descricao;
				
		$consulta = $objRequisicao->listByDataTipo($dataInicio, $dataFim, $tipoReq, $descReq);
	    		
	
	    if ( is_array($consulta->result) )
	 	{
			$resultAux[] = array('Nº REQ.','UNIDADE','DATA', 'VALOR ESTIMADO','VALOR REAL','STATUS');
			
			foreach ($consulta->result as $result)		  
	    	{
	    		if ($result[5] == '9')
				{
					$result[5] = 'AGUARDANDO AVALIAÇÃO DO GESTOR';
				}
				else if ($result[5] == 'D')
				{
					$result[5] = 'PAGAMENTO NÃO AUTORIZADO';
				}
	    		
	    		$resultAux[] = array($result[0],$result[1],$result[2],$result[3],$result[4],$result[5]);		
	    	}
		}
		else 
		{
			$consulta->result[] = ""; 
		}   
			    
	    $consulta->result = $resultAux;
		$consulta->getCSV("Relatório Requisições Pendentes: $dataInicio até $dataFim");	
	}   
}
?>
