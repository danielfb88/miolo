
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmNotaFiscalDados extends MForm
{
    protected $objNF;
    public function __construct($objNF)
    {
        global $MIOLO;
		$this->objNF = $objNF;
        parent::__construct('Nota Fiscal');
        $this->SetClose($MIOLO->GetActionURL('adm','main'));
        $this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/mask.js'));
	    $this->EventHandler();
    }    
    public function CreateFields()
    {
		global $MIOLO;
	
		$session = $MIOLO->getSession();
		$session->set('notaFiscal',$this->objNF->idNotaFiscal);
		$session->set('form',"editmandel");
		$grid = $this->manager->GetUI()->GetGrid('adm','gridManutencaoVeiculo');
       	$grid->SetTitle('Manutenções');

		$fields = array(
			new MHiddenField('placa'),
			new LookupTextField('lkpVeiculo','','Veículo','15'),
			new MHiddenField('idEmpresa'),
			new LookupTextField('lkpEmpresa','','Empresa','30'),
			new CalendarField('data','','Data',10),
			new CalendarField('dataNF','','Data',10),
			$grid,
			new Text('manutencao','<b>MANUTENÇÃO</b>'),
			new MHiddenField('idTipoManutencao'),
			new LookupTextField('lkpTManutencao','','Tipo de Manutencao',20),
			new MCurrencyField('valor','','Valor'),
			new MultiLineField('obs','','Obs','',3,50),
			new MTextField('valorTotal','','Total','9'),
		);

		$buttons = array(
			new MButton('btnManutencao','Cadastrar Manutenção'),
			new MButton('btnSalvarManutencao','Cadastrar Manutenção'),
			new MButton('btnEnviar','Finalizar')
						);

		$this->SetFields($fields);
		$this->SetButtons($buttons);
		
		
		$this->lkpVeiculo->addAttribute('readonly', true);
		$this->lkpEmpresa->addAttribute('readonly', true);
		$this->dataNF->addAttribute('readonly', true);
		
		$this->SetFieldAttr('lkpVeiculo','module','adm');
		$this->SetFieldAttr('lkpVeiculo','item','veiculo');
		$this->SetFieldAttr('lkpVeiculo','event','filler');
//		$this->SetFieldAttr('lkpVeiculo','related','placa,NULL,lkpVeiculo');
		$this->SetFieldAttr('lkpVeiculo','related','null,placa,lkpVeiculo,null');

		$this->SetFieldAttr('lkpEmpresa','module','adm');
		$this->SetFieldAttr('lkpEmpresa','item','empresamanutencaoveiculo');
		$this->SetFieldAttr('lkpEmpresa','event','filler');
		$this->SetFieldAttr('lkpEmpresa','related','idEmpresa,lkpEmpresa');
	
		$this->SetFieldAttr('lkpTManutencao','module','adm');
		$this->SetFieldAttr('lkpTManutencao','item','tipomanutencao');
		$this->SetFieldAttr('lkpTManutencao','event','filler');
		$this->SetFieldAttr('lkpTManutencao','related','idTipoManutencao,lkpTManutencao');

	
		$this->setButtonAttr('btnSalvarManutencao','visible',false);
		$this->SetFieldAttr('manutencao','visible',false);
		$this->SetFieldAttr('lkpTManutencao','visible',false);
		$this->SetFieldAttr('valor','visible',false);
		$this->SetFieldAttr('obs','visible',false);
		$this->SetFieldAttr('data','visible',false);
		$this->SetFieldAttr('dataNF','visible',true);
		$this->SetFieldAttr('valorTotal','readonly',true);
		$this->SetFieldValue('placa',$this->objNF->placa);
		$this->SetFieldValue('idEmpresa',$this->objNF->idEmpresa);
		$this->setFieldValue('lkpEmpresa',$this->objNF->empresa->nome);
		$this->SetFieldValue('lkpVeiculo',$this->objNF->veiculo->modelo);
		$this->setFieldValue('dataNF',$this->objNF->data);
		$this->SetFieldValue('valorTotal',$this->objNF->valorTotal);
		

	        $validators = array (
            new MRequiredValidator('placa'),
            new MRequiredValidator('idEmpresa'),
	    	new MRequiredValidator('data'),
	    	new MRequiredValidator('dataNF')
           		    );
           		    
        $this->SetValidators($validators);
        $this->setData();

    }
    
    function btnManutencao_click()
    {
		$data = $this->getData();
		$dataM = $data->dataNF;
		if ((strlen(trim($dataM)) == '0'))
		{
			$this->addError('Favor Informar corretamente a Data da Nota');
		}
		else	
		{
			$this->setButtonAttr('btnSalvarManutencao','visible',true);
			$this->setButtonAttr('btnManutencao','visible',false);
			$this->setFieldAttr('lkpTManutencao','visible',true);
			$this->setFieldAttr('valor','visible',true);
			$this->setFieldAttr('obs','visible',true);
		}
    }
    
    function btnSalvarManutencao_click()
    {
		global $MIOLO;
	
		$cf = new MCurrencyFormatter();
		$session = $MIOLO->getSession();
		$notaFiscal = $this->objNF->idNotaFiscal;
		$data = $this->getData();
		$data->valor = $cf->toDecimal($data->valor);
		$objManutencao = $MIOLO->GetBusiness('adm','manutencaoveiculo');
		$objManutencao->setData($data);
		$val = strlen(trim($objManutencao->valor));
		$idTipoManutencao = $this->getFormValue('idTipoManutencao');
		$objManutencao->setIdTipoManutencao($idTipoManutencao);
		$objManutencao->setIdNotaFiscal($notaFiscal);
		if (!$idTipoManutencao)
		{
			$this->addError('Favor informar corretamente o tipo de Manutenção');
		}
		elseif(($val <= '0') || ($objManutencao->valor <= '0'))
		{
			$this->addError('Favor informar corretamente o Valor da Manutenção');
		}
		else
		{
			try
			{
				$objManutencao->Save();
				$valorTotal = $objManutencao->valor + $this->objNF->valorTotal;
				$this->objNF->valorTotal = $valorTotal;
				$this->objNF->Update();
				$msg = "Manutenção Cadastrada com sucesso. Para finalizar clique em 'finalizar'";
				$MIOLO->Information($msg);
			}
			catch(Exception $e)
			{
				$this->manager->Error($e->getMessage());
			}
		}
    }
    function btnEnviar_click()
    {
		global $MIOLO;
	
		$data = $this->getData();
		$data->data = $data->dataNF;
		$objNotaFiscal = $this->objNF;
		$objNotaFiscal->setData($data);	
		
		
		if($data->lkpVeiculo == null)
		{
			$this->addError('Favor informar corretamente o Veículo');
		}
		elseif($data->lkpEmpresa == null)
		{
			$this->addError('Favor informar corretamente a Empresa');
		}
		else
		{
			try
			{
				$objNotaFiscal->Update();
				$msg = "Nota Fiscal alterada com sucesso";
				$MIOLO->Information($msg,$this->manager->GetActionURL('adm','notafiscalmanutencaoveiculo:find',$objNotaFiscal->idNotaFiscal));
			}
			catch(Exception $e)
			{
				$this->manager->Error($e->getMessage());
			}
		}
	}    
}
?>
