
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmNovoMaterial extends MCompoundForm
{
    protected $oid;
    protected $material;
    function __construct($objMaterial)
    {
        $this->material = $objMaterial;
        parent::__construct();
        $this->SetTitle("Sugestão de novo material [{$this->material->idNovoMaterial}]");
        $this->SetIcon($this->manager->GetUi()->GetImage('adm','tools1.png'));
        $this->SetClose($this->manager->GetActionURL('adm','main:material:find'));
    }
    function CreateFields()
    {
        $material = $this->material;
        $ui = $this->manager->GetUI();
        $form = MForm::GetFormValue('form');
        switch ($form)
        {
            case 'dados' :
                    $this->_form[0] = $ui->GetForm('adm','frmNovoMaterialDados',$material,'novomaterial');
            break;
            case 'excluir' :
                    $this->_form[0] = $ui->GetForm('adm','frmNovoMaterialDel',$material,'novomaterial');
            break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($this->manager->GetActionURL('adm','main:material',$material->idMaterial));
        }
        $action = $context->action;

        switch ($material->status)
        {
            case 1:
                $status = 'PEDIDO DE CADASTRO';
            break;
            case 2:
                $status = 'EM ANÁLISE';
            break;
            case 3:
                $status = 'CADASTRADO';
            break;
            case 4:
                $status = 'CANCELADO';
            break;
        }
        $material->retrieveAssociation('usuario');
        $solicitante = $material->usuario->pessoa->nome;
        $codigo = ($material->codmaterial) ? $material->codmaterial : 'NENHUM';
        $this->_info[] = new MTextLabel('txtStatus',$status,'Situação',array("1"=>"PEDIDO CADASTRADO"));
        $this->_info[] = new MTextLabel('txtCodigo',$codigo,'Código');
        $this->_info[] = new MTextLabel('txtSolicitante',$solicitante,'Solicitante');
     }
}
?>
