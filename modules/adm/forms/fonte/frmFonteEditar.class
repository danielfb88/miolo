
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmFonteEditar extends Form
{

    protected $objFonte;
	
    function __construct($objFonte)
    {
        $this->objFonte = $objFonte;
        $this->Form('Dados da Fonte');
        $this->EventHandler();
    }

     function CreateFields()
    {
        $fields = array (
	    new TextField('idFonte','','Fonte','10', 'Máx. 10 algarismos'),
	     new TextField('descricao','','Descrição','50','Máx. 50 caracteres'),
            new TextField('fontecompleta','','Fonte Completa','10', 'Máx. 10 algarismos'),
 	    new TextField('fonteresumida','','Fonte Resumida','3', 'Máx. 3 algarismos'),
           
	   
        );
		
        $this->SetFields($fields);

	$this->idFonte->addAttribute('maxlength',10);
	$this->descricao->addAttribute('maxlength',50);
	$this->fontecompleta->addAttribute('maxlength',10);
	$this->fonteresumida->addAttribute('maxlength',3);
		
	$buttons = array (
            new FormButton('btnSalvar', 'Salvar')
        );
        $this->SetButtons($buttons);

	$this->setFieldAttr('idFonte','readonly',True);

        $validators = array (
            new RequiredValidator('descricao'),
	    new RequiredValidator('fontecompleta'),
	    new RequiredValidator('fonteresumida'),	
        );

        $this->SetValidators($validators);
        $this->SetData();
    }

    function SetData()
    {
        $data = $this->objFonte;
        $this->SetFieldValue('idFonte', $data->idFonte);
        $this->SetFieldValue('descricao', strtoupper($data->descricao));
	$this->SetFieldValue('fontecompleta', $data->fontecompleta);
	$this->SetFieldValue('fonteresumida',$data->fonteresumida);
    }
	
	public function btnSalvar_click()
	{
		$descricao = Form::GetFormValue(descricao);
		$fontecom = Form::GetFormValue(fontecompleta);
		$fonteres = Form::GetFormValue(fonteresumida);

		//VALIDACAO DESCRICAO
		if( strlen(trim($descricao)) < 5){
			$this->AddError("Descreva melhor a fonte criada.");
		}
		//VALIDACAO FONTE COMPLETA
		elseif(!is_numeric($fontecom)){
			$this->AddError("A fonte completa deve ser composta apenas por números.");
		}
		elseif( (strlen(trim($fontecom)) < 5) or (strlen($fontecom)>10)){
			$this->AddError("A fonte completa deve possuir mais algarismos.");
		}

		//VALIDACAO FONTE RESUMIDA
		elseif(!is_numeric($fonteres)){
			$this->AddError("A fonte resumida deve ser composta apenas por números.");
		}
		elseif( strlen(trim($fonteres)) < 2){
			$this->AddError("A fonte resumida deve possuir mais algarismos.");
		}
		else
		{
			$this->objFonte->SetData($this->GetData());

			try
			{
				$this->objFonte->save();
				$this->objFonte->Log(OP_UPD,"Dados de fonte modificados");
				$go = $this->manager->GetActionURL('adm','main:fonte',$this->objFonte->idFonte);
				$this->manager->Information('Fonte alterada com sucesso',$go);
			}
			catch (Exception $e)
			{
				$this->addError($e->getMessage());
			}
		}
	}
}
?>
