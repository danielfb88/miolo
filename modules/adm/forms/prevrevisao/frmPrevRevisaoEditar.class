
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmPrevRevisaoEditar extends Form
{

	protected $objPR;
	
    function __construct($objPR)
    {	
		$this->objPR = $objPR;
        $this->Form('Previsão');
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO;

		$situacao = array(
				"1"=>"PREVISTA",
				"2"=>"FINALIZADA");

		$fields = array(
		new MHiddenField('placa'),
		new LookupTextField('lkpVeiculo','','Veículo','40'),
		new MCalendarField('dataPrevista','','Data Prevista','10'),
		new MSelection ('situacao',$this->objPR->situacao,'Situação',$situacao),
		new MultiLineField('obs','','OBS')
					);

	$buttons = new MButton('btnEnviar');
	$this->SetFields($fields);
	$this->SetButtons($buttons);
	
	$this->lkpVeiculo->addAttribute('readonly', true);
	$this->obs->addAttribute('maxlength', 100);

	$this->SetFieldAttr('lkpVeiculo','module','adm');
	$this->SetFieldAttr('lkpVeiculo','item','veiculo');
	$this->SetFieldAttr('lkpVeiculo','event','filler');
	$this->SetFieldAttr('lkpVeiculo','related','null,placa,lkpVeiculo,null');

	$this->SetFieldValue('placa',$this->objPR->placa);
	$this->SetFieldValue('lkpVeiculo',$this->objPR->placa);
	$this->SetFieldValue('dataPrevista',$this->objPR->dataPrevista);
	$this->SetFieldValue('obs',$this->objPR->obs);

    }

    function btnEnviar_click()
    {
		global $MIOLO;
		if(Form::GetFormValue('situacao') == 1){ //prevista
			if( ($this->invertDate(Form::GetFormValue('dataPrevista'))) < (date("Ymd")) ) //verifica se a data da previsao é posterior a data atual
			{
				$this->AddError('Data inválida, a data deve ser posterior ou igual a data de hoje.');
			}
		}
		elseif(Form::GetFormValue('situacao') == "")
		{
			$this->AddError('Informe a situação da previsão.');
		}
		else
		{
			$data = $this->getData();
			$this->objPR->setData($data);
			try
			{
				$this->objPR->Save();
				$msg = "Previsão Editada com sucesso";
				$this->manager->Information($msg,$this->manager->GetActionURL('adm','prevrevisao:find'));
			}
			catch(Exception $e)
			{
				$this->manager->Error($e->getMessage());
			}
		}
   }
   
   function invertDate($datainv)
	{//recebe a data e o separador

		$ano	=substr("$datainv",6, 4);
		$mes	=substr("$datainv",3, 2);
		$dia	=substr("$datainv",0, 2);
		$datainv="$ano$mes$dia";
		
		return $datainv;
	}
   
}
?>
