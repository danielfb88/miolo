
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class frmIrrfDados extends MForm
{
	protected $objIrrf;
	
    function __construct($objIrrf)
    {
		$this->objIrrf = $objIrrf;
        parent::__construct('Alterar IRRF');
        $this->eventHandler();
    }
	
    
    function createFields()
    {
        global $MIOLO;
       	     
		$fields = array(
				new MTextField('idIrrf','','Código', 4),
				new MCalendarField('dataIni','','Data Início', 10),
				new MCalendarField('dataFim','','Data Fim',10),
				new MTextField('aliquota','','Alíquota',1, 'Máx. 1 número'),
				new MCurrencyField('ate','','Valor Máximo',20),
				new MTextField('percentual','','Percentual',6),
				new MCurrencyField('deducao','','Dedução',20),
        );
		
        $this->setFields($fields);
		$this->setFieldAttr('idIrrf', 'readonly', true);
		$this->aliquota->addAttribute('maxlength',1);
		
		$buttons = array(new MButton('btnSalvar', 'Salvar'));
		$this->setButtons($buttons);

		$validators = array
			(
				new MRequiredValidator('dataIni'),
				new MRequiredValidator('dataFim'),
				new MRequiredValidator('aliquota'),
				new MRequiredValidator('ate'),
				new MRequiredValidator('percentual'),
				new MRequiredValidator('deducao'),
		    );
		$this->setValidators($validators);
		$this->setData();
    }
	
    
	function setData()
	{
		$data = $this->objIrrf;
		$this->setFieldValue('idIrrf',$data->idIrrf);
		$this->setFieldValue('dataIni',$data->dataIni);
		$this->setFieldValue('dataFim',$data->dataFim);
		$this->setFieldValue('aliquota',$data->aliquota);
		$this->setFieldValue('ate',$data->ate);
		$this->setFieldValue('percentual',$data->percentual);
		$this->setFieldValue('deducao',$data->deducao);
	}
	
	
	public function btnSalvar_click()
	{
		global $MIOLO , $page, $module;
		$data = $this->getData();
		$this->objIrrf->setData($data);
		$cf = new MCurrencyFormatter();
		//$this->objIrrf->ate = $cf->toDecimal($this->objIrrf->ate);
		//$this->objIrrf->deducao = $cf->toDecimal($this->objIrrf->deducao);
				$this->objIrrf->ate =  $cf->removePrefixAndSuffix($this->objIrrf->ate,'REAL');
		$this->objIrrf->deducao = $cf->removePrefixAndSuffix($this->objIrrf->deducao,'REAL');
	
		$this->objIrrf->ate = str_replace(".","",$this->objIrrf->ate);
		$this->objIrrf->deducao = str_replace(".","",$this->objIrrf->deducao);
		
		$this->objIrrf->ate = str_replace(",",".",$this->objIrrf->ate);
		$this->objIrrf->deducao = str_replace(",",".",$this->objIrrf->deducao);
		
		$inicio = $this->objIrrf->dataIni;
        $final = $this->objIrrf->dataFim;

        $partes_da_data = explode('/',$inicio);
        $datainicial =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];
        $partes_da_data = explode('/',$final);
        $datafinal =  $partes_da_data[2].'/'.$partes_da_data[1].'/'.$partes_da_data[0];

        if ($datainicial >= $datafinal)
        {
        	$this->addError('É necessário que a data inicial seja inferior a data final!');
        }		
        elseif(!preg_match("/^[0-9]/" ,$this->objIrrf->aliquota))
        {
        	$this->AddError('O campo "Alíquota" deve conter no máximo 1 caracter.');
        }
		elseif( Form::GetFormValue('percentual') <= 0 )
        {
            $this->AddError('Informe um percentual válido.');
        }
       	elseif( $this->objIrrf->deducao <= 0 )
        {
        	$this->AddError('Informe uma dedução válida.');
        }
		else
		{
			try {
				$this->objIrrf->save();
				$go = $MIOLO->getActionURL('adm', 'main:irrf:find', $this->objIrrf->idIrrf);
				$this->manager->Information('Alíquota do IRRF alterada com sucesso.',$go);
			}catch (Exception $e){
				$this->addError($e->getMessage());
			}
		}
	}
 }
?>
