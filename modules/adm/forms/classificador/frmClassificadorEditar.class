
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmClassificadorEditar extends Form
{
    protected $objClassificador;
	
    function __construct($objClassificador)
    {
        $this->objClassificador = $objClassificador;
        $this->Form('Dados do Classificador');
        $this->EventHandler();
    }

    function CreateFields()
    {
        global $MIOLO;
	$fields = array	(
            new TextField('idClassificador','','Classificador','20'),
            new TextField('descricao','','Descrição','50','Máx. 50 caracteres'),
        );
        $this->SetFields($fields);
	
	$this->descricao->addAttribute('maxlength',50);

        $this->SetFieldAttr('idClassificador', 'readonly', true);
		
        $buttons = array (
            new FormButton('btnSalvar', 'Salvar')
        );
        $this->SetButtons($buttons);

        $validators = array (
            new RequiredValidator('idClassificador'),
            new RequiredValidator('descricao'),
        );
        $this->SetValidators($validators);
        $this->SetData();
    }

    function SetData()
    {
        $data = $this->objClassificador;
        $this->SetFieldValue('idClassificador',strtoupper($data->idClassificador));
        $this->SetFieldValue('descricao',strtoupper($data->descricao));
    }
	
    public function btnSalvar_click()
    {
	if( strlen(trim(Form::GetFormValue('descricao'))) < 3 )
	{
		$this->AddError('Informe corretamente a descrição.');
	}
	else
	{
		$this->objClassificador->SetData($this->GetData());
		try
		{
		    $this->objClassificador->save();
		    $this->objClassificador->Log(OP_UPD,"Dados de classificador modificados");
		    $go = $this->manager->GetActionURL('adm','main:classificador',$this->objClassificador->idClassificador);
		    $this->manager->Information('Classificador alterado com sucesso',$go);             
		}
		catch (Exception $e)
		{
		    $this->addError($e->getMessage());
		}
	}
    }
}
?>
