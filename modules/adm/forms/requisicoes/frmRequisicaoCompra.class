
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
MIOLO::Import('extensions::class.phpmailer.php','PHPMailer');
class frmRequisicaoCompra extends Form
{
	protected $objRequisicao;

	function __construct($objRequisicao)
	{
		$this->objRequisicao = $objRequisicao;
		$this->Form('Requisição de Compra de Material');
		$this->EventHandler();
	}
	function CreateFields()
	{
		$ui = $this->manager->getUi();
		$login = $this->manager->GetLogin();
		$idUsuario = $login->idkey;

		$objUO = $this->manager->GetBusiness('adm','uo');
		$opt = $objUO->listUosOrdemNome();

		switch ($this->objRequisicao->status)
		{
			case '1':
				$this->objRequisicao->getUoRequisitante();
				if ($this->objRequisicao->idUsuarioRequisitante == $idUsuario)
				{
					$this->AddField($ui->GetGrid('adm','gridRequisicaoCompraPendente',$this->objRequisicao));
					$this->addField(new MMultiLineField('justificativa','','Justificativa',200,3,50));
					$this->addField(new MSeparator('DADOS DE ENTREGA'));
					$this->addField(new MTextField('localEntrega','','Local',40));
					$this->addField(new MMultiLineField('obs','','Obs',200,3,50));
					$this->addValidator(new MRequiredValidator('localEntrega'));
					$this->addValidator(new MRequiredValidator('justificativa'));
					$this->AddButton(new MButton('btnConfirmarSolicitar', 'Enviar'));

				}
				else
				{
					$this->AddField($ui->GetGrid('adm','gridRequisicaoCompra',$this->objRequisicao));
					$this->addField(new MMultiLineField('justificativa','','Justificativa',200,3,50));
					$this->addField(new MSeparator('DADOS DE ENTREGA'));
					$this->addField(new MTextField('localEntrega','','Local',40));
					$this->addField(new MMultiLineField('obs','','Obs',200,3,50));
					$this->setFieldAttr('justificativa','readonly',true);
					$this->setFieldAttr('localEntrega','readonly',true);
					$this->setFieldAttr('obs','readonly',true);
					$this->setFieldAttr('suplementar','readonly',true);
				}
				break;
			case '2':
				$this->AddField($ui->GetGrid('adm','gridRequisicaoCompra',$this->objRequisicao));
				$this->addField(new MMultiLineField('justificativa',$this->objRequisicao->justificativa,'Justificativa',200,3,50)); 
				$this->addField(new MSeparator('DADOS DE ENTREGA'));
				$this->addField(new MTextField('localEntrega',$this->objRequisicao->localEntrega,'Local',40));
				$this->addField(new MMultiLineField('obs',$this->objRequisicao->obs,'Obs',200,3,50));
				$this->setFieldAttr('justificativa','readonly',true); 
				$this->setFieldAttr('localEntrega','readonly',true);
				$this->setFieldAttr('obs','readonly',true);
				$this->objRequisicao->getUoRequisitante();
				if ($this->objRequisicao->uoRequisitante->isGestorOf($idUsuario))
				{
					$this->setTitle('Ações do gestor da UO:');
					$tipoAcao = array(""=>"","4"=>"AUTORIZAR","5"=>"DEVOLVER","6"=>"RECUSAR");
					$this->AddField(New MSeparator('AÇÕES DO GESTOR DA UO REQUISITANTE'));
					$this->AddField(New MSelection('acaoGestorUoReq','','Ação',$tipoAcao));
					$this->AddField(new MMultiLineField('motivoRejeicao','','Motivo da recusa','',3,50));
					$this->AddButton(new MButton('btnConfirmarAutorizar','Enviar'));
				}
				else
				{
					$url = $this->manager->GetActionURL('adm','main:requisicoes:find');
					$this->AddButton(new MButton('btnSair','Voltar',$url));
				}
				break;
			case 4:
			case 7:
				$this->AddField($ui->GetGrid('adm','gridRequisicaoCompra',$this->objRequisicao));
				$this->addField(new MMultiLineField('justificativa',$this->objRequisicao->justificativa,'Justificativa',200,3,50));
				$this->addField(new MSeparator('DADOS DE ENTREGA'));
				$this->addField(new MTextField('localEntrega',$this->objRequisicao->localEntrega,'Local',40));
				$this->addField(new MMultiLineField('obs',$this->objRequisicao->obs,'Obs',200,3,50));
				$this->setFieldAttr('justificativa','readonly',true);
				$this->setFieldAttr('localEntrega','readonly',true);
				$this->setFieldAttr('obs','readonly',true);
				$url = $this->manager->GetActionURL('adm','main:requisicoes:find');
				$this->AddButton(new MButton('btnSair','Voltar',$url));
				break;
			case 5:
			case 6:
				if ($this->objRequisicao->status == 6)
				{
					$this->AddField($ui->GetGrid('adm','gridRequisicaoCompra',$this->objRequisicao));
					$this->addField(new MMultiLineField('justificativa',$this->objRequisicao->justificativa,'Justificativa',200,3,50));
					$this->addField(new MSeparator('DADOS DE ENTREGA'));
					$this->addField(new MTextField('localEntrega',$this->objRequisicao->localEntrega,'Local',40));
					$this->addField(new MMultiLineField('obs',$this->objRequisicao->obs,'Obs',200,3,50));
					$this->setFieldAttr('justificativa','readonly',true); 
					$this->setFieldAttr('localEntrega','readonly',true);
					$this->setFieldAttr('obs','readonly',true);
					$url = $this->manager->GetActionURL('adm','main:requisicoes:find');
					$this->AddButton(new MButton('btnSair','Voltar',$url));
				}
				else
				{
					if ($this->objRequisicao->idUsuarioRequisitante == $idUsuario)
					{
						$this->AddField($ui->GetGrid('adm','gridRequisicaoCompraPendente',$this->objRequisicao));
						$this->addField(new MMultiLineField('justificativa',$this->objRequisicao->justificativa,'Justificativa',200,3,50));
						$this->addField(new MSeparator('DADOS DE ENTREGA'));
						$this->addField(new MTextField('localEntrega',$this->objRequisicao->localEntrega,'Local',40));
						$this->addField(new MMultiLineField('obs',$this->objRequisicao->obs,'Obs',200,3,50));
						$this->AddButton(new MButton('btnConfirmarSolicitar', 'Enviar'));
					}
					else
					{
						$this->AddField($ui->GetGrid('adm','gridRequisicaoCompra',$this->objRequisicao));
						$this->addField(new MMultiLineField('justificativa',$this->objRequisicao->justificativa,'Justificativa',200,3,50));
						$this->addField(new MSeparator('DADOS DE ENTREGA'));
						$this->addField(new MTextField('localEntrega',$this->objRequisicao->localEntrega,'Local',40));
						$this->addField(new MMultiLineField('obs',$this->objRequisicao->obs,'Obs',200,3,50));
						$this->setFieldAttr('justificativa','readonly',true);  
						$this->setFieldAttr('localEntrega','readonly',true);
						$this->setFieldAttr('obs','readonly',true);
						// -- Adicionada por Helton -- //
						$url = $this->manager->GetActionURL('adm','main:requisicoes:find');
						$this->AddButton(new MButton('btnSair','Voltar',$url));
						// -- //
					}
				}
				$tipoAcao = array(""=>"","4"=>"AUTORIZAR","5"=>"DEVOLVER","6"=>"RECUSAR");
				$this->AddField(New MSeparator('AÇÕES DO GESTOR DA UO REQUISITANTE'));
				$this->AddField(New MSelection('acaoGestorUoReq','','Ação',$tipoAcao));
				$this->AddField(new MMultiLineField('motivoRejeicao','','Motivo da recusa','',3,50));
				$this->setFieldValue('acaoGestorUoReq',$this->objRequisicao->status);
				$this->setFieldValue('motivoRejeicao',$this->objRequisicao->motivoRejeicao);
				$this->setFieldAttr('acaoGestorUoReq','readonly',true);
				$this->setFieldAttr('motivoRejeicao','readonly',true);
				break;
			case 'A':
			case 7:
			case 'J':
				$this->AddField($ui->GetGrid('adm','gridRequisicaoCompra',$this->objRequisicao));
				$this->addField(new MMultiLineField('justificativa',$this->objRequisicao->justificativa,'Justificativa',200,3,50));
				$this->addField(new MSeparator('DADOS DE ENTREGA'));
				$this->addField(new MTextField('localEntrega',$this->objRequisicao->localEntrega,'Local',40));
				$this->addField(new MMultiLineField('obs',$this->objRequisicao->obs,'Obs',200,3,50));
				$this->setFieldAttr('justificativa','readonly',true); 
				$this->setFieldAttr('localEntrega','readonly',true);
				$this->setFieldAttr('obs','readonly',true);
				$url = $this->manager->GetActionURL('adm','main:requisicoes:find');
				$this->AddButton(new MButton('btnSair','Voltar',$url));
				if ($this->objRequisicao->status == 'A')
				{
					$tipoAcao = array("A"=>"RECUSAR");
					$this->AddField(New MSeparator('AÇÕES DO EXECUTOR'));
					$this->AddField(New MSelection('acaoExecutor','','Ação',$tipoAcao));
					$this->AddField(new MMultiLineField('motivoRejeicao','','Motivo da recusa','',3,50));
					$this->setFieldValue('acaoExecutor',$this->objRequisicao->status);
					$this->setFieldValue('motivoRejeicao',$this->objRequisicao->motivoRejeicao);
					$this->setFieldAttr('acaoExecutor','readonly',true);
					$this->setFieldAttr('motivoRejeicao','readonly',true);
				}
				break;
			case 8:
			case 9:
				$this->AddField($ui->GetGrid('adm','gridRequisicaoCompraAutorizada',$this->objRequisicao));
				$this->addField(new MMultiLineField('justificativa',$this->objRequisicao->justificativa,'Justificativa',200,3,50));
				$this->addField(new MSeparator('DADOS DE ENTREGA'));
				$this->addField(new MMultiLineField('localEntrega',$this->objRequisicao->localEntrega,'Local',200,3,50));
				$this->setFieldAttr('localEntrega','readonly',true);
				$url = $this->manager->GetActionURL('adm','main:requisicoes:find');
				$this->AddButton(new MButton('btnSair','Voltar',$url));
				break;
		}
	}
    
	function btnConfirmarSolicitar_click()
	{
		
		if(!$this->objRequisicao->materialCompra)
		{
		        $this->AddError('Não há item de material nesta requisição. Favor solicite o material desejado no link "Inserir Novo Material".');
	        }
		elseif( strlen(trim(Form::GetFormValue('justificativa'))) < 5 )
		{
			$this->AddError('Informe corretamente a Justificativa.');
		}
		elseif( strlen(trim(Form::GetFormValue('localEntrega'))) < 3 )
		{
			$this->AddError('Informe corretamente o local de entrega.');
		}
		else{
			$data = $this->getData();

			$msg = 'Confirmar esta requisição?';
			//$url = $this->manager->GetActionURL('adm','main:requisicoes',$this->objRequisicao->idRequisicao,array('form'=>'item','tipoReq'=>$this->objRequisicao->idTipoReq,"localEntrega"=>$data->localEntrega,"obs"=>$data->obs));
			$url = $this->manager->GetActionURL('adm','main:requisicoes',$this->objRequisicao->idRequisicao,array('form'=>'item','tipoReq'=>$this->objRequisicao->idTipoReq,'justificativa'=>$data->justificativa,"localEntrega"=>$data->localEntrega,"obs"=>$data->obs));  

			$eventYes = "btnSolicitar:click";
			$this->manager->Question($msg, $url, $url, $eventYes, $eventNo);
		}
	}

	function btnSolicitar_click()
	{
		global $MIOLO;
		
		$data = $this->getData();
		$material = $this->objRequisicao->getMaterialCompra();
		if (!is_array($material))
		{
			if (!$material->isPersistent())
			{
				$url = $this->manager->GetActionURL('adm','main:requisicoes',$this->objRequisicao->idRequisicao,array('form'=>'item'));
				$this->manager->Error('Não há materiais em sua requisição.',$url);
			}        
		}

		//TODO Voltar essa parte quando o sistema entrar no ar
		$this->objRequisicao->getUoRequisitante();
		$ui = $this->manager->getUi();
		$login = $this->manager->GetLogin();
		$idUsuario = $login->idkey;

		$this->objRequisicao->justificativa = $data->justificativa;  
		$this->objRequisicao->obs = $data->obs;
		$this->objRequisicao->localEntrega = $data->localEntrega;
		$this->objRequisicao->suplementar = "N";
		$data->valorEstimado = $this->objRequisicao->getItemValorEstimado();

		$cf = new MCurrencyFormatter();
		$valortotal = 0;
		$materiais = $this->objRequisicao->getMaterialCompra();
		$dadosMateriais = "<table border='1'><tr><td>Quantidade Pedida</td><td>Unidade</td><td>Elemento</td><td>Código</td><td>Material</td><td>Situação</td><td>Valor Unitário</td><td>Valor Total</td></tr>";
		if ($materiais)
		{
			foreach ($materiais as $material)
			{
				$material->setStatus('0');
				$material->save();
				$subtotal = round($cf->toDecimal($material->precoEstimado) * $cf->toDecimal($material->quantPedida),2);
                $valortotal += $subtotal;
				$dadosMateriais .= "<tr><td>{$material->quantPedida}</td><td>{$material->material->unidade}</td><td>{$material->material->idelemento}.{$material->material->idsubelemento}</td><td>{$material->material->codmaterial}</td><td>{$material->material->descricao}</td><td>PENDENTE</td><td>{$cf->formatWithSymbol($material->precoEstimado)}</td><td>{$cf->formatWithSymbol($subtotal)}</td></tr>";
				
			}
		}       
        $dadosMateriais .= "<tr><td colspan=\"8\" align= \"right\">Valor Total:  {$cf->formatWithSymbol($valortotal)}</td></tr></table>";
       
		try
		{
			if ($this->objRequisicao->uoRequisitante->isGestorOf($idUsuario))
			{
				if ($this->objRequisicao->status == 1 || $this->objRequisicao->status == 5)
				{
					$cf = new MCurrencyFormatter();
					$idRequisicao = $this->objRequisicao->idRequisicao;
					$uoRequisitante = $this->objRequisicao->uoRequisitante;
					if ($this->objRequisicao->getSaldo() < $cf->toDecimal($this->objRequisicao->getItemValorEstimado()))
						$this->addError('Saldo insuficiente.');
					else
					{
						$this->objRequisicao->beginTransaction();
						$this->objRequisicao->setStatus('4');
						$this->objRequisicao->setDataHoraAutorizacao();
						$this->objRequisicao->save();
						
						$requisita = $this->manager->getBusiness('adm','requisita');
						$requisita->GetById($this->objRequisicao->idTipoReq,$this->objRequisicao->idUoRequisitante);

						if  ($requisita->ativo == 'S')
						{
							$this->objRequisicao->getUoRequisitante();
							$this->objRequisicao->uoRequisitante->setTransaction($this->objRequisicao->getTransaction());
							$this->objRequisicao->uoRequisitante->addPrevisaoDebito($requisita->idRubrica,$data->valorEstimado,$this->objRequisicao->getAno());
							$this->objRequisicao->Log(OP_UPD,"Requisicao ".$this->objRequisicao->idRequisicao.": adicao da previsao de ".$data->valorEstimado." na UO ".$this->objRequisicao->uoRequisitante->idUo);

							$lancamentoInt = $this->manager->getBusiness('adm','lancamentoint');
							$lancamentoInt->setTransaction($this->objRequisicao->getTransaction());
							$lancamentoInt->tipoLancamento = '4';
							$lancamentoInt->data = date("d/m/Y");                
							$lancamentoInt->valor = $data->valorEstimado;
							$lancamentoInt->ano = date("Y");
							$lancamentoInt->idUoRequisitante = $this->objRequisicao->idUoRequisitante;       
							$lancamentoInt->idUoExecutante = $this->objRequisicao->idUoExecutante;
							$lancamentoInt->idRubrica = $requisita->idRubrica;           
							$lancamentoInt->idRequisicao = $this->objRequisicao->idRequisicao;
							$lancamentoInt->save();
							$this->objRequisicao->endTransaction();

							$idRequisicao = $this->objRequisicao->idRequisicao;
							$this->objRequisicao->Log(OP_INS,"Requisição de compra número ".$idRequisicao." solicitada e autorizada com sucesso.");
							$url = $this->manager->GetActionURL('adm','main:requisicoes',$idRequisicao,array('form'=>'item','tipoReq'=>$this->objRequisicao->idTipoReq));
							$this->manager->information("Requisição ".$this->objRequisicao->idRequisicao." solicitada e autorizada com sucesso.",$url);
						}
						else
						{
						}
					}
				}
				else
				{
					if ($this->objRequisicao->status == 4)
					{
						$this->manager->information("Solicitação criada e autorizada. O número da requisição é ".$this->objRequisicao->idRequisicao.".",$this->manager->getActionUrl('adm','main:requisicoes:find') );
					}
					else
					{
						$this->addError('Não foi possível efetuar a transação. Tente novamente.');
					}
				}
			}
			else
			{
				$this->objRequisicao->setStatus('2');
				$this->objRequisicao->save();
				//Envia e-mail para os gestores pertencentes à UO do requisitante
			    $dataMail = date("d/m/y");
				$horaMail = date("H:i");
				$user = $this->manager->getBusiness('common','usuario');				
				$user->getById($this->objRequisicao->idUsuarioRequisitante);					
				$setor = $this->manager->getBusiness('common','setor');
				$setor->getById($user->idSetor);
				$instituicao = $this->manager->getBusiness('common','instituicao');
				$instituicao->getById($setor->idinstituicao);
			    $dadosGestores = $this->objRequisicao->GetEmailGestores();
				foreach($dadosGestores as $e)
				{
					$mail = new PHPMailer();
					$mail->IsSMTP(); // send via SMTP
					$mail->Host = $MIOLO->getConf('mail.host');
					$mail->SMTPAuth = $MIOLO->getConf('mail.auth');
					$mail->Username = $MIOLO->getConf('mail.user');
					$mail->Password = $MIOLO->getConf('mail.pass');
					$mail->From = $MIOLO->getConf('mail.from');
					$mail->FromName = "SIGA - Sistema Integrado de Gestão Acadêmica";
					$mail->AddAddress($e[0]);
					$mail->Port = $MIOLO->getConf('mail.port');
					$mail->WordWrap = 50;
					$mail->IsHTML(true);
					$mail->Subject = "SIGA-ADM(3) - Requisição de Compra Consumo";
				    $mail->ssl = $MIOLO->getConf('mail.ssl');
					$mail->Body = "
							<center><h1>REQUISIÇÃO DE COMPRA CONSUMO - {$this->objRequisicao->idRequisicao}</h1></center>
							<br /><br />Prezado(a) Sr(a) {$e[1]},
							<br /><br />A requisição {$this->objRequisicao->idRequisicao} foi criada. Aguardando sua avaliação.
							<br /><br /><b>Itens da Requisição:</b>
							<br />{$dadosMateriais}
							<br /><b>Justificativa: </b>{$this->objRequisicao->justificativa}
							<br /><br /><b>Data: </b>{$dataMail}										
							<br /><b>Hora: </b>{$horaMail}						
							<br /><br /><b>Para maiores informações acesse: </b>{$MIOLO->getConf('home.url')}
							<br /><br />Atenciosamente,
							<br /><br />{$instituicao->nome} - {$instituicao->instituicao}						
							<br /><br /><b><font color=\"RED\"> Observação: Este email foi enviado automaticamente, não é necessário responder. </font></b>
					";								
					$mail->Send();	
				}

				$idRequisicao = $this->objRequisicao->idRequisicao;
				$this->objRequisicao->Log(OP_INS,"Requisição de compra número ".$idRequisicao." solicitada com sucesso.");
				$msg = "Requisição ".$this->objRequisicao->idRequisicao." solicitada com sucesso.";
				$url = $this->manager->getActionUrl('adm','main:requisicoes:find');
		                $this->manager->Information($msg, $url);
			}
		}
		catch (Exception $e) {$this->addError($e->getMessage());}
	}

	function btnConfirmarAutorizar_click()
	{
		// Se selecionou recusar ou devolver
		if ( ((Form::GetFormValue('acaoGestorUoReq') == '5') || (Form::GetFormValue('acaoGestorUoReq') == '6')) && (strlen(trim(Form::GetFormValue('motivoRejeicao'))) < 4))
		{
			$this->AddError("Informe um motivo válido.");
		}
		elseif(Form::GetFormValue('acaoGestorUoReq') == '' )
		{
			$this->addError("Favor selecionar uma ação.");
		}
		else{
			$data = $this->getData();
			switch ($data->acaoGestorUoReq)
			{
				case 4:
					$msg = 'Deseja autorizar esta requisição?';
					break;
				case 5:
					$msg = 'Deseja devolver esta requisição?';
					break;
				case 6:
					$msg = 'Deseja recusar esta requisição?';
					break;
			}
			$url = $this->manager->GetActionURL('adm','main:requisicoes',$this->objRequisicao->idRequisicao,array('form'=>'item','motivoRejeicao'=>$data->motivoRejeicao,'acaoGestorUoReq'=>$data->acaoGestorUoReq));
			$eventYes = "btnAutorizar:click";
			$this->manager->Question($msg, $url, $url, $eventYes, $eventNo);
		}
	}

	function btnAutorizar_click()
	{
		$data = $this->getData();
		if (!$data->acaoGestorUoReq) 
			$this->addError('Você deve escolher uma ação.');
		else
		{
			$idRequisicao = $this->objRequisicao->idRequisicao;
			$uoRequisitante = $this->objRequisicao->uoRequisitante;
			$proximaRequisicao = $this->manager->getBusiness('adm','requisicao',$this->objRequisicao->getProximaASerAtendida());
			if ($proximaRequisicao->idRequisicao){
				$url = $this->manager->getActionUrl('adm','main:requisicoes',$proximaRequisicao->idRequisicao,array("form"=>"item","tipoReq"=>$proximaRequisicao->idTipoReq)); 
			}
			else{
				$url = $this->manager->GetActionURL('adm','main:requisicoes',$idRequisicao,array('form'=>'item','tipoReq'=>$this->objRequisicao->idTipoReq));
			}
			$this->objRequisicao->setStatus($data->acaoGestorUoReq);
			switch ($data->acaoGestorUoReq)
			{
				case 4:
					$cf = new MCurrencyFormatter();
					//	var_dump('SALDO',$this->objRequisicao->getSaldo(),'EST',$this->objRequisicao->getItemValorEstimado());
					if ($this->objRequisicao->getSaldo() < $this->objRequisicao->getItemValorEstimado()) $this->addError('Saldo insuficiente.');
					else
					{
						try
						{
							$materiais = $this->objRequisicao->getMaterialCompra();
							if ($materiais)
							{
								foreach ($materiais as $material)
								{
									$material->setStatus('0');
									$material->save();
								}
							}
							$this->objRequisicao->setDataHoraAutorizacao();
							$this->objRequisicao->save();
							$requisita = $this->manager->getBusiness('adm','requisita');
							$requisita->GetById($this->objRequisicao->idTipoReq,$this->objRequisicao->idUoRequisitante,date('Y'));
							$this->objRequisicao->getUoRequisitante();
							$this->objRequisicao->uoRequisitante->addPrevisaoDebito($requisita->idRubrica,$this->objRequisicao->getItemValorEstimado(),$this->objRequisicao->getAno());
							$this->objRequisicao->addLancamentoInterno(4);
							$this->manager->information("Requisição ".$idRequisicao." autorizada com sucesso.",$url);
						}
						catch (Exception $e) {$this->addError($e->getMessage());}
					}
					break;
				case 5:
					try
					{
						$this->objRequisicao->motivoRejeicao = $data->motivoRejeicao;
						$this->objRequisicao->save();
						$this->manager->information("Requisição ".$idRequisicao." devolvida com sucesso.",$url);
					}
					catch (Exception $e) {$this->addError($e->getMessage());}
					break;
				case 6:
					try
					{
						$this->objRequisicao->motivoRejeicao = $data->motivoRejeicao;
						$this->objRequisicao->save();
						$this->manager->information("Requisição ".$idRequisicao." recusada com sucesso.",$url);
					}
					catch (Exception $e) {$this->addError($e->getMessage());}
					break;
			}
		}
	}
}
?>
