<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/*
    Objetivo: monta 'lookup', para escolha de publicação

    1) se passado valor, busca detalhes no banco
        //cria componente lookup com nome formado por 'numero' mais o parâmetro recebido (exemplo 'numero'.'pubini')
    3) cria componentes acessórios com nomes formados por um nome específico mais o parâmetro recebido (exemplo 'descricao'.'pubini')
*/

    function lkppublicacao(&$fields           ,  //matriz de campos, que irá receber acréscimo de campos
                           $nameidpublicacao  ,  //campo principal do lookup, tipo MHiddenField, a ser usado na aplicação
                           $label='Publicação',
                           $value=NULL        )
    {
        global $MIOLO;

        //se passado valor (em geral anteriormente gravado), busca detalhes no banco, para exibição prévia
        if ($value)
        {
            $obj = $MIOLO->GetBusiness('rh','publicacao');
            $obj->getById($value);
            $numero     = $obj->numero;                   //visualização acessória
            $descricao  = $obj->diplomaLegal->descricao;
            $data       = $obj->data;
            $autoridade = $obj->autoridade;
        }

        //cria componente lookup com nome formado por 'numero' mais o parâmetro recebido (exemplo 'numero'.'pubini')
        $lkp = new MLookupFieldValue( 'numero'.$nameidpublicacao, $numero, $label, 8 );

        //define campos de retorno para exibição dos detalhes
        $lkp->setContext(NULL, 'rh', 'publicacao', 'filler',              $nameidpublicacao . ',' . 
                                                             'data'      .$nameidpublicacao . ',' .
                                                             'numero'    .$nameidpublicacao . ',' .
                                                             'autoridade'.$nameidpublicacao . ',' .
                                                             'null,'                        .
                                                             'descricao' .$nameidpublicacao       );
        $fields[] = $lkp;

        //cria componente MHiddenField com o parâmetro recebido (exemplo 'pubini')
        $fields[]   = new MHiddenField($nameidpublicacao,$value);

        //cria componentes acessórios com nomes formados por um nome específico mais o parâmetro recebido (exemplo 'descricao'.'pubini')
        $descricao  = new MTextFIELD  ('descricao' .$nameidpublicacao,$descricao ,'',15,'',null,TRUE); //nome dinâmico
        $data       = new MTextFIELD  ('data'      .$nameidpublicacao,$data      ,'', 8,'',null,TRUE); //nome dinâmico
        $autoridade = new MTextFIELD  ('autoridade'.$nameidpublicacao,$autoridade,'',15,'',null,TRUE); //nome dinâmico
        $descricao ->setColor('blue');
        $data      ->setColor('blue');
        $autoridade->setColor('blue');
        $descricao ->addStyle('fontWeight','bold');
        $data      ->addStyle('fontWeight','bold');
        $autoridade->addStyle('fontWeight','bold');

        $fields[] = array( /*new MLabel($nbsp),*/ $descricao, $data, $autoridade );
    } // lkppublicacao


?>
