<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class BusinessRhRepresentacaoPensao extends MBusiness
{
    public $idRepresentacao;
    public $dataInicio;
    public $dataFim;
    public $idPessoa;
    public $idVinculo;
    public $idPensionista;
    public $cartorio;
    public $livro;
    public $folha;
    
    public $k;

    
    function __construct($data=null)
    {
        parent::__construct('sigaept',$data);
    }

    
    function GetById($id)
    {
        $this->idRepresentacao = $id;
        $this->retrieve();
        return $this;
    }
        

    function GetByIdPensionistaDatas($id, $dtInicio, $dtFim)
    {
        $this->k  = new MKrono();
        $inicio   = $this->k->invertDate($dtInicio);
        $fim      = $this->k->invertDate($dtFim);
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('idPensionista','=', "'$id'");
        $criteria->addCriteria('dataInicio','=',"'$inicio'"); 
        if ( ($dtFim != "") and ($dtFim != "00/00/0000") )
        {
            $criteria->addCriteria('dataFim','=',"'$fim'");
        }
        else 
        {
            $criteria->addCriteria('dataFim','is','null');
        }
        $query = $criteria->retrieveAsQuery(); 
        $id = $query->result[0][0];
        return $this->GetById($id);
    }


    function getUltimaRepresentacao($id)
    {
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('idPensionista','=', "'$id'");
        $criteria->addOrderAttribute('dataInicio');
        $result = $criteria->retrieveAsQuery()->result;
        if ($result)
        {
            $id = end($result);
            $this->GetById($id[0]);
            return $this;
        }
        else
        {
            return '';
        }
    } // getUltimaRepresentacao


}
?>
