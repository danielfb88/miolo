<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class BusinessRhFitaEspelho extends MBusiness
{

    public $afast_dip_cod;
    public $afast_dip_dt;
    public $afast_dip_num;
    public $afast_dt_inic;
    public $afast_dt_term;
    public $afast_grupo;
    public $afast_ocor;
    public $agencia;
    public $ano_chegada;
    public $anoMes;
    public $apos_ano_prev;
    public $apos_num_proc;
    public $apos_opcao_int;
    public $ativid_funcao;
    public $banco;
    public $cargo_classe;
    public $cargo_dt_entrad;
    public $cargo_dt_saida;
    public $cargo_grupo;
    public $cargo_nome;
    public $cargo_ref_nivel;
    public $cart_trab_num;
    public $cart_trab_serie;
    public $cart_trab_uf;
    public $cod_org_extinto;
    public $cod_situacao;
    public $codigo_vaga;
    public $conta;
    public $cpf;
    public $dt_cadast_serv;
    public $dt_exc_instit;
    public $dt_nascimento;
    public $dt_prim_emp;
    public $dt_supr_pagto;
    public $dv_matricula;
    public $end_bairro;
    public $end_cep;
    public $end_complemento;
    public $end_logradouro;
    public $end_municipio;
    public $end_numero;
    public $end_uf;
    public $escolaridade;
    public $estado_civil;
    public $exclus_dip_cod;
    public $exclus_dip_dt;
    public $exclus_dip_num;
    public $exclus_dt;
    public $exclus_grupo;
    public $exclus_ocor;
    public $fgts_agencia;
    public $fgts_banco;
    public $fgts_conta;
    public $fgts_dt_opcao;
    public $filler1;
    public $funcao_codnivel;
    public $funcao_dt_ingr;
    public $funcao_dt_saida;
    public $funcao_escolar;
    public $funcao_opcao;
    public $funcao_sigla;
    public $funcao_unid_org;
    public $ica_13_salario;
    public $ica_abate_teto;
    public $ica_adiant_13;
    public $ica_adiant;
    public $ica_adic_tempo;
    public $ica_beneficios;
    public $ica_cargo;
    public $ica_cont_sind;
    public $ica_dif_urv;
    public $ica_ferias;
    public $ica_fgts;
    public $ica_funcao;
    public $ica_inss;
    public $ica_ipmf_cpmf;
    public $ica_ir;
    public $ica_margem_cons;
    public $ica_pensao;
    public $ica_pss_6;
    public $ica_rais;
    public $ica_rend_pasep;
    public $ica_sal_familia;
    public $identif_origem;
    public $inativ_dip_cod;
    public $inativ_dip_dt;
    public $inativ_dip_num;
    public $inativ_dt;
    public $inativ_grupo;
    public $inativ_ocor;
    public $ind_exc_instit;
    public $ind_oper_raiox;
    public $ind_supr_pagto;
    public $indic_pag_serv;
    public $ing_org_dip_cod;
    public $ing_org_dip_dt;
    public $ing_org_dip_num;
    public $ing_org_dt;
    public $ing_org_grupo;
    public $ing_org_ocor;
    public $ing_sp_dip_cod;
    public $ing_sp_dip_dt;
    public $ing_sp_dip_num;
    public $ing_sp_dt;
    public $ing_sp_grupo;
    public $ing_sp_ocor;
    public $jornada_trab;
    public $local_orgao;
    public $local_unid_org;
    public $lotac_unid_dt;
    public $lotac_unid_org;
    public $mat_serv_extint;
    public $matric_anterior;
    public $matric_atual;
    public $mes_anuenio;
    public $mod_fun_dip_cod;
    public $mod_fun_dip_dt;
    public $mod_fun_dip_num;
    public $mod_fun_dt;
    public $mod_fun_grupo;
    public $mod_fun_ocor;
    public $mud_org_destino;
    public $mud_org_dt_lib;
    public $mud_org_origem;
    public $mud_upag_codigo;
    public $mud_upag_dt_lib;
    public $mud_upag_motivo;
    public $nacionalidade;
    public $naturalidade;
    public $nome_mae;
    public $nome_servidor;
    public $nov_fc_codnivel;
    public $nov_fc_dt_ingr;
    public $nov_fc_dt_saida;
    public $nov_fc_escolar;
    public $nov_fc_opcao;
    public $nov_fc_sigla;
    public $nov_fc_unid_org;
    public $obito_cartori0;
    public $obito_dt;
    public $obito_folha;
    public $obito_livro;
    public $obito_registro;
    public $orgao_anterior;
    public $orgao_atual;
    public $orgao_requisit;
    public $pais;
    public $perc_oper_raiox;
    public $perc_tempo_serv;
    public $pis_pasep;
    public $posse_dip_cod;
    public $posse_dip_dt;
    public $posse_dip_num;
    public $posse_dt;
    public $posse_grupo;
    public $posse_ocor;
    public $proporc_denomin;
    public $proporc_numerad;
    public $quant_dep_ir;
    public $quant_dep_sf;
    public $reg_jur_ant;
    public $regime_juridico;
    public $rev_ati_dip_cod;
    public $rev_ati_dip_dt;
    public $rev_ati_dip_num;
    public $rev_ati_dt;
    public $rev_ati_grupo;
    public $rev_ati_ocor;
    public $rg_dt_emissao;
    public $rg_numero;
    public $rg_orgao;
    public $rg_uf;
    public $sexo;
    public $siape;
    public $sigla_uf;
    public $sit_serv_ant;
    public $tipo_registro;
    public $tit_eleitor;
    public $titulacao;
    public $unid_pagadora;
    public $uorg_controle;
    public $vale_al_dt_fim;
    public $vale_al_dt_inic;
    public $vale_al_tipo;


    function __construct($data=null)
    {
        parent::__construct('sigaept',$data);
    }


    function getById($siape, $anoMes)
	{
        $this->siape = $siape;
        $this->anoMes = $anoMes;
        return $this->retrieve();
	}
	

	function getMaiorAnoMes() 
	{
	    $criteria = $this->getCriteria();
	    $criteria->addColumnAttribute('max(anomes)');
	    $result = $criteria->retrieveAsQuery()->getRowValues();
	    return $result[0];
	}


	function listarServidores($nicho)
	{
		$criteria = $this->getCriteria();

		if ( strtoupper(trim($nicho)) == "P" ) // Professores Mag. Superior
		{
			$criteria->addCriteria('cod_situacao', 'in', "('01', '08', '09', '20')");
			$criteria->addCriteria('exclus_grupo', '!=', '02');
			$criteria->addCriteria('cargo_grupo', '=', '060');
			$criteria->addCriteria('cargo_nome', '=', '001');
		}
		else // Funcionários Ativos
		{
			$criteria->addCriteria('cod_situacao', 'in', "('01', '08', '09', '20')");
			$criteria->addCriteria('exclus_grupo', '!=', '02');
			$criteria->addCriteria('cargo_grupo', '!=', '060');
			$criteria->addCriteria('cargo_grupo', '!=', '702');
		}
		$criteria->addCriteria('anoMes', '=', '200904');
		$query = $criteria->retrieveAsQuery();
        return $query;

	}

}
?>
