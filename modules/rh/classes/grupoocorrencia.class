<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class BusinessRhGrupoOcorrencia extends MBusiness
{
	public $idGrupoOcorrencia;
	public $descricao;
	public $ocorrencias;
	
	function __construct($data=null)
	{
		parent::__construct('sigaept',$data);
	}
    
        function OnCreate($data)
        {
            if (empty($data))
            {
//               $this->initialize();
            }
            else
            {
                $this->GetById($data);
            }
        }

	function getOcorrencias()
    {
            $this->retrieveAssociation('ocorrencias');
            if (!is_array($this->ocorrencias))
            {
                $this->ocorrencias = array($this->ocorrencias);  
            }
	}
	
	function getOcorrencia($idOcorrencia)
	{
		global $MIOLO;
		if ( $this->ocorrencias != NULL )
		{
			foreach ( $this->ocorrencias as $o )
			{
				if ( $o->idOcorrencia == $idOcorrencia )
					return $o;
			}
		}
		$o = $MIOLO->GetBusiness('rh','ocorrencia');
		$o->idGrupoOcorrencia = $this->idGrupoOcorrencia;
		return $o;
	}
	
	function GetById($id)
	{
		$this->idGrupoOcorrencia = $id;
		$this->retrieve();
		return $this;
	}

	function ListByGrupoOcorrencia($descricao)
	{
		$criteria =  $this->getCriteria();
        $criteria->addCriteria('descricao','LIKE', "$descricao");
        $criteria->addOrderAttribute('descricao');
        return $criteria->retrieveAsQuery();

	}

	function ListOcorrencias($order = 'descricao')
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('ocorrencias.idOcorrencia');
		$criteria->addColumnAttribute('ocorrencias.descricao');
		$criteria->addCriteria('ocorrencias.idGrupoOcorrencia','=',$this->idGrupoOcorrencia);
        if ( $order == 'id' )
        {
    		$criteria->addOrderAttribute('ocorrencias.idOcorrencia');
        }
        else
        {
    		$criteria->addOrderAttribute('ocorrencias.descricao');
        }
		return $criteria->retrieveAsQuery();
		
	}
    
	function listOcorrenciasByRegimeJuridico($regimeJuridico)
	{
		$criteria = $this->getCriteria();
		$criteria->addColumnAttribute('ocorrencias.idOcorrencia');
		$criteria->addColumnAttribute('ocorrencias.descricao');
		$criteria->addColumnAttribute('ocorrencias.descricao');
		$criteria->addCriteria('ocorrencias.idGrupoOcorrencia','=',$this->idGrupoOcorrencia);
        $criteria->addCriteria('ocorrencias.situacaoFuncional.regimeJuridico','=',"'$regimeJuridico'");
		$criteria->addOrderAttribute('ocorrencias.idOcorrencia');
		return $criteria->retrieveAsQuery();
		
	}

    function listGrupos($grupos=NULL)
    {   
        $criteria = $this->getCriteria();
        if ( $grupos )
        {
            if ( is_array($grupos) )
            {
                $criteria->addCriteria('idGrupoOcorrencia','IN',$grupos);
            }
            else
            {
                $criteria->addCriteria('idGrupoOcorrencia','=',$grupos);
            }
        }
		$criteria->addOrderAttribute('idGrupoOcorrencia');
		return $criteria->retrieveAsQuery();
    }

    function verificaOcorrenciaSituacao($idOcorrencia,$idSituacao)
    {
        $criteria = $this->getCriteria();
        $criteria->addColumnAttribute('ocorrencias.idOcorrencia');
        $criteria->addCriteria('ocorrencias.situacaoFuncional.idSituacao','=',$idSituacao);
        $criteria->addCriteria('ocorrencias.idOcorrencia','=',$idOcorrencia);
        $criteria->addCriteria('ocorrencias.idGrupoOcorrencia','=',$this->idGrupoOcorrencia);
        $query = $criteria->retrieveAsQuery();
        return ! $query->eof();
    }
}
?>
