<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class BusinessRhQuantitativos extends MBusiness
{

private $fitaEspelho;
private $anoMes;

    function __construct($anoMes) {
        global $MIOLO;
        $this->fitaEspelho = $MIOLO->getBusiness('rh', 'fitaespelho');
        if (!$anoMes) {
            $anoMes = $this->fitaEspelho->getMaiorAnoMes();
        }
        $this->anoMes = $anoMes;
        var_dump($this->anoMes);
    
    }
    
/*****************************************************
/            SERVIDORES EFETIVOS ATIVOS
/****************************************************/
    
    function getServidoresEfetivosAtivos() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $cc = new CriteriaCondition;
            $cc->addOrCriteria($criteria->getCriteria('cod_situacao', '=', '01'));
            $cc->addOrCriteria($criteria->getCriteria('cod_situacao', '=', '08'));
            $cc->addOrCriteria($criteria->getCriteria('cod_situacao', '=', '09'));
            $cc->addOrCriteria($criteria->getCriteria('cod_situacao', '=', '20'));
		$criteria->addCriteria('cod_situacao', 'in', "('01', '08', '09', '20')");
        //$criteria->addCriteria($cc);
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    // Técnico-Administrativos
    function getServidoresEfetivosAtivosTA() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', 'in', "('01', '08', '09', '20')");
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_grupo', '!=', '060');
        $criteria->addCriteria('cargo_grupo', '!=', '702');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    // Docentes Magistério Superior
    function getServidoresEfetivosAtivosDocentesSuperior() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', 'in', "('01', '08', '09', '20')");
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_grupo', '=', '060');
        $criteria->addCriteria('cargo_nome', '=', '001');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    // Docentes Magistério 1º e 2º graus
    function getServidoresEfetivosAtivosDocentes1e2Graus() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', 'in', "('01', '08', '09', '20')");
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_grupo', '=', '060');
        $criteria->addCriteria('cargo_nome', '=', '011');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    // Docentes do Ensino Básico Tecnológico
    function getServidoresEfetivosAtivosDocentesEnsinoTecnologico() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', 'in', "('01', '08', '09', '20')");
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_grupo', '=', '702');
        $criteria->addCriteria('cargo_nome', '=', '001');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
/*****************************************************
/            SERVIDORES EFETIVOS APOSENTADOS
/*****************************************************/
    
    
    function getServidoresEfetivosAposentados() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '02');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    // Técnico-Administrativos
    function getServidoresEfetivosAposentadosTA() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '02');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_grupo', '!=', '060');
        $criteria->addCriteria('cargo_grupo', '!=', '702');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    
    // Docentes Magistério Superior
    function getServidoresEfetivosAposentadosDocentesSuperior() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '02');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_grupo', '=', '060');
        $criteria->addCriteria('cargo_nome', '=', '001');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    // Docentes Magistério 1º e 2º Graus
    function getServidoresEfetivosAposentadosDocentes1e2Graus() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '02');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_grupo', '=', '060');
        $criteria->addCriteria('cargo_nome', '=', '011');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }

    
    // Docentes Ensino Básico Tecnológico
    function getServidoresEfetivosAposentadosDocentesEnsinoTecnologico() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '02');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_grupo', '=', '702');
        $criteria->addCriteria('cargo_nome', '=', '001');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }    
    
    
    
/*****************************************************
/      SERVIDORES EFETIVOS INSTITUIDORES DE PENSÃO
/*****************************************************/
    
    function getServidoresEfetivosInstPensao() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '15');
        $criteria->addCriteria('ind_exc_instit', '!=', '1');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    // Técnico-Administrativos
    function getServidoresEfetivosInstPensaoTA() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '15');
        $criteria->addCriteria('ind_exc_instit', '!=', '1');
        $criteria->addCriteria('cargo_grupo', '!=', '060');
        $criteria->addCriteria('cargo_grupo', '!=', '702');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    // Docentes Magistério Superior
    function getServidoresEfetivosInstPensaoDocentesSuperior() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '15');
        $criteria->addCriteria('ind_exc_instit', '!=', '1');
        $criteria->addCriteria('cargo_grupo', '=', '060');
        $criteria->addCriteria('cargo_nome', '=', '001');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }

    
    // Docentes Magistério 1º e 2º Graus
    function getServidoresEfetivosInstPensaoDocentes1e2Graus() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '15');
        $criteria->addCriteria('ind_exc_instit', '!=', '1');
        $criteria->addCriteria('cargo_grupo', '=', '060');
        $criteria->addCriteria('cargo_nome', '=', '011');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }    
    
    
    // Docentes Ensino Básico Tecnológico
    function getServidoresEfetivosInstPensaoDocentesEnsinoTecnologico() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '15');
        $criteria->addCriteria('ind_exc_instit', '!=', '1');
        $criteria->addCriteria('cargo_grupo', '=', '702');
        $criteria->addCriteria('cargo_nome', '=', '001');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
/*****************************************************
/      PROFESSORES SUBSTITUTOS E VISITANTES
/*****************************************************/

    function getProfessoresSubstitutosEVisitantes() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '12');
        $criteria->addCriteria('cargo_grupo', 'in', "('060', '702')");
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    //Substitutos do Magistério Superior
    function getProfessoresSubstitutosSuperior() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '12');
        $criteria->addCriteria('cargo_grupo', '=', '060');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_nome', '=', '002');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    //Visitantes do Magistério Superior
    function getProfessoresVisitantesSuperior() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '12');
        $criteria->addCriteria('cargo_grupo', '=', '060');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_nome', '=', '003');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }
    
    //Substitutos do Magistério 1º e 2º Graus
    function getProfessoresSubstitutos1e2Graus() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '12');
        $criteria->addCriteria('cargo_grupo', '=', '060');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_nome', '=', '012');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }

    //Substitutos do Ensino Básico Tecnológico
    function getProfessoresSubstitutosEnsinoTecnologico() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '12');
        $criteria->addCriteria('cargo_grupo', '=', '702');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('cargo_nome', '=', '003');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }

/*****************************************************
/                     MÉDICOS RESIDENTES
/*****************************************************/

    function getMedicosResidentes() {
    
        $criteria = $this->fitaEspelho->getCriteria();
        $criteria->addColumnAttribute('count(siape)');
        $criteria->addCriteria('cod_situacao', '=', '05');
        $criteria->addCriteria('exclus_grupo', '!=', '02');
        $criteria->addCriteria('anoMes', '=', $this->anoMes);
        $result = $criteria->retrieveAsQuery()->getRowValues();
        return $result[0];
    
    }

}
