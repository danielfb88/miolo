<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class BusinessRhLocalTerceirizado extends Business
{
	public $idLocalTerceirizado;
	public $idsetor;
	
	public $nome;
	public $setor;


	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}

	function OnCreate($data)
    {
        if (empty($data))
        {
//            $this->initialize();
        }
        else
        {
            $this->GetById($data);
        }
    }

	function GetById($id)
	{
		$this->idLocalTerceirizado = $id;
		$this->retrieve();
		return $this;
	}

	
	function ListByNomeLocal($nome)
	{
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('nome','LIKE', "$nome");
        $criteria->addOrderAttribute('nome');
        return $criteria->retrieveAsQuery();
	}
	
	function ListAllByNomeLocal($nome)
	{
        $criteria =  $this->getCriteria();
        $criteria->addColumnAttribute('distinct idLocalTerceirizado', 'idlocalterceirizado');
        $criteria->addColumnAttribute('nome');
        $criteria->addColumnAttribute('idsetor');
        $criteria->addColumnAttribute('setor.nome', 'nomesetor');
        $criteria->addCriteria('idsetor','=', 'setor.idSetor');
        $criteria->addCriteria('nome','LIKE', "$nome");
        $criteria->addOrderAttribute('nome');
        return $criteria->retrieveAsQuery();
	}
	
	function listAll($dataFim = FALSE)
    {
        $criteria = $this->getCriteria();
        $criteria->addColumnAttribute('idlocalterceirizado');
        $criteria->addColumnAttribute('nome');
        $criteria->addColumnAttribute('idsetor');
        $criteria->addColumnAttribute('setor.nome', 'nomesetor');
        $criteria->addCriteria('idsetor','=', 'setor.idSetor');
        $criteria->addOrderAttribute('nome');
        if ( $dataFim )
        {
            $criteria->addCriteria('datafim','is','null');
        }
        return $criteria->retrieveAsQuery();
    }
	
}
