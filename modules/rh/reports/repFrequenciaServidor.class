<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class repFrequenciaServidor extends MPDFReport
{

    private $img;
    private $timestamp;
    private $mnemonicos;
    private $meses;
    public $data;


    function __construct($data)
    {
        global $MIOLO, $module, $page, $context, $self, $action, $perms;

		parent::__construct(NULL,NULL,55,NULL,'landscape','a4');

		$ui = $MIOLO->GetUI();
        
		$this->img = $ui->GetImageSrc('logo_siga.png','rh');
        $this->timestamp = date('d/m/Y G:i');
        $this->pdf->ezStartPageNumbers(800,540,10,'rigth','Página: {PAGENUM}/{TOTALPAGENUM}');
        $this->pdf->ezSetMargins(100,30,20,20);

        $data->vinculo->retrieveAssociation('funcionario');
        $data->vinculo->funcionario->retrieveAssociation('pessoa');
        
		$this->data = $data;

        $this->GeneratePageHeader();
        $this->GeneratePageFooter();

        $k = new MKrono();
        $this->meses = $k->months;
        
		$this->pdf->ezSetDy(-5,'makeSpace');
        
		if ( $data->vinculo )
        {
            $options['showLines']    = 0;
            $options['fontSize']     = 7.5;
            $options['xPos']         = 'left';
            $options['xOrientation'] = 'right';

            $data->vinculo->getLicAfasts();
            $data->vinculo->retrieveAssociation('funcionario');

            $anoCorrente = date("Y");
            $mesCorrente = date("m");

            if ( $anoCorrente == $data->ano )
			{
                for ($i=12; ($mesCorrente-1) < $i; $i--)
				{
                    $jogaFora = array_pop($this->meses);
				}
			}

            foreach ( $this->meses as $key=>$val ) //key codigo do mes, val nome do mes
            {
                $mesAno = $key.'/'.$data->ano;
                $dias = $this->daysInMonth($data->ano,$key);
                $row[] = $val;
                for ( $i = 1; $i <= $dias; $i++ )
                {
                    $d = ($i < 10) ? '0'.$i : $i;
                    $dia = $d.'/'.$mesAno;
                    $info = $data->vinculo->getFrequenciaMnemonico($dia);
                    $row[] = $info['mnemonico'];
                    $this->mnemonicos[$info['mnemonico']] = $info['descricao'];
                }
                $dataRel[] = $row;
                unset($row);
                $cols[0] = 'Mês\Dia';
                for ( $i = 1; $i <= $dias; $i++ ) 
				{
					$cols[$i] = $i;
				}
                $this->pdf->ezTable($dataRel,$cols,'',$options);
                $this->pdf->ezText("",10);
                unset($cols);
                unset($dataRel);
            }
        }
        $this->Generate();
        $this->GenerateFooter();
    }


    function GeneratePageHeader()
    {
        $x0 = $this->pdf->left;
        $x1 = $this->pdf->right;
        $h = $this->pdf->getFontHeight(10);
        $header = $this->pdf->openObject();
        $this->pdf->saveState();
        $this->pdf->addPngFromFile($this->img, 40, 520 + $x0, 54, 27);
        $this->pdf->addText($x0+85, 560, 12, 'IF - Instituto Federal');
        $this->pdf->addText($x0+85, 560 -$h -$h , 10, 'SIGA - Sistema Integrado de Gestão Acadêmica - Módulo Recursos Humanos');
        $y = 550 - $h - $h - 5;
        $this->pdf->SetColor(0.4,0.4,0.4);
        $this->pdf->filledRectangle($x0, $y-20, $x1-30, 16 );
        $this->pdf->SetColor(1,1,1);
        $setor = $this->setor;
        $this->pdf->addText($x0 + 5, $y - 16, 10, "Relatório de Frequüência por Servidor. Nome: ".ucwords(strtolower($this->data->vinculo->funcionario->pessoa->nome))." Matrícula: {$this->data->idVinculo} Ano: {$this->data->ano}");
        $this->pdf->restoreState();
        $this->pdf->closeObject();
        $this->pdf->addObject($header,'all');
    }


    function GeneratePageFooter()
    {
        $x0 = $this->pdf->left;
        $x1 = $this->pdf->right;
        $footer = $this->pdf->openObject();
        $this->pdf->saveState();
        $this->pdf->SetStrokeColor(0, 0, 0);
        $this->pdf->line($x0, 28, $x1, 28);
        $this->pdf->addText($x0, 19, 9, $this->timestamp);
        $this->pdf->restoreState();
        $this->pdf->closeObject();
        $this->pdf->addObject($footer, 'all');
    }


    function GenerateFooter()
    {
        $this->pdf->ezText(" ", 9, array('justification' => 'left')); 
        $this->pdf->ezText(" ", 9, array('justification' => 'left'));
        $this->pdf->ezText("Legenda", 9, array('justification' => 'left'));
        $this->pdf->ezText(" ", 9, array('justification' => 'left'));
        foreach ( $this->mnemonicos as $key=>$val ) $this->pdf->ezText("$key = $val", 9, array('justification' => 'left'));
        $this->pdf->ezText(" ", 9, array('justification' => 'left'));
        $this->pdf->ezText(" ", 9, array('justification' => 'left'));
        $this->pdf->ezText("Assinaturas", 9, array('justification' => 'left'));
        $this->pdf->ezText(" ", 9, array('justification' => 'left'));
        $this->pdf->ezText("                                                                                   Secretário                                                 Diretor                                                 PRORH ", 9, array('justification' => 'left'));
    }

	
    function Generate()
    {
        $this->SetOutput();
        $this->Execute();
    }


    function DaysInMonth ( $Year, $MonthInYear )
    {
        if ( in_array ( $MonthInYear, array ( 1, 3, 5, 7, 8, 10, 12 ) ) )
		{
            return 31;
		}
        if ( in_array ( $MonthInYear, array ( 4, 6, 9, 11 ) ) )
		{
            return 30;
		}
        if ( $MonthInYear == 2 )
		{
            return ( checkdate ( 2, 29, $Year ) ) ? 29 : 28;
		}
        return false;
    }
}
?>
