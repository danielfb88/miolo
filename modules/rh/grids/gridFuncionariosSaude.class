<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
/**
 * Grid Funcionarios Saúde
 * Grid de uso geral para selecionar funcionários para a seção de saúde
 * @package br.org.miolo.ufjf.rh.grids
 */

MIOLO::Import('modules::rh::controls::linksaude');
MIOLO::Import('modules::rh::controls::linkfuncionario');

class gridFuncionariosSaude extends MDataGrid2
{
    function __construct()
    {   
        global $MIOLO,$self;
        
        $this->SetFilter(false);
        $filterNome = MForm::GetFormValue('nome');
        $filterMatricula = MForm::GetFormValue('matricula');
	if(is_numeric($filterMatricula) || (!$filterMatricula))
	{
        	$nome = MUtil::NVL($filterNome, '%');
        	$this->AddFilterText('nome','Nome',$nome);
        	$this->AddFilterText('matricula','Matricula',$filterMatricula);
        	$this->SetIndex(1);
        	$objFuncionario = $MIOLO->GetBusiness('rh','funcionario');

        
        	if ( ($MIOLO->getPerms()->isMemberOf('','RH_SECRETARIA')) && (!$MIOLO->getPerms()->isMemberOf('','ADMIN')) && (!$MIOLO->getPerms()->isMemberOf('','RH_GESTOR')) )
        	{        
            		$login = $MIOLO->getLogin();
            
           		 $usuario = $MIOLO->getBusiness('common','usuario');
            		$usuario->getByLogin($login->id);
            
            		$pessoa = $MIOLO->GetBusiness('common','pessoa',$usuario->idPessoa);
            
            		$funcionario = $MIOLO->GetBusiness('rh','funcionario');
            		if ($funcionario->isFuncionario($pessoa->idpessoa))
            		{
            			$funcionario->GetFuncionarioByPessoa($pessoa->idpessoa);
            			$vinculoAtivo = $funcionario->GetVinculoAtivo();
            			$provimentoAtual = $vinculoAtivo->GetProvimentoAtual();
            			$usuario->idSetor = $provimentoAtual->idSetor;
            		}
            
            		$setor = $MIOLO->getBusiness('common','setor',$usuario->idSetor);
            
            		$setorPai = $MIOLO->getBusiness('common','setor');
            		$setorPai->getById($setor->idPaiSetor);
            
            		$idSetorPai = ( $setorPai->idPaiSetor == 0 ) ? $setor->idSetor : $setorPai->idSetor;
            		$idSetores = $setor->getSetoresFilhos($idSetorPai);
        	}

        	$query = $objFuncionario->ListByNomeOrMatriculaSituacaoAtivos(strtoupper("'%$nome%'"), $filterMatricula, $idSetores);
     
        	if ( !$query->eof() )
        	{
            		$linkSaude = new LinkSaude('linkSaude','%1%');
            		//$linkSaude->setAction();
            		$column = new MDataGridControl($linkSaude,'vinculo','Matrícula','right',true,'10%');
        	}
        
        	$columns = array(
            		$column,
            		new MDataGridColumn('nome','Nome','left', true,'90%')       
        	);
        
		$href_grid = $MIOLO->GetActionURL('rh',$self);        
        	parent::__construct($query, $columns, $href_grid, 25);
        	//$this->setRowMethod( 'gridFuncionariosSaude', 'MyRowMethod' );
	}
	else
	{
		$MIOLO->Error("Favor, digitar os números da matrícula do servidor corretamente.");
	}
    }

    function GenerateFooter()
    {
        if (!$this->data) 
           $footer[] = $this->GenerateEmptyMsg();
        return $footer;
    }
}
?>
