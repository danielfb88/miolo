<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
class gridProadesReuniaoResultados extends MDataGrid
{
	function __construct($reuniao)
	{

        $MIOLO = MIOLO::getInstance(); 
        
		$href = $MIOLO->getActionURL('rh','main:proades:main','#0#');

        $tabelaGeral = $MIOLO->getBusiness('common','tabelageral');
        $query = $tabelaGeral->listByTabela('RH_RESULTREUNIAO');
        foreach ( $query->result as $result )
        {
            $resultado[$result[0]] = $result[1];
        }
        $query = $reuniao->listResultados();
		$columns = array(
				new MDataGridColumn('idmeta','Código','center',false,'10%',false),
				new MDataGridColumn('meta','Meta','left',true,'65%',true),
				new MDataGridColumn('resultado','Resultado','left',false,'35%',true,$resultado),
        );

		parent::__construct($query,$columns,$hrefGrid,0);

        $this->setTitle("Resultados das metas");

		$this->SetFilter(false);

		$this->SetIndex(1);

		$this->SetLinkType('hyperlink');

        $href_dele = $MIOLO->getActionURL( 'rh', 'main:proades:reuniao:main', $reuniao->idReuniao, array( 'form'=>'resultados','idMeta'=>'#0#','event' => 'btnExcluir:click' ) );
	
        $this->addActionDelete( $href_dele );
	}

    function generateHeader()
    {
        return null;
    }

	function GenerateFooter()
	{
		if ( ! $this->data )
		$footer[] = $this->GenerateEmptyMsg();
		$footer[] = new MSeparator();
		$footer[] = $this->GenerateControls();
		return $footer;
	}
}
?>
