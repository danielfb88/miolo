<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
/**
 * Grid Pessoas
 * Grid de uso geral para selecionar pessoas
 * @package br.org.miolo.ufjf.rh.grids
 */

MIOLO::Import('modules::rh::controls::linkpessoa');

class gridPessoas extends MDataGrid
{
    /**
     * Base URL
     * @var string 
     */
    var $listURL;
    var $pessoa;

    /**
     * Constructor
     */
    function gridPessoas()
    {
        global $MIOLO, $module, $page, $context, $self, $action, $perms, $state;

        $this->pessoa = $MIOLO->GetBusiness('common','pessoa');
        $filterNome = MForm::GetFormValue('nome');
        $filterCPF = str_replace('-','',str_replace('.','',MForm::GetFormValue('cpf')));

        if ( $filterNome )
        {
            if ( $filterCPF )
            {
                $query = $this->pessoa->ListByNomeAndCPF($filterNome,$filterCPF);
            }
            else
            {
                $query = $this->pessoa->ListByNome($filterNome);

            }
        }
        else
        {
            if ( $filterCPF )
            {
                $query = $this->pessoa->ListByCPF($filterCPF);
            }
            else
            {
                $query = $this->pessoa->ListByNome('%');
            }
        }
        /*
        $this->SetFilter(false);
        $filter = Form::GetFormValue('nome');
        $nome = empty($filter) ? '%' : $filter;
        $this->AddFilterText('nome','Nome',$nome);
        $this->SetIndex(1);
        */
        $href_trans = $MIOLO->GetActionURL('rh','main:pessoa','#0#','');
        $linkpessoa = new LinkPessoa('linkpessoa','%0%');
        $columns = array(
            new MDataGridColumn('idpessoa','Id','right', true, '',false),
            new MDataGridControl($linkpessoa,'idpessoa','Pessoa'),
         );
        $href_grid = $MIOLO->GetActionURL($module,$self,'', Array('event'=>'btnList_click'));
        parent::__construct($query, $columns, $href_grid,25);
        $ctlArray = 
          new MButton('btnNew', 'Incluir Novo Dependente', $MIOLO->GetActionURL('rh','funcionario',$objFuncionario->idFuncionario, array('event'=>'btnNew:click')));
        
        $this->SetLinkType('hyperlink');
        $this->SetControls($ctlArray);
        $this->SetTitle('Relação de Pessoas');
        $this->EventHandler();
    }

    function GenerateFooter()
    {
        if (!$this->data) 
           $footer[] = $this->GenerateEmptyMsg();
        return $footer;
    }
}
?>
