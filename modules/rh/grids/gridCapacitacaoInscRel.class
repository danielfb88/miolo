<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
MIOLO::Import('extensions::cpaint2.inc.php','cpaint'); 

class gridCapacitacaoInscRel extends MObjectGrid
{
    var $listURL;
    var $cp;  // the cpaint object

    function __construct($objModulo)
    {
        global $MIOLO, $module, $page, $context, $self, $action, $perms, $state;

        $status = array(""=>"Pendente","E"=>"Excedente","P"=>"Pendente","A"=>"Autorizado","C"=>"Confirmado", "X"=>"Autoriz-Exc","F"=>"Concluido");

        $columns = array(
            new MObjectGridColumn('inscricao','','left', false,'0%',false),
            new MObjectGridColumn('idvinculo','SIAPE','left', false,'10%',true),
            new MObjectGridColumn('dadosPessoais->nome','Nome','left', false,'70%',true),
            new MObjectGridColumn('telefone','Telefone','left', false,'10%',true),
            new MObjectGridColumn('status','Status','left', false,'10%',true,$status),
        );
        
        $href_grid = $MIOLO->GetActionURL($module,$self);
        parent::__construct($objModulo->getInscritosConfirmados(), $columns, $href_grid,0);
//        $this->SetTitle('Inscrições Confirmadas para [' . $objModulo->idcurso . ']  ' . $objModulo->nome . ' - ' . $objModulo->modulo);
        $this->SetTitle('Inscrições Confirmadas para [' . $objModulo->modulo . ']  ');
        $this->setRowMethod('gridCapacitacaoInscRel','gridRowMethod');
        $this->page->state->set('orderby', '2', $this->name);
        $this->SetFilter(false);
        $this->SetIndex(0);
        $this->SetWidth('99%');
        $this->SetLinkType('hyperlink');
        $this->eventHandler();
    }

    function gridRowMethod($i, $row, $actions,$columns)
    {
        if (( $row[4]{0} == 'A' ) || ( $row[4]{0} == 'X' ))
        {
            $columns[4]->control[$i]->setColor('blue');
            $columns[4]->control[$i]->setBold(true);
        }
        if ( $row[4]{0} == 'C' )
        {
            $columns[4]->control[$i]->setColor('green');
            $columns[4]->control[$i]->setBold(true);
        }
        if ( $row[4]{0} == 'F' )
        {
            $columns[4]->control[$i]->setColor('red');
            $columns[4]->control[$i]->setBold(true);
        }
    }


    function generateData()
    {
       if ( count( $this->objArray ) )
       {
           foreach ($this->objArray as $i => $row)
           {
               $row->getDadosPessoais();
           }
           parent::generateData();
       }
    }

    function GenerateHeader()
    {
        return NULL;
    }

    function GenerateFooter()
    {
        if (!$this->data) 
           $footer[] = $this->GenerateEmptyMsg();
        $footer[] = new MSeparator();
        $footer[] = $this->GenerateControls();
        return $footer;
    }

}
?>
