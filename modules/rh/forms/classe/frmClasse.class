<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/**
 * Form Classe
 */
class frmClasse extends CompoundForm
{
	public $oid;
    protected $classe;
    /**
     * Construtor
     */
    function __construct($objClasse)
    {
        global $MIOLO;
        $this->classe = $objClasse;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL('rh','main:classe:find'));
        $this->SetTitle($this->classe->nome);
        $this->SetIcon($MIOLO->GetUi()->GetImage('rh','classe_mini.png'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $history;

        $classe = $this->classe;
        if ($this->oid == NULL) $this->oid = $classe->idClasse;

// form
        $ui = $MIOLO->GetUI();
        $form = Form::GetFormValue('form');
        switch ($form)
        {
            case 'dados' : 
				$this->_form[0] = $ui->GetForm($module,'frmClasseDados', $classe, 'classe'); 
                break;
            case 'referencias':
				$classe->getReferencias();
				if ( ($id = Form::GetFormValue('id')) != NULL )
				{
					$referencia = $classe->GetReferencia($id);
					if ($referencia != NULL)
					{
					 	$this->_form[] = $ui->GetForm($module,'frmClasseReferencia',$referencia,'classe');
                        $page->SetAction($history->Top('action'));
					}
				 }
                 array_unshift($this->_form, $ui->GetGrid($module,'gridReferencia', $classe));
                 break;
				 
            case 'excluir'     : 
                 $this->_form[0] = $ui->GetForm($module,'frmClasseDel', $classe, 'classe'); 
                 break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($MIOLO->GetActionURL('rh','main:classe',$classe->idClasse));
        	$page->SetAction($history->Top('action'));
        }
		

// panel        
        $action = $context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        $panel->AddUserAction('rh_classe_dados',A_EXECUTE,'Editar',
            $ui->GetImage('rh','edit.png'),'rh',$action, $this->oid, array("form"=>"dados"));
        $panel->AddUserAction('rh_classe_referencias',A_EXECUTE,'Referências',
            $ui->GetImage('rh','referencia.png'),'rh',$action, $this->oid, array("form"=>"referencias"));
        $panel->AddUserAction('rh_classe_excluir',A_EXECUTE,'Excluir',
					$ui->GetImage('rh','excluir.png'),'rh',$action, $this->oid, array("form"=>"excluir"));

// info
		$this->_info[1]	= new TextLabel('txtNome',$this->classe->nome,'Nome');
       
	   	$tabelaGeral = $MIOLO->GetBusiness('common','tabelageral');
	   	$query = $tabelaGeral->ListByTabela('RH_CATEGORIA');
		$categoria = new Selection('selCategoria',$this->classe->categoria,'Categoria',$query->chunkResult());
		$categoria->readonly = true;
		$this->_info[2]	= $categoria;     
	}
}
?>
