<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/**
 * Formulário de edição de dados da classe
 */
class frmClasseDados extends Form
{
	/**
	 * Objeto classe
	 * @access protected
	 * @var BusinessRhClasse
	 */
	protected $objClasse;

    function __construct($objClasse)
    {
		$this->objClasse = $objClasse;
        parent::__construct('Dados da Classe');
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO;
	   
       $tabelaGeral = $MIOLO->GetBusiness('common','tabelageral');
		$fields = array(
            new TextField('idClasse','','Código','10'),
            new TextField('classe','','Classe','20'),
            new TextField('nome','','Nome','30'),
			new Selection('categoria','','Categoria')
        );
		
        $this->SetFields($fields);
        $this->classe->AddAttribute('maxlength','20');
        $this->nome->AddAttribute('maxlength','30');
		
	   	$query = $tabelaGeral->ListByTabela('RH_CATEGORIA');
	    $this->SetFieldAttr('categoria','options',$query->chunkResult()); 
		$this->SetFieldAttr('idClasse','readonly',true);
		
		$buttons = array(
			new FormButton('btnSalvar','Enviar'),
            );
		$this->SetButtons($buttons);
		
		$validators = array(
			new RequiredValidator('classe'),
			new RequiredValidator('nome')
		);

		$this->SetValidators($validators);
		$this->SetData();
    }

	function SetData()
	{
		$data = $this->objClasse;
		$this->SetFieldValue('idClasse',$data->idClasse);
		$this->SetFieldValue('classe',$data->classe);
		$this->SetFieldValue('nome',$data->nome);
		$this->SetFieldValue('categoria',$data->categoria);
	}


	public function btnSalvar_click()
	{
      global $MIOLO;
             
      $data = $this->GetData();
      
      // Retirando os caracteres especiais. :-)
		$caracteres = array("#","*", "&", "%", "(", ")", "$", "@", "!", "'", "\"", "+", "=", "-", "/", ".", ",", "^", "?", ":", "}", "]", "[", "º","{","|",">","<",";");
		$data->nome = str_replace($caracteres,"",$data->nome);
		$data->classe = str_replace($caracteres,"",$data->classe);
		
   	if (strlen(trim($data->classe)) < '1')
		{
			$this->addError('Especifique Melhor o Campo Classe.');
		}
		else if(strlen(trim($data->nome)) <= '4')
		{
			$this->addError('Especifique Melhor o Campo Nome.');
		}
		else
		{
			$this->objClasse->SetData($data);
			$this->objClasse->save();
		   $go = $MIOLO->GetActionURL('rh','main:classe',$this->objClasse->idClasse);
			$MIOLO->Information('Dados da Classe atualizados com sucesso.', $go );
		}
	}
 }
?>
