<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmProadesTaes extends MForm
{
    private $proades;
    
	function __construct($proades)
	{
        $this->proades = $proades; 
        
		parent::__construct("Servidores lotados na Unidade");
		$this->EventHandler();
	}
    
	function CreateFields()
	{
        $proades = $this->proades;

        $setor = $this->manager->getBusiness('common','setor');
        $session = $this->manager->session;
        $idSetor = $setor->getSetoresFilhos($session->getValue('idSetor'));

        if ( $session->getValue('idSetor') == 1337 )
        {
            //se for a chefia de gabinete entao tem que juntar com a secretaria geral
            $idSetor[] = 1346;
            $idSetor[] = 1306;
        }


        $funcionario = $this->manager->getBusiness('rh','funcionario');
        $qryServidores = $funcionario->listWithCargoBySetor($idSetor);

        foreach ( $qryServidores->result as $rs )
        {
            $idVinculo = $rs[0];
            $nome = $rs[1];
            $cargo = $rs[2];

            $vinculo = $this->manager->getBusiness('rh','vinculo');
            $vinculo->getById($idVinculo);
            
            if ( $vinculo->isAtivo() )
            {
                $result[] = array($idVinculo,$nome,$cargo);
            }
        }
        $qryServidores->result = $result;

		$href = $this->manager->getActionURL('rh','main:proades:main');

		$columns = array(
				new MDataGridColumn('idvinculo','SIAPE','left',false,'15%',true),
				new MDataGridColumn('nome','Nome','left',false,'45%',true),
				new MDataGridColumn('cargo','Cargo','left',false,'40%',true),
        );

        $grid = new MDataGrid($qryServidores,$columns,$href,0);

        $fields = array(
                $grid,
                new MSeparator(),
                new MText("","Caso a listagem de servidores n&atilde;o esteja correta, clique no bot&atilde;o abaixo para informar a CAMP/PRORH")
            );

        $this->setFields($fields);

        $buttons = array(
                new MButton('btnEquipeInconsistente',"Informar equipe inconsistente",$this->manager->getActionUrl('rh','main:proades:main',$proades->idProades,array('form'=>'fase1','subform'=>'coord','cs'=>'probequipe')))
                );

        $this->setButtons($buttons);

        $this->setButtonAccess();

	}

    function setButtonAccess()
    {
        $perms = $this->manager->getPerms();
        foreach ( $this->buttons as $button )
        {
            $this->setButtonAttr($button->name,'visible',$perms->checkAccess('rh_proadesexecute',A_ACCESS));
        }
    }
}
?>
