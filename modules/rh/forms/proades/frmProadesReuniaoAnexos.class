<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmProadesReuniaoAnexos extends MForm
{
    var $reuniao;

    function __construct($reuniao)
    {
        $this->reuniao = $reuniao;
        parent::__construct('Anexos da Reuni&atilde;o');
        $this->eventHandler();
    }

    function createFields()
    {
        $fields = array(
                new MSeparator('Anexar documentos considerados importantes para o processo de avalia&ccedil;&atilde;o.'),
                new MTextField('descricao','','Descri&ccedil;&atilde;o',50),
                new MFileField('anexo','','Anexo')
            );

        $this->setFields($fields);

        $buttons = array(
                new MButton('btnPost','Enviar')
            );
        $this->setButtons($buttons);
                
    }

    function btnPost_click()
    {
        if ( $_FILES['anexo']['name'] )
        {
            $anexo = $this->manager->getBusiness('rh','reuniaoanexo');
            $anexo->nome = $_FILES['anexo']['name'];
            $anexo->tipo = $_FILES['anexo']['type'];
            $anexo->descricao = $this->getFormValue('descricao');
            $anexo->arquivo = file_get_contents($_FILES['anexo']['tmp_name']);
            $anexo->idReuniao = $this->reuniao->idReuniao;
            try
            {
                $anexo->save();
                $go = $this->manager->getActionUrl('rh','main:proades:reuniao',$this->reuniao->idReuniao,array('form'=>'anexos'));
                $this->manager->information('Anexo cadastrado com sucesso',$go);
            }
            catch ( Exception $e )
            {
                $this->addError($e->getMessage());
            }
        }
        else
        {
            $this->addError('Por favor, escolha o arquivo antes de clicar em Enviar.');
        }
    }

    function btnExcluir_click()
    {
        $idAnexo = $this->getFormValue('idAnexo');
        $anexo = $this->manager->getBusiness('rh','reuniaoanexo');
        $anexo->getById($idAnexo);

        try
        {
            $anexo->delete();            
            $go = $this->manager->getActionUrl('rh','main:proades:reuniao',$this->reuniao->idReuniao,array('form'=>'anexos'));
            $this->manager->information('Anexo excu&iacute;do com sucesso!',$go);
        }
		catch (Exception $e)
		{
			$this->AddError($e->GetMessage());
		}
    }
}
?>
