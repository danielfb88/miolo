<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmProadesReuniaoNew extends MForm
{
    var $proades; 
    var $numero;

    function __construct($proades)
    {
        $MIOLO = MIOLO::getInstance();
        $this->proades = $proades;
        $setor = $MIOLO->getBusiness('common','setor');
        $num = MForm::getFormValue('num');
        $this->numero = $num;
        $ordem = array(
                1=>"Primeira",
                2=>"Segunda",
                3=>"Terceira"
            );
        $setor->getById($this->proades->idSetor);
        parent::__construct("$ordem[$num] Reuni&atilde;o da Unidade: $setor->nome");
        $this->eventHandler();
    }

    function createFields()
    {
        if ( $this->numero > 1 )
        {
            $numReuniao = $this->numero - 1;
            $reuniao = $this->proades->getReuniaoByNum($numReuniao);
        }

        if ( $reuniao || $this->numero == 1 )
        {
            $horarios = Array(
                                '7'=>'07:00',
                                '8'=>'08:00',
                                '9'=>'09:00',
                                '10'=>'10:00',
                                '11'=>'11:00',
                                '12'=>'12:00',
                                '13'=>'13:00',
                                '14'=>'14:00',
                                '15'=>'15:00',
                                '16'=>'16:00',
                                '17'=>'17:00',
                                '18'=>'18:00',
                                '19'=>'19:00',
                                '20'=>'20:00',
                                '21'=>'21:00',
                                '22'=>'22:00',
                                '23'=>'23:00'
                            );

            $fields = array(
                new MLabel("Insira os dados da nova reuni&atilde;o. Ap&oacute;s inserir as informa&ccedil;&otilde;es b&aacute;sicas clique em enviar para informar os resultados da reuni&atilde;o"),
                new MCalendarField('data','','Data'),
                new MTextField('local','','Local',50),
                new MSelection('inicio','','In&iacute;cio',$horarios),
                new MSelection('termino','','T&eacute;rmino',$horarios),
            );

            $this->setFields($fields);

            $buttons = array(
                new MButton('btnNew','Enviar')
            );

            $this->setButtons($buttons);

            $validator = array(
               new MRangeValidator('data','','01/08/2008','31/07/2009','d','required'),
               );

            //$this->setValidators($validator);
        }
        else
        {
            $this->addError("Para continuar &eacute; nec&eacute;ss&aacute;rio cadastrar a reuni&atilde;o anterior.");
        }
    }

	function btnNew_click()
	{
		$data = $this->getData();
		$reuniao = $this->manager->getBusiness('rh','reuniao');
        $reuniao->setData($data);
        $reuniao->idProades = $this->proades->idProades;
        $reuniao->numero = $this->numero;
		try
		{
			$reuniao->save();
			$go = $this->manager->getActionURL('','main:proades:reuniao:main',$reuniao->idReuniao);
			$this->page->Redirect($go);
		}
		catch (Exception $e)
		{
			$this->AddError($e->GetMessage());
		}
	}
}
?>
