<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmProadesDadosFatores extends MForm
{
    var $absoluto;
    var $relativo;

    function __construct()
    {
        parent::__construct('Fatores Dificultadores');
        $this->eventHandler();
    }

    function createFields()
    {
        $fator = $this->manager->getBusiness('rh','reuniaofator');
        
        $reuniao1 = $fator->listByReuniao(1);
        
        if ( ! $reuniao1->eof() )
        {
            $total1 = count($reuniao1->result);

            $tg = $this->manager->getBusiness('common','tabelageral');
            $qryFatores = $tg->listByTabela('RH_FATORDIFICULT');

            foreach ( $qryFatores->result as $rs )
            {
                $fatores[] = $rs[1];
            }

            foreach ( $reuniao1->result as $rs2 )
            {
                $fatorMarcado = $rs2[2];
                if ( in_array($fatorMarcado,$fatores) )
                {
                    $resultado1[$fatorMarcado]++;
                }
                else
                {
                    $resultado1['OUTRO']++;
                }
            }
            $reuniao2 = $fator->listByReuniao(2);
            if ( ! $reuniao2->eof() )
            {
                $total2 = count($reuniao2->result);
                foreach ( $reuniao2->result as $rs2 )
                {
                    $fatorMarcado = $rs2[2];
                    if ( in_array($fatorMarcado,$fatores) )
                    {
                        $resultado2[$fatorMarcado]++;
                    }
                    else
                    {
                        $resultado2['OUTRO']++;
                    }
                }
                ksort($resultado2);
            }
        }
        ksort($resultado1);
        foreach ( $resultado1 as $chave => $valor )
        {
            $valor2 = $resultado2[$chave];
            if ( ! $valor2 )
            {
                $valor2 = '0';
                $valorRel2 = '0';
            }
            else
            {
                if ( $total2 )
                {
                    $valorRel2 = round((100*$valor2)/$total2,2).'%';
                }
            }
            $this->absoluto[] = array($chave,$valor,$valor2);
            $this->relativo[] = array($chave,round((100*$valor)/$total1,2).'%',$valorRel2);
            unset($valorRel2);
        }
        $this->absoluto[] = array('TOTAL',$total1,$total2);

        $cols = array('Fator','Primeira Reuniao','Segunda Reuniao');
        $fields = array(
                new MTableRaw('Valores absolutos',$this->absoluto,$cols),
                new MTableRaw('Valores relativos',$this->relativo,$cols)
            );

        $this->setFields($fields);

        $buttons = array(
            new MButton('btnAbsoluto','Download valores absolutos'),
            new MButton('btnRelativo','Download valores relativos'),
        );

        $this->setButtons($buttons);
    }

    function btnAbsoluto_click()
    {
        $this->download($this->absoluto);
    }

    function btnRelativo_click()
    {
        $this->download($this->relativo);
    }

    function download($data)
    {
        MIOLO::Import('extensions::mcsvdump');
        $csvdump = new Mcsvdump(";");
        $csvdump->dump($data,'fatores_dificultadores');
        exit;
    }
}
?>
