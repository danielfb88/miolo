<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmProadesNovasMetas extends MForm
{
    private $proades;
    private $reuniao;
    
	function __construct($reuniao)
	{
        $this->proades = $reuniao->proades; 
        $this->reuniao = $reuniao;
        
		parent::__construct('Novas Metas/Repactua&ccedil;&atilde;o');
		$this->EventHandler();
	}
    
	function CreateFields()
	{
        $tipos = array(
                1 =>'NOVA META',
                2 =>'REPACTUA&Ccedil;&Atilde;O'
            );
        $fields = array(
                new MSeparator('Este campo n&atilde;o altera o Plano de Metas da primeira fase do PROADES. As novas metas ou as repactuadas inclu&iacute;das ser&atilde;o avaliadas na pr&oacute;xima reuni&atilde;o do PROADES.'),
                new MTextField('meta','','Meta',60),
                new MCalendarField('previsao','','Previsao para cumprimento'),
                new MSelection('tipo',1,'Tipo',$tipos),
                new MHiddenField('idMeta')
        );
        
        $this->SetFields($fields);		

        $buttons = array(
            new MButton('btnSalvar','Enviar'),
            //new MButton('btnAtiv','Atividades')
        );

        $this->setButtons($buttons);

        $this->setButtonAccess();
        
        //$this->setFieldAttr('btnAtiv','visible',FALSE);

        $validator = array(
           new MRangeValidator('previsao','',$this->proades->dataInicio,$this->proades->dataFim,'d','required'),
           );

        //$this->setValidators($validator);
	}

    function btnEditar_click()
    {
        $idMeta = $this->getFormValue('idMeta');
        $meta = $this->manager->getBusiness('rh','meta');
        $meta->getById($idMeta);

        $this->setFieldValue('meta',$meta->meta);
        $this->setFieldValue('previsao',$meta->previsao);
        $this->setFieldValue('idMeta',$meta->idMeta);
        
        //$this->setFieldAttr('btnAtiv','visible',TRUE);
    }

    function btnExcluir_click()
    {
        $idMeta = $this->getFormValue('idMeta');
        $meta = $this->manager->getBusiness('rh','meta');
        $meta->getById($idMeta);

        try
        {
            $meta->delete();            
            $go = $this->manager->getActionUrl('rh','main:proades:reuniao',$this->reuniao->idReuniao,array('form'=>'metas'));
            $this->page->redirect($go);
        }
		catch (Exception $e)
		{
			$this->AddError($e->GetMessage());
		}
    }

	function btnSalvar_click()
	{
		$data = $this->GetData();
		try
		{
            $meta = $this->manager->getBusiness('rh','meta');
            if ( $data->idMeta )
            {
                $meta->getById($data->idMeta);
            }
            $meta->setData($data);
            $meta->idProades = $this->proades->idProades;
            $meta->definida = $this->reuniao->numero;
			$meta->save();
            $go = $this->manager->getActionUrl('rh','main:proades:reuniao',$this->reuniao->idReuniao,array('form'=>'metas'));
            $this->page->redirect($go);
		}
		catch (Exception $e)
		{
			$this->AddError($e->GetMessage());
		}
	}
	
	function btnAtiv_click()
	{
		$go = $this->manager->getActionUrl('rh','main:proades:reuniao',$this->reuniao->idReuniao,array('form'=>'metas'));
        $this->setAction($go);
	}

    function setButtonAccess()
    {
        $perms = $this->manager->getPerms();
        foreach ( $this->buttons as $button )
        {
            $this->setButtonAttr($button->name,'visible',$perms->checkAccess('rh_proadesexecutefase2',A_ACCESS));
        }
    }
}
?>
