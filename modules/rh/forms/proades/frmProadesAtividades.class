<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmProadesAtividades extends MForm
{
    private $proades;
    private $meta;
    
	function __construct($proades)
	{
        $MIOLO = MIOLO::getInstance();
        $this->proades = $proades; 
        $idMeta = MForm::getFormValue('idMeta');

        $this->meta = $MIOLO->getBusiness('rh','meta');
        $this->meta->getById($idMeta);
       
		parent::__construct("Meta: ".$this->meta->meta);
		$this->EventHandler();
	}
    
	function CreateFields()
	{
        $fields = array(
                new MLabel('Cadastro das atividades da meta: '.$this->meta->meta),
                new MTextField('descricao','','Atividade',60),
                new MHiddenField('idMeta',$this->meta->idMeta),
                new MLink('lnkVoltar','',$this->manager->getActionUrl('rh','proades:main',$this->proades->idProades,array( 'form'=>'fase1', 'subform'=>'metas')),'Voltar às metas')
            );

            $buttons = array(
                new MButton('btnSalvar','Enviar')
            );
        
        
        $this->SetFields($fields);		
        $this->setButtons($buttons);
	}

	function btnSalvar_click()
	{
		$data = $this->GetData();
		try
		{
            $atividade = $this->manager->getBusiness('rh','ativproades');
            $atividade->setData($data);
			$atividade->save();
            $go = $this->manager->getActionUrl('rh','proades:main',$this->proades->idProades,array( 'form'=>'fase1', 'subform'=>'ativ', 'idMeta'=>$atividade->idMeta));
            $this->page->redirect($go);
		}
		catch (Exception $e)
		{
			$this->AddError($e->GetMessage());
		}
	}

	function btnExcluir_click()
	{
        $idAtividade = $this->getFormValue('idAtividade');
        $atividade = $this->manager->getBusiness('rh','ativproades');
        $atividade->getById($idAtividade);

		try
		{
            $idMeta = $atividade->idMeta;
			$atividade->delete();
            $go = $this->manager->getActionUrl('rh','main:proades:main',$this->proades->idProades,array('form'=>'fase1','subform'=>'ativ','idMeta'=>$idMeta));
            $this->page->redirect($go);
		}
		catch (Exception $e)
		{
			$this->AddError($e->GetMessage());
		}
	}

}
?>
