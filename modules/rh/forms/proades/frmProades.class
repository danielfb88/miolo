<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmProades extends MCompoundForm
{
	protected $proades;

	function __construct($proades)
	{
		$this->proades = $proades;
		parent::__construct("PROADES");
		//$this->SetTitle($this->grupo->grupo);
	}

	function createFields()
	{
		$ui = $this->manager->getUI();
		$form = MForm::getFormValue('form');
        
        $login = $this->manager->getLogin();

        
		if ($this->_form[0])
		{
			$this->_form[0]->SetClose($this->manager->GetActionURL('rh','main:proades',$this->proades->idProades));
		}
        
		$action = $this->manager->getContext()->action;
		$this->_panel[0] = $panel = new MActionPanel('pn1Compound','Opções','',false);
        $panel->SetIconType('small');

        $processo  = $this->manager->GetBusiness('protocolo','processo',$this->proades->numProcesso);
		
        if ( $this->proades->primeiraFaseHabilitada() )
        {
            $panel->AddAction('Primeira Fase',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"mobj"));
        }

        if ( $this->proades->segundaFaseHabilitada() || $this->manager->getPerms()->isMemberOf($login,'RH_PROADESADMIN') )
        {
		    $panel->AddAction('Segunda Fase',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase2"));
        }

        if ( $this->proades->terceiraFaseHabilitada() )
        {
		    $panel->AddAction('Terceira Fase',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase3"));
        }
            //manual PROADES
            $linkManual = new MLink('manual','Manual PROADES');
            $linkManual->setAction('rh','html:files:manualproades1.pdf');
            $panel->addLink('Manual PROADES',$ui->GetImage('rh','relatorio2_mini.png'),$linkManual,'NEW');

            //manual Plano de metas
            $linkManualPM = new MLink('manual','Manual Plano de Metas');
            $linkManualPM->setAction('rh','html:files:Plano_de_metas.pdf');
            $panel->addLink('Manual Plano de Metas',$ui->GetImage('rh','relatorio2_mini.png'),$linkManualPM,'NEW');

            //resolucao
            $linkResolucao = new MLink('manual','Resolucao');
            $linkResolucao->setAction('rh','html:files:resolucao_proades.pdf');
            $panel->addLink('Resolu&ccedil;&atilde;o',$ui->GetImage('rh','relatorio2_mini.png'),$linkResolucao,'NEW');

        
        //forms
		switch ($form)
		{

            case 'fase1':
            if ( $this->proades->primeiraFaseHabilitada() )
            {
                $this->_panel[1] = $panel2 = new MActionPanel('pn2Compound','Primeira Fase - Pactua&ccedil;&atilde;o das Metas','',false);
                $panel2->SetIconType('small');
                $panel2->AddAction('O que &eacute?',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"ajuda","tipo"=>"oque"));
                $panel2->AddAction('Passo a passo',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"ajuda","tipo"=>"passoapasso"));
		        $panel2->AddAction('Coordena&ccedil;&atilde;o Setorial',$ui->GetImage('common','edit.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"coord"));
                $panel2->AddAction('A UFJF',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"mobj"));
                $panel2->AddAction('Objetivos da Unidade',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"objunid"));
                $panel2->AddAction('Metas',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"metas"));
                $panel2->AddAction('Equipes de Trabalho',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"equipes"));
		        
                $panel2->AddAction('Imprimir',$ui->GetImage('rh','relatorio2_mini.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"imprimir"));
		
                $subform = MForm::getFormValue('subform');
                switch ( $subform) 
                {
                    case 'ajuda':
                        $data->tipo = MForm::getFormValue('tipo');
                        $data->fase = $form;
                        $this->_form[0] = $ui->GetForm('rh','frmProadesAcompanhamento',$data,'proades');

                        break;
                    case 'imprimir':
                        $this->_form[0] = $ui->GetForm('rh','frmProadesImprimePrimeiraFase',$this->proades,'proades');
                        break;
                    case 'coord':
                        $this->_panel[2] = $panel3 = new MActionPanel('pn3Compound','Coordena&ccedil;&atilde;o Setorial','',false);
                        $panel3->SetIconType('small');
                        $panel3->AddAction('Capa do Processo',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"coord","cs"=>"processo"));
                        $panel3->AddAction('Cadastrar os membros',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"coord","cs"=>"cadastro"));
                        $panel3->AddAction('Portaria',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"coord","cs"=>"portaria"));
                        $panel3->AddAction('Sub-coordena&ccedil;&atilde;o',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"coord","cs"=>"subcoord"));
		                $panel3->AddAction("Servidores",$ui->GetImage('common','edit.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase1","subform"=>"coord","cs"=>"tae"));
                        $cs = MForm::getFormValue('cs');
                        switch ($cs)
                        {
                            case 'cadastro':
                                $this->_form[0] = $ui->GetForm('rh','frmProadesCoordenacao',$this->proades,'proades');
                                $this->_form[1] = $ui->GetGrid('rh','gridProadesCoordenacao',$this->proades);
                            break;
                            case 'portaria':
                                $this->_form[0] = $ui->GetForm('rh','frmProadesPortariaExibir',$this->proades,'proades');
                            break;
                            case 'tae':
                                $this->_form[0] = $ui->GetForm('rh','frmProadesTaes',$this->proades,'proades');
                            break;
                            case 'subcoord':
                                $this->_form[0] = $ui->GetForm('rh','frmProadesSubCoordenacao',$this->proades,'proades');
                                if ( $this->proades->config->subCoordenacao == 'S' )
                                {
                                    $this->_form[1] = $ui->GetGrid('rh','gridProadesSubCoordenacoes',$this->proades);
                                }
                            break;
                            case 'membrossubcoord':
                                $this->_form[0] = $ui->GetForm('rh','frmProadesMembrosSubCoord',$this->proades,'proades');
        				        $this->_form[1] = $ui->GetGrid('rh','gridProadesMembrosPorSubCoord',$this->proades);
                            break;
                            case 'probequipe':
                                $this->_form[0] = $ui->GetForm('rh','frmProadesProblemaEquipe',$this->proades,'proades');
                            break;
                            
                            case 'processo':
                                $this->_form[0] = $ui->getForm('protocolo','frmProcessoCapa',$processo,'processos');
                        }

                        break;
                    case 'mobj':
                        $this->_form[0] = $ui->GetForm('rh','frmProadesMissaoObjetivos',$this->proades,'proades');
                        break;
                    case 'objunid':
                        $this->_form[0] = $ui->GetForm('rh','frmProadesObjetivosUnidade',$this->proades,'proades');
                        break;
                    case 'metas':
                        $this->_form[0] = $ui->GetForm('rh','frmProadesMetas',$this->proades,'proades');
				        $this->_form[1] = $ui->GetGrid('rh','gridProadesMetas',$this->proades);
                        break;
                    case 'ativ':
                    	$this->_form[0] = $ui->GetForm('rh','frmProadesAtividades',$this->proades,'proades');
				        $this->_form[1] = $ui->GetGrid('rh','gridProadesAtividadesPorMeta',$this->proades);
				        break;
                    case 'equipes':
                        $this->_form[0] = $ui->GetForm('rh','frmProadesEquipes',$this->proades,'proades');
				        $this->_form[1] = $ui->GetGrid('rh','gridProadesEquipes',$this->proades);
                        break;
                    case 'membros':
                        $this->_form[0] = $ui->GetForm('rh','frmProadesMembros',$this->proades,'proades');
				        $this->_form[1] = $ui->GetGrid('rh','gridProadesMembrosPorEquipe',$this->proades);
                        break;
                }
            }
            break;

            case 'fase2':
            if ( $this->proades->segundaFaseHabilitada() || $this->manager->getPerms()->isMemberOf($login,'RH_PROADESADMIN') )
            {
                $this->_panel[1] = $panel2 = new MActionPanel('pn2Compound','Segunda Fase - Acompanhamento do Desempenho ','',false);
                $panel2->SetIconType('small');
                $panel2->AddAction('O que &eacute?',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase2","subform"=>"ajuda","tipo"=>"oque"));
                $panel2->AddAction('Passo a passo',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase2","subform"=>"ajuda","tipo"=>"passoapasso"));
                $panel2->AddAction(' Ata da Primeira Reuni&atilde;o',$ui->GetImage('rh','relatorio2_mini.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase2","subform"=>"atareuniao1"));
                $panel2->AddAction(' Ata da Segunda Reuni&atilde;o',$ui->GetImage('rh','relatorio2_mini.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase2","subform"=>"atareuniao2"));
                //liberar para CRI, NEAD e PROPLAG
                if ( $this->proades->idSetor == 1322 || $this->proades->idSetor == 1313 || $this->proades->idSetor == 1309 || $this->proades->idSetor == 1337 || $this->proades->idSetor == 1347 || $this->proades->idSetor == 1377 || $this->proades->idSetor == 1390 || $this->proades->idSetor == 1342 || $this->manager->getPerms()->isMemberOf($login,'RH_PROADESADMIN') )
                {
                    $panel2->AddAction('Primeira Reuni&atilde;o',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase2","subform"=>"reunioes","num"=>1));
                }
                if ( $this->proades->idSetor == 558 || $this->proades->idSetor == 1347 || $this->proades->idSetor == 1368 || $this->manager->getPerms()->isMemberOf($login,'RH_PROADESADMIN') )
                {
                    $panel2->AddAction('Segunda Reuni&atilde;o',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase2","subform"=>"reunioes","num"=>2));
                }
                $panel2->AddAction('Terceira Reuni&atilde;o',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase2","subform"=>"reunioes","num"=>3));
		
                $this->proades->retrieveAssociation('reunioes');
                $subform = MForm::getFormValue('subform');
                switch ( $subform) 
                {
                    case 'ajuda':
                        $data->tipo = MForm::getFormValue('tipo');
                        $data->fase = $form;
                        $this->_form[0] = $ui->GetForm('rh','frmProadesAcompanhamento',$data,'proades');
                    break;

                    case 'reunioes':
                        $num = MForm::getFormValue('num');
				        //$this->_form[1] = $ui->GetGrid('rh','gridProadesReunioes',$this->proades);
                        $reuniao = $this->proades->getReuniaoByNum($num);

                        if ( $reuniao )
                        {
                            //envia para o formulario da reuniao ja criada
                            $url = $this->manager->getActionUrl('rh','main:proades:reuniao',$reuniao->idReuniao);
                            $this->page->Redirect($url);
                        }
                        else
                        {
                            $this->_form[] = $ui->getForm('rh','frmProadesReuniaoNew',$this->proades,'proades');
                        }

                        break;

                    case 'oque':
                        $this->_form[0] = $ui->GetForm('rh','frmProadesAcompanhamento',$this->proades,'proades');
                        break;
                    case 'atareuniao1':
                        $reuniao = $this->proades->getReuniaoByNum(1);
				        $this->_form[0] = $ui->GetForm('rh','frmProadesReuniaoImprimir',$reuniao,'proades');
                        break;
                    case 'atareuniao2':
                        $reuniao = $this->proades->getReuniaoByNum(2);
				        $this->_form[0] = $ui->GetForm('rh','frmProadesReuniaoImprimir',$reuniao,'proades');
                        break;
                }
            }
            break;
            

            case 'fase3':
            if ( $this->proades->segundaFaseHabilitada() )
            {
                $this->_panel[1] = $panel2 = new MActionPanel('pn2Compound','Terceira Fase - Avalia&ccedil&atilde;o do desempenho','',false);
                $panel2->SetIconType('small');
                $panel2->AddAction('O que &eacute?',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase3","subform"=>"ajuda","tipo"=>"oque"));
                $panel2->AddAction('Passo a passo',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase3","subform"=>"ajuda","tipo"=>"passoapasso"));
                $panel2->AddAction('Plano de metas',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase3","subform"=>"pmetas"));
                $panel2->AddAction('Relat&oacute;rio Final do Desempenho individual',$ui->GetImage('common','groups.png'),'rh',$action,$this->proades->idProades,array("form"=>"fase3","subform"=>"individual"));
		
                $subform = MForm::getFormValue('subform');
                switch ( $subform) 
                {
                    case 'ajuda':
                        $data->tipo = MForm::getFormValue('tipo');
                        $data->fase = $form;
                        $this->_form[0] = $ui->GetForm('rh','frmProadesAcompanhamento',$data,'proades');
                    break;
                    case 'pmetas':
                        $this->_form[0] = $ui->GetForm('rh','frmProadesPlanoDeMetas',$this->proades,'proades');
                        break;
                    case 'individual':
                        $this->_form[0] = $ui->GetForm('rh','frmProadesNaoHabilitados',$this->proades,'proades');
				        $this->_form[1] = $ui->GetGrid('rh','gridProadesNaoHabilitados',$this->proades);
                        break;
                }
            }
            break;

		}

		// info

        $setor = $this->manager->getBusiness('common','setor');
        $setor->getById($this->proades->idSetor);

        $vinculo = $this->manager->getBusiness('rh','vinculo');
        $vinculo->getById($this->proades->idDirigente);
        $vinculo->retrieveAssociation('funcionario');
        $vinculo->funcionario->retrieveAssociation('pessoa');

        $processo  = $this->manager->GetBusiness('protocolo','processo',$this->proades->numProcesso);

		$this->_info[1] = new MTextLabel('txtUnidade',$setor->nome,'Unidade');
		$this->_info[2] = new MTextLabel('txtDirigente',$vinculo->funcionario->pessoa->nome,'Dirigente');
		$this->_info[3] = new MTextLabel('txtInicio',$this->proades->dataInicio,'In&iacute;cio');
		$this->_info[4] = new MTextLabel('txtFim',$this->proades->dataFim,'Fim');
    	$this->_info[5] = new MTextLabel('processo',$processo->numProcessoFormatado(),'Processo');
	}
}
?>
