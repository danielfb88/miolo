<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

MIOLO::Import('extensions::class.phpmailer.php','PHPMailer'); 
class frmProadesSubCoordenacao extends MForm
{
    private $proades;
    
	function __construct($proades)
	{
        $this->proades = $proades; 
        
		parent::__construct("Sub-Coordena&ccedil;&atilde;o");
		$this->EventHandler();
	}
    
	function CreateFields()
	{
        $proades = $this->proades;

        if ( $proades->config->subCoordenacao == 'S' )
        {
            $fields = array(
                    new MLabel('Seu pedido para a cria&ccedil;&atilde;o de '.$proades->config->quantSubCoord.' sub-coordena&ccedil;&otilde;es foi atendido. Por favor, informe um nome para cada sub-coordena&ccedil;&atilde;o que deseja criar e em seguida clique em Enviar. Para informar os membros da sub-coordena&ccedil;&atilde;o clique sobre o nome da mesma na listagem abaixo.'),
                    new MTextField('nome','','Nome',30),
                    new MHiddenField('categoria',2),
                    new MHiddenField('idEquipe')
            );
            
            $this->SetFields($fields);		

            $buttons = array(
                new MButton('btnSalvar','Enviar')
            );

            $this->setButtons($buttons);
            $this->setButtonAccess();
        }
        else
        {
            if ( $proades->config->pedidoSubCoord == 'N' || $proades->config->pedidoSubCoord == '' )
            {
                $fields = array(
                        new MText('','Para criar uma sub-coordena&ccedil;&atilde;o setorial &eacute; necess&aacute;rio fazer um pedido a CAMP/PRORH. Informe abaixo o n&uacute;mero de sub-coordena&ccedil;&otilde;es necess&aacute;rias e clique no bot&atilde;o enviar.'),
                        new MTextField('quantSub','','Quantidade',5,'Digite um n&uacute;mero v&aacute;lido.')
                    );

                $this->setFields($fields);
    
                $validators = array(
                    new MIntegerValidator('quantSub','','required')
                );

                $this->setValidators($validators);

                $buttons = array(
                        new MButton('btnSubCoord','Enviar')
                        );

                $this->setButtons($buttons);
                $this->setButtonAccess();
            }
            else
            {
                $fields = array(
                        new MText('','Seu pedido para a cria&ccedil;&atilde;o de '.$proades->config->quantSubCoord.' sub-coordena&ccedil;&otilde;es foi encaminhado a CAMP/PRORH. Aguarde libera&ccedil;&atilde;o.'),
                        new MSeparator()
                        );
                $this->setFields($fields);

                $this->setShowPostButton(FALSE);
                
            }
        }


	}

    function btnSubCoord_click()
    {
        $proades = $this->proades;

        $quant = $this->getFormValue('quantSub');
        $proades->config->pedidoSubCoord = 'S';
        $proades->config->quantSubCoord = $quant;
        $proades->config->subCoordenacao = 'S';
        try
        {
            $proades->save();
            $this->enviaEmail($quant);
            $go = $this->manager->getActionUrl('rh','proades:main',$this->proades->idProades,array('form'=>'fase1','subform'=>'coord','cs'=>'subcoord'));
            $this->page->redirect($go);
        }
        catch ( Exception $e )
        {
			$this->AddError($e->GetMessage());
        }

    }

	function btnSalvar_click()
	{
		$data = $this->GetData();
		try
		{
            $equipe = $this->manager->getBusiness('rh','equipe');
            $equipe->idProades = $this->proades->idProades;
            if ( $data->idEquipe )
            {
                //atualizacao: pode salvar direto
                $equipe->getById($data->idEquipe);
                $equipe->setData($data);
                $equipe->save();
                $go = $this->manager->getActionUrl('rh','proades:main',$this->proades->idProades,array('form'=>'fase1','subform'=>'coord','cs'=>'subcoord'));
                $this->page->redirect($go);
            }
            else
            {
                if ( $this->proades->permiteCriacaoSubCoord() )
                {
                    $equipe->setData($data);
                    $equipe->save();
                    $go = $this->manager->getActionUrl('rh','proades:main',$this->proades->idProades,array('form'=>'fase1','subform'=>'coord','cs'=>'subcoord'));
                    $this->page->redirect($go);
                }
                else
                {
                    $this->addError("Todas as sub-coordena&ccedil;&otilde;es permitdas j&aacute; foram criadas.");
                }
            }
		}
		catch (Exception $e)
		{
			$this->AddError($e->GetMessage());
		}
	}

    function enviaEmail($quant)
    {
        $session = $this->manager->session;
        $setor = $this->manager->getBusiness('common','setor');
        $setor->getById($session->getValue('idSetor'));

        $mail = new PHPMailer();
        $mail->IsSMTP(); // telling the class to use SMTP
        $mail->Host = "smtp.ufjf.br"; // SMTP server
        $mail->From = 'siga@ufjf.edu.br';
        $mail->FromName = 'SIGA - Sistema Integrado de Gestao Academica';
        $mail->Subject = "$setor->sigla - Pedido de Sub-Coordenacao";
        $time = $this->manager->getSysTime(); 
        $ipaddress = $_SERVER['REMOTE_ADDR'];
        $mensagem .= "Pedido feito em [{$time}] a partir da maquina [{$ipaddress}].\n";

        $mensagem .= "Setor: $setor->sigla - $setor->nome\n";
        $mensagem .= "Fez o pedido de $quant sub-coordenacoes.";
        $body =
<<< HERE
        $mensagem
HERE;
        $mail->Body = $body;

        $mail->AddAddress("camp.prorh@ufjf.edu.br");
        $mail->Send();
    }
    function btnEditar_click()
    {
        $idEquipe = $this->getFormValue('idEquipe');
        $equipe = $this->manager->getBusiness('rh','equipe');
        $equipe->getById($idEquipe);

        $this->setFieldValue('nome',$equipe->nome);
        $this->setFieldValue('idEquipe',$equipe->idEquipe);
    }

    function btnExcluir_click()
    {
        $idEquipe = $this->getFormValue('idEquipe');
        $equipe = $this->manager->getBusiness('rh','equipe');
        $equipe->getById($idEquipe);

        try
        {
            $equipe->delete();            
            $go = $this->manager->getActionUrl('rh','proades:main',$this->proades->idProades,array('form'=>'fase1','subform'=>'coord','cs'=>'subcoord'));
            $this->page->redirect($go);
        }
		catch (Exception $e)
		{
			$this->AddError($e->GetMessage());
		}
    }

    function setButtonAccess()
    {
        $perms = $this->manager->getPerms();
        foreach ( $this->buttons as $button )
        {
            $this->setButtonAttr($button->name,'visible',$perms->checkAccess('rh_proadesexecute',A_ACCESS));
        }
    }
}
?>
