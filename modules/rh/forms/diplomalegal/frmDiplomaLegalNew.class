<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmDiplomaLegalNew extends Form
{

    function __construct()
    {
        global $MIOLO;
        $this->Form('Incluir Novo Diploma Legal');
        $this->SetClose($MIOLO->GetActionURL('rh','main:diplomalegal:find'));
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO;
	   
		$fields = array(
            new TextField('idDiplomaLegal','','Código','2','Máx. 2 dígitos'),
            new TextField('descricao','','Descrição','20','Máx. 20 caracteres'),
        );
		
        $this->SetFields($fields);
		
		$buttons = array(
        	new FormButton('btnNew', 'Incluir Diploma Legal')
            );
		$this->SetButtons($buttons);
		
		 $this->idDiplomaLegal->AddAttribute('maxlength','2');
       $this->descricao->AddAttribute('maxlength','20');

		$validators = array(
           new RequiredValidator('idDiplomaLegal'),
           new RequiredValidator('descricao'),
           
           new IntegerValidator('idDiplomaLegal'),
		);
       $this->SetValidators($validators);

    }

    function btnNew_click()
    {
		global $MIOLO, $page, $module;

        	$data = $this->GetData();
		$id = $data->idDiplomaLegal;
		
		// Retirando os caracteres especiais. :-)
		$caracteres = array("#","*", "&", "%", "(", ")", "$", "@", "!", "'", "\"", "+", "=", "-", "/", ".", ",", "^", "?", ":", "}", "]", "[", "º","{","|",">","<",";");
		$data->descricao = str_replace($caracteres,"",$data->descricao);
		
		if(is_numeric($id))
		{
	      $diplomaLegal = $MIOLO->GetBusiness($module,'diplomalegal',$id);
			if (strlen(trim($id)) < '1')
			{
				$this->addError('Informe o id do Diploma Legal.');
			}
			else if ($id <= 0)
			{
				$this->addError('Informe um id valido para o Diploma Legal.');
			}
			elseif($diplomaLegal->isPersistent())
			{
				$this->addError('Já existe um registro de Diploma Legal com esse ID. Favor digite outro ID.');
			}
			elseif(strlen(trim($data->descricao)) < '5')
			{
				$this->addError('Informe a Descrição do Diploma Legal.');
			}
			else
			{
				$diplomaLegal->SetData($data);
		        	$diplomaLegal->save();
				$go = $MIOLO->GetActionURL('rh','main:diplomalegal',$diplomaLegal->idDiplomaLegal);
	   			$MIOLO->Information('Dados do Diploma Legal inseridos com sucesso.', $go );
			}
		}
		else
		{
			$this->addError('Informe o id Diploma Legal no padrão numérico');
		}

	}

 }
?>
