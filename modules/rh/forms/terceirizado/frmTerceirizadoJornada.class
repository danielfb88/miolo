<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmTerceirizadoJornada extends MForm
{
	protected $terceirizado;
	function frmTerceirizadoJornada($terceirizado)
	{
		global $MIOLO, $module, $self;
		$this->terceirizado = $terceirizado;
		parent::__construct("Mudança de Jornada");
		$this->EventHandler();
	}

	function CreateFields()
	{
		global $MIOLO, $module, $self, $action;
		
		$objJornada = $this->manager->GetBusiness('rh','jornada');
		$query = $objJornada->listAll();
		$jornadas = $query->chunkResult();
		asort($jornadas);
		$objEscala = $this->manager->GetBusiness('rh','escala');
		$query = $objEscala->listAll();
		$escalas = $query->chunkResult();
		asort($escalas);
		$arrJE = ($jornadas + $escalas);
				
		$terceirizado = $this->terceirizado;
		$terceirizado->GetProvimentos();
		$provimento = $terceirizado->GetProvimentoAtual();
		
		//verifica escala
		if ($provimento->isEscala())
		{
		    $idJE = $provimento->escala->idEscala;
		}
		else 
		{
		    $idJE = $provimento->jornada->idJornada;
		}	
		
		$fields = Array(
        new MSelection('idJornada',$idJE,'Jornada',$arrJE),
        new MCalendarField('dataInformada','','Data')           
		);

		$this->SetFields($fields);
		
		$buttons = Array
		(
			new FormButton('btnPost','Enviar')
		);
		$this->SetButtons($buttons);
		
		$this->SetClose($MIOLO->GetActionURL($module,$self));
	}
	
	function btnPost_click()
	{
		global $MIOLO, $module, $self, $action;
		
		$terceirizado = $this->terceirizado;
		$dataInformada = $this->GetFieldValue('dataInformada');		
		$idJornada = $this->GetFieldValue('idJornada');
	
		$prov = $this->terceirizado->GetProvimentoAtual();
		$jornadaAtual = $prov->idJornada;
		$novaJornada = $idJornada;

		if($novaJornada < $jornadaAtual)
		{
			$msg = "OBS.: A redução de jornada de trabalho acarretará na redução de salário";
		}
		else
		{
			$msg = null;
		}
		
		
	    $go = $MIOLO->GetActionURL('rh','main:terceirizado',$terceirizado->idTerceirizado,array('form'=>'jornada'));		
		
	    if ( $terceirizado )
		{
			if($dataInformada != '')
			{
				if ( !$terceirizado->existeOcorrencia($dataInformada) )
				{
				
					try 
					{
						$terceirizado->BeginTransaction();
						$terceirizado->save();
						$provimento = $this->manager->getBusiness('rh','provterceirizado');	
						$provimento->SetTransaction($terceirizado->GetTransaction());
						//$provimento->finalizaUltimoProvimento($terceirizado->idTerceirizado,'4',$dataInformada,$idJornada);
						$srtjornada = strlen($this->GetFieldValue('idJornada'));
						switch ($srtjornada) {
						    case 1:
								$idJornada = '0';
						        break;
						    case 2:
						        $idJornada = $this->GetFieldValue('idJornada');
								$provimento->finalizaUltimoProvimento($terceirizado->idTerceirizado,'4',$dataInformada,$idJornada);
						        break;
						    case 4:
								$idJornada = '0';
								$idEscala = $this->GetFieldValue('idJornada');
								$provimento->finalizaUltimoProvimento($terceirizado->idTerceirizado,'4',$dataInformada, $idJornada, $idEscala);
						        break;
						}
						$terceirizado->EndTransaction();
						$MIOLO->Information("Registro atualizado com sucesso!". "<br>".$msg,$go);
					}
					catch ( Exception $e )
					{
						$MIOLO->Error("Erro ao gravar!",$go);
					}
				}
				else 
				{
					$MIOLO->Error("Já existe uma ocorrênica nesta data!",$go);	
				}				
			}
			else
			{
				$MIOLO->Error("Campo 'Data' não foi informado!",$go);
			}
			$this->AddError($terceirizado->GetErrors());
		}
	}
}
?>
