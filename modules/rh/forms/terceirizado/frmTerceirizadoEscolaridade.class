<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmTerceirizadoEscolaridade extends MForm
{
	protected $terceirizado;
	function frmTerceirizadoEscolaridade($terceirizado)
	{
		global $MIOLO, $module, $self;
		$this->terceirizado = $terceirizado;
		parent::__construct("Mudança de Escolaridade");
		$this->EventHandler();
	}

	function CreateFields()
	{

		$tabelaGeral = $this->manager->GetBusiness('common','tabelageral');
		$query1 = $tabelaGeral->ListIten1Item2FromTabela('RH_ESCOLARIDADE');
		$escolaridade = $query1->result;
		$query2 = $tabelaGeral->ListIten1Item2FromTabela('RH_TITULACAO');
		$titulacao = $query2->result;
		$arrEscolaridades = array_merge($escolaridade,$titulacao);
	
		global $MIOLO, $module, $self, $action;
		$terceirizado = $this->terceirizado;
		$fields = Array(
        	new MSelection('escolaridade',$terceirizado->escolaridade,'Escolaridade',$arrEscolaridades),
		);
		$this->SetFields($fields);
		$this->escolaridade->AddAttribute('maxlength','50');	
		$buttons = Array
		(
			new FormButton('btnPost', 'Enviar'),
		);
		$this->SetButtons($buttons);
		$this->SetClose($MIOLO->GetActionURL($module,$self));
	}
	
	function btnPost_click()
	{
		global $MIOLO, $module, $self, $action;
		$terceirizado = $this->terceirizado;
	    $go = $MIOLO->GetActionURL('rh','main:terceirizado',$this->terceirizado->idTerceirizado,array('form'=>'escolaridade'));		
		if ( $terceirizado )
		{
			$terceirizado->escolaridade = strtoupper($this->GetFormValue('escolaridade'));
			if( $terceirizado->escolaridade != '' )
			{
				try 
				{
					$terceirizado->save();
					$MIOLO->Information("Registro atualizado com sucesso!",$go);
				}
				catch ( Exception $e )
				{
					$MIOLO->Error("Erro ao gravar!",$go);
				}
			}
			else
			{
				$MIOLO->Error("Campo não imformado!",$go);
			}
			$this->AddError($terceirizado->GetErrors());
		}
	}
}
?>
