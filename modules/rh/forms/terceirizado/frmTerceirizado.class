<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

MIOLO::Import('modules::rh::forms::pessoa::frmPessoa');
class frmTerceirizado extends frmPessoa
{
    protected $terceirizado;

    function __construct($objTerceirizado)
    {
        $this->terceirizado = $objTerceirizado;
        parent::__construct($this->terceirizado->pessoa);
        $this->SetTitle('Funcionário Terceirizado');
        $this->SetIcon($this->manager->GetUi()->GetImage('rh','terceirizado_mini.png'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $action, $history;

        $terceirizado = $this->terceirizado;
        Util::SetIfNull($this->oid, $terceirizado->idTerceirizado);
        parent::CreateFields();
        $ui = $this->manager->GetUI();
        
        //form
        $form = Form::GetFormValue('form');

        
        $formClass['escolaridade']  = 'frmTerceirizadoEscolaridade';
        $formClass['instituicao']  = 'frmTerceirizadoInstituicao';

        $formClass['local']  = 'frmTerceirizadoLocal';
        $formClass['jornada']  = 'frmTerceirizadoJornada';        
        $formClass['funcao']  = 'frmTerceirizadoFuncao';
        $formClass['contrato']  = 'frmTerceirizadoContrato';
        $formClass['exclusao']  = 'frmTerceirizadoExclusao'; 
		$formClass['mudanca']  = 'frmTerceirizadoMudanca'; 
        
		if ($form == 'excluir' )
        {
          $this->_form[0] = $ui->GetForm($module,'frmTerceirizadoDel', $terceirizado,'terceirizado');          $this->page->SetAction($this->manager->history->Top('action'));
        }
		
        if ($form == 'provimento' )
        {
			$this->_form[0] = $ui->GetGrid('rh','gridProvimentosTerceirizados',$terceirizado); 
			if (($dataInicio = Form::GetFormValue('data')) != NULL)
			{
				$terceirizado->GetProvimentos();
				$provimento = $terceirizado->getProvimento($dataInicio);
				$this->_form[1] = $ui->GetForm('rh','frmTerceirizadoProvimento',$provimento,'terceirizado'); 
				$page->SetAction($history->Top('action'));
			}
        }        
        
        if (isset($formClass[$form]))
        {
            $this->_form[0] = $f = $ui->GetForm('rh',$formClass[$form],$terceirizado,'terceirizado');
            $f->SetClose($this->manager->GetActionURL('rh','main:pessoa',$this->oid));
            $this->page->SetAction($this->manager->history->Top('action'));
        }        
        
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($this->manager->GetActionURL('rh','main:terceirizado', $terceirizado->idTerceirizado));
        }
        
        $action = $this->manager->context->action;
        
        $this->_panel[1] = new ActionPanel('pnlCompound2','Dados do Terceirizado','',false);
        $panel1 = $this->_panel[1];
        $panel1->SetIconType('small');
        $panel1->SetTitle('Dados do Terceirizado');

        $panel1->AddUserAction('rh_info',A_EXECUTE,'Provimento/Histórico',
            $ui->GetImage('rh','provimentos_mini.png'),'rh',$action, $this->oid, array("form"=>"provimento")); 
            
        $panel1->AddUserAction('rh_info',A_EXECUTE,'Instituição',
            $ui->GetImage('rh','instituicao_mini.png'),'rh',$action, $this->oid, array("form"=>"instituicao"));            
           
        $panel1->AddUserAction('rh_info',A_EXECUTE,'Local de Trabalho',
            $ui->GetImage('rh','setor_mini.png'),'rh',$action, $this->oid, array("form"=>"local"));

        $panel1->AddUserAction('rh_info',A_EXECUTE,'Jornada',
            $ui->GetImage('rh','jornada_mini.png'),'rh',$action, $this->oid, array("form"=>"jornada"));            

        $panel1->AddUserAction('rh_info',A_EXECUTE,'Função',
            $ui->GetImage('rh','funcao_mini.png'),'rh',$action, $this->oid, array("form"=>"funcao")); 
            
        $panel1->AddUserAction('rh_info',A_EXECUTE,'Contrato',
            $ui->GetImage('rh','contrato_mini.png'),'rh',$action, $this->oid, array("form"=>"contrato")); 

        $panel1->AddUserAction('rh_info',A_EXECUTE,'Exclusão',
            $ui->GetImage('rh','exclusao_mini.png'),'rh',$action, $this->oid, array("form"=>"exclusao"));
			
        $panel1->AddUserAction('rh_info',A_EXECUTE,'Mudança Múltipla',
            $ui->GetImage('rh','editar_mini.png'),'rh',$action, $this->oid, array("form"=>"mudanca"));       			

/*        $panel1->AddUserAction('rh_info',A_EXECUTE,'Deletar',
            $ui->GetImage('rh','editar_mini.png'),'rh',$action, $this->oid, array("form"=>"excluir"));         */   
        $panel = $this->_panel[0];
        $panel->SetIconType('small');
        $panel->SetTitle('Dados Pessoais');
        
        $panel->AddUserAction('rh_info',A_EXECUTE,'Escolaridade',
            $ui->GetImage('rh','escolaridade_mini.png'),'rh',$action, $this->oid, array("form"=>"escolaridade"));

                        
        $this->_info[0] = new TextLabel('nome',$this->terceirizado->pessoa->nome,'Nome');
        
        $this->terceirizado->GetProvimentos();
        $nomeInst = $this->terceirizado->provimentos[0]->instituicao->nome;
        $this->terceirizado->provimentos[0]->retrieveassociation('contrato');
        $numero = $this->terceirizado->provimentos[0]->contrato->numContrato;
        
        $this->_info[1] = new TextLabel('instituicao',strtoupper($nomeInst),'Instituição');  
        $this->_info[2] = new TextLabel('numero',$numero,'Contrato');              
    }
}
?>
