<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmContratoTerceirizadoNew extends Form
{ 

    function __construct()
    {
        $this->Form('Incluir Novo Contrato');
        $this->EventHandler();
        $this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/mask.js'));
    }

    function CreateFields()
    {
		$fields = array(
            $numero = new MTextField('numContrato','','Número do Contrato',8,'No formato: 999/9999'),
            $dataInicio = new MCalendarField('dataInicio','','Data Início',10),
            $dataFim = new MCalendarField('dataFim','','Data Fim',10),
            new MCalendarField('dataProrrogacao','','Data de Prorrogação',10),
            new MMultiLineField('justificativaPror','','Justificativa da Prorrogação',60,4,60,'Máx. 500'),
			new MHiddenField('idInstituicao'),  
			new MLookupFieldValue('instituicao','','Instituição',60),  	
			new MHiddenField('idSetor'),
			new MLookupFieldValue('lkpSetor','','Setor',60),
			new MMultiLineField('objeto','','Descrição',60,4,60,'Máx. 200'),
			new MMultiLineField('obs','','Observação',60,4,60,'Máx. 500')
        );        
    	
        $this->SetFields($fields);
        
        $this->numContrato->addAttribute('maxlength',8);
		$this->numContrato->addAttribute('onKeyUp','makeMask(this, \'###/####\');');
		$this->numContrato->addAttribute('onBlur','makeMask(this, \'###/####\');');
		
		$this->justificativaPror->addAttribute('maxlength',500);
		$this->objeto->addAttribute('maxlength',200);
		$this->obs->addAttribute('maxlength',500);
		$this->dataProrrogacao->addAttribute('maxlength',10);
        
        //lookup setor
        $this->SetFieldAttr('lkpSetor','module','common');
   	 	$this->SetFieldAttr('lkpSetor','item','setor');
  	 	$this->SetFieldAttr('lkpSetor','event','filler');
    	$this->SetFieldAttr('lkpSetor','related','idSetor,null,lkpSetor,null');
    	
    	//lookup instituição
    	$this->SetFieldAttr('instituicao','module','common');
        $this->SetFieldAttr('instituicao','item','instituicao');
        $this->SetFieldAttr('instituicao','event','filler');
        $this->SetFieldAttr('instituicao','related','idInstituicao,null,instituicao');  
		
		$buttons = array(
        	new FormButton('btnNew', 'Incluir Contrato'),
            );
		$this->SetButtons($buttons);

		$validators = array(
           //new MMaskValidator('numContrato','','99999999','required'),
           new MRequiredValidator('numContrato'),
           //new MRequiredValidator('instituicao'),
           new MRequiredValidator('lkpSetor'),   
	  	   new MRequiredValidator('dataInicio'),
    	   new MRequiredValidator('dataFim'),
	   	   //new MRequiredValidator('dataProrrogacao'), 
		);
		$numero->addAttribute('maxlength',8);
        $dataInicio->addAttribute('maxlength',10);
        $dataFim->addAttribute('maxlength',10);
        $this->SetValidators($validators);
    }

    function btnNew_click()
    {
        $data = $this->getData();
        $contrato = $this->manager->GetBusiness('rh','contrato');
        $contrato = $contrato->GetByNumero($data->numContrato);

		$dataInicio = $data->dataInicio;
		$dataFim = $data->dataFim;
		$dataProrrogacao = $data->dataProrrogacao;
		$dataInicio = substr($dataInicio,6,4).substr($dataInicio,3,2).substr($dataInicio,0,2);
		$dataFim = substr($dataFim,6,4).substr($dataFim,3,2).substr($dataFim,0,2);
		$dataProrrogacao = substr($dataProrrogacao,6,4).substr($dataProrrogacao,3,2).substr($dataProrrogacao,0,2);
		$numero = strlen(trim($data->numContrato));
		
		if( preg_match("/\D/", Form::getFormValue('numContrato')) && strlen(trim(Form::getFormValue('numContrato'))) < 8 )
		{
			$this->AddError('Informe um valor válido para o campo "Número de Contrato"');
		}
		elseif(Form::getFormValue('instituicao') == null)
		{
			$this->addError('Informe uma instituição');
		}
		elseif($numero < '8')
		{
			$this->addError('Informe o número do contrato no formato correto');
		}
		elseif ($dataInicio > $dataFim)
		{
			$this->addError('Data Fim precisa ser maior que data início');
		}
		elseif($dataProrrogacao && $dataFim > $dataProrrogacao)
		{
			$this->addError('Data Prorrogação precisa ser maior que data fim');
		}
		else
		{
			if (! $contrato->idContrato )
		    {
			    $contrato = $this->manager->GetBusiness('rh','contrato');
				$contrato->SetData($data);
		    	try
	    		{   
		            $contrato->save();
	            	$go = $this->manager->GetActionURL('rh','main:contrato',$contrato->idContrato,array('form'=>'dados'));
		            $this->page->Redirect($go);
				}
				catch ( Exception $e )
				{	
					$this->AddError("Informe o seguinte erro a equipe do CGCO: ".$e->getMessage());
				}
	    	}
		    else
			{
		    	$this->addInfo("Uma Contrato com esse número foi encontrado em nosso banco de dados. Confira se as informações estão corretas.");
			}
		}
    }

 }
?>
