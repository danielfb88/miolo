<?
class frmAcessoCapacitacaoGesEdit extends Form
{

    function __construct()
    {
	global $MIOLO, $module;
    	parent::__construct('Gestores');
        $this->SetClose($MIOLO->GetActionURL($module,'main:capacitacao:acesso',$item));
        $this->EventHandler();
    }
    function CreateFields()
    {

	global $MIOLO;

	$ui = $MIOLO->GetUI();
	$item = Form::GetFormValue('idUsuario');		
	$objGestor = $MIOLO->GetBusiness('rh','gestorcapacitacao',$item);
	$grid = $ui->GetGrid('rh','gridReqGestorCapacitacao', $objGestor);
		
		
		$fields = array(
			new LookupTextField('lkpUsuario',$objGestor->login,'Login'),
			new MCalendarField('dataInicio',$objGestor->dataInicio,'Data Início',10),
			new MCalendarField('dataFim',$objGestor->dataFim,'Data Fim',10),
			new HiddenField('idUsuario',$objGestor->idUsuario),
			new MSeparator('Selecione o requisitante'),
			new LookupTextField('lkpReq','','Login'),
			new HiddenField('idUsuario2'),
			new MSeparator(),
			$grid

        );
		
        $this->SetFields($fields);
		
	   $this->SetFieldAttr('lkpUsuario','module','common');
	   $this->SetFieldAttr('lkpUsuario','item','usuario');
	   $this->SetFieldAttr('lkpUsuario','event','filler');
	   $this->SetFieldAttr('lkpUsuario','related','idUsuario,lkpUsuario,NULL,NULL,NULL,NULL,nome');
		
	
		$this->SetFieldAttr('lkpReq','module','rh');
		   $this->SetFieldAttr('lkpReq','item','reqcapacitacao');
	   $this->SetFieldAttr('lkpReq','event','filler');
	   $this->SetFieldAttr('lkpReq','related','idUsuario2,lkpReq,NULL,NULL,NULL,NULL,nome');
	
		$buttons = array(
        	new FormButton('btnSalvar', 'Salvar')
            );
		$this->SetButtons($buttons);

    }
	
	public function btnSalvar_click()
	{
		global $MIOLO,$page;

		$idUsuario = $this->GetFormValue('idUsuario');
		$data = $this->getData();
		$k = new MKrono();
		$dataInicio = $this->GetFormValue('dataInicio');
		$dataFim = $this->GetFormValue('dataFim');
		if ( $k->compareDate($dataInicio,">",$dataFim) )
		{
                	$this->addError("Data início não pode ser maior que a Data Fim.");
		}
		else
		{
			$idr = $data->idUsuario2;
			$idg = $data->idUsuario;
			$objGestor = $MIOLO->GetBusiness('rh','gestorcapacitacao',$idg);
			$objGestor->setData($data);
			if($idr)
			{
				try
				{
					//$objGestor->Update();
					$objGestor->saveAcessoReq($idr,$idg);
					$objGestor->Log(OP_INS,"Novo acesso de capacitação");
					$this->setButtonAttr('btnSalvar','visible',false);
                        		$this->CreateFields();
  
				}
				catch (Exception $e)
				{
					$this->addError($e->getMessage());
				}
			}
			else
			{
				try
				{
					$objGestor->Save();
					$objGestor->Log(OP_INS,"Dados atualizados com sucesso");
					$this->setButtonAttr('btnSalvar','visible',false);
                        		$this->CreateFields();
				}
				catch(Exception $e)
				{
					$this->addError($e->getMessage());
				}
			}

		/*	$this->SetFieldValue('lkpUsuario','');
			$this->SetFieldValue('nome','');
			$this->SetFieldValue('dataFim','');
			$this->SetFieldValue('dataInicio','');
			$this->SetFieldValue('lkpReq','');*/
		}
	}
 }
?>
