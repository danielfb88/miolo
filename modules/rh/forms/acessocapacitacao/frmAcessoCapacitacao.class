<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
class frmAcessoCapacitacao extends CompoundForm
{
    /*function __construct()
    {
        global $MIOLO, $module;

        $this->Form('AcessoCapacitacao');
        $this->SetClose($MIOLO->GetActionURL($module,'main:capacitacoes:acessocapacitacao'));
        $this->EventHandler();
    }*/
    function __construct()
    {
	global $MIOLO, $module;
    	parent::__construct('Acesso');
        $this->SetClose($MIOLO->GetActionURL($module,'main:capacitacao:acesso',$item));
        $this->EventHandler();
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $history, $item;

	$ui = $MIOLO->GetUI();
	$form = Form::GetFormValue('form');
	$objGestor = $MIOLO->GetBusiness('rh','gestorcapacitacao');
	$objReq = $MIOLO->GetBusiness('rh','reqcapacitacao');
        switch ($form)
        {
            case 'acessocapacitacaoreq' : 

		$this->_form[0] = $ui->GetForm($module,'frmAcessoCapacitacaoReq', '', 'acessocapacitacao'); 
		$page->SetAction($history->Top('action'));
                array_unshift($this->_form, $ui->GetGrid('rh','gridReqCapacitacao', $objReq));
              		
            break;
	    case 'acessocapacitacaoges' : 

		
		$this->_form[0] = $ui->GetForm($module,'frmAcessoCapacitacaoGes', '', 'acessocapacitacao'); 
		$page->SetAction($history->Top('action'));
                array_unshift($this->_form, $ui->GetGrid('rh','gridGestorCapacitacao', $objGestor));
              		
            break;
	    case 'gestorDel' :
			$item = Form::GetFormValue('idUsuario');
			$objGestorCapacitacao = $MIOLO->getBusiness('rh','gestorcapacitacao');
			$temReq = $objGestorCapacitacao->hasReq($item);
			if($temReq)
			{
				$this->addError('Não é possível a exclusão do gestor, pois possui vínculo de acesso com algum requisitante');
			}
			else
			{
				$objGestor->Del($item);
			}			
	    break;
	    case 'gestorEdit' :
		$item = Form::GetFormValue('idUsuario');		
		$this->_form[0] = $ui->GetForm($module,'frmAcessoCapacitacaoGesEdit', $item, 'acessocapacitacao'); 
		$page->SetAction($history->Top('action'));

	    break;
		case 'reqDel' :
			$item = Form::GetFormValue('idUsuario');
			$objReqCapacitacao = $MIOLO->getBusiness('rh','reqcapacitacao');
			$temAcesso = $objReqCapacitacao->hasGestor($item);
			if($temAcesso)
			{
				$this->addError('Não é possível a exclusão do requisitante, pois possui vínculo de acesso com algum gestor');
			}
			else
			{
				$objReq->Del($item);
			}
	    break;
	    case 'acessoDel' :
			$idR = Form::GetFormValue('idUsuarioR');
			$idG = Form::GetFormValue('idUsuarioG');
			$objGestor->DelAcesso($idR,$idG);
	    break;


        }
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Capacitação','',false);
        $panel->AddUserAction('',A_EXECUTE,'Requisitantes',$ui->GetImage('rh','bullet_green.png'),$module,$action,'', array("form"=>"acessocapacitacaoreq"));
	$panel->AddUserAction('',A_EXECUTE,'Gestores',$ui->GetImage('rh','bullet_blue.png'),$module,$action,'', array("form"=>"acessocapacitacaoges"));
    }
}
?>
