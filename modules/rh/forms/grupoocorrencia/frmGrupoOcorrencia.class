<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/**
 * Form GrupoOcorrencia
 */
class frmGrupoOcorrencia extends CompoundForm
{
    public $oid;
    protected $grupoocorrencia;
    /**
     * Construtor
     */
    function __construct($objGrupoOcorrencia)
    {
        global $MIOLO;
        $this->grupoocorrencia = $objGrupoOcorrencia;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL('rh','main:grupoocorrencia:find'));
        $this->SetTitle($this->grupoocorrencia->descricao);
        $this->SetIcon($MIOLO->GetUi()->GetImage('rh','classe_mini.png'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $history;
        $grupoocorrencia = $this->grupoocorrencia;
        if ($this->oid == NULL) $this->oid = $grupoocorrencia->idGrupoOcorrencia;

// form
        $ui = $MIOLO->GetUI();
        $form = Form::GetFormValue('form');
        switch ($form)
        {
            case 'dados' : 
                 $this->_form[0] = $ui->GetForm($module,'frmGrupoOcorrenciaDados', $grupoocorrencia, 'grupoocorrencia'); 
                 break;
            case 'ocorrencia'     : 
				$grupoocorrencia->GetOcorrencias();
				if ( ($id = Form::GetFormValue('id')) != NULL )
				{
					$ocorrencia = $grupoocorrencia->GetOcorrencia($id);
					if ($ocorrencia != NULL)
					{
						$this->_form[0] = $ui->GetForm('rh','frmGrupoOcorrenciaOcorrencia',$ocorrencia,'grupoocorrencia');
						$page->SetAction($history->Top('action'));
					}
				}
				else
				{
	                 $this->_form[0] = $ui->GetGrid($module,'gridOcorrencia', $grupoocorrencia); 
				}
                 break;
            case 'excluir'     : 
                 $this->_form[0] = $ui->GetForm($module,'frmGrupoOcorrenciaDel', $grupoocorrencia, 'grupoocorrencia'); 
                 break;
        }
        if ($this->_form[0])
        {
            $this->_form[0]->SetClose($MIOLO->GetActionURL('rh','grupoocorrencia',$grupoocorrencia->idGrupoOcorrencia));
 	    $page->SetAction($history->Top('action'));

        }
// panel        
        $action = $context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        
	$panel->AddUserAction('rh_grupoocorrencia_dados',A_EXECUTE,'Editar',
        $ui->GetImage('rh','edit.png'),'rh',$action, $this->oid, array("form"=>"dados"));
       
        $panel->AddUserAction('rh_grupoocorrencia_ocorrencia',A_EXECUTE,'Ocorrências',
	$ui->GetImage('rh','ocorrencia.png'),'rh',$action, $this->oid, array("form"=>"ocorrencia"));

	$panel->AddUserAction('rh_grupoocorrencia_excluir',A_EXECUTE,'Excluir',
	$ui->GetImage('rh','excluir.png'),'rh',$action, $this->oid, array("form"=>"excluir"));

// info
        $this->_info[0] = new TextLabel('txtCodigo',$this->grupoocorrencia->idGrupoOcorrencia,'Código');  
        $this->_info[1] = new TextLabel('txtGrupoOcorrencia',$this->grupoocorrencia->descricao,'G. Ocorrência');  
      
	}
}
?>
