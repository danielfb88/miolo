<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/**
 * Form Situação Funcional
 */
class frmSituacaoFuncional extends CompoundForm
{

	public $oid;
    protected $situacaofuncional;

    /**
     * Construtor
     */
    function __construct($objSituacaoFuncional)
    {
        global $MIOLO, $module;

        $this->situacaofuncional = $objSituacaoFuncional;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL($module,'main:situacaofuncional:find'));
        $this->SetTitle($this->situacaofuncional->descricao);
        $this->SetIcon($MIOLO->GetUi()->GetImage($module,'situacaofuncional_mini.png'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $history;

        $situacaofuncional = $this->situacaofuncional;
        if ($this->oid == NULL) $this->oid = $situacaofuncional->idSituacao;

// form
        $ui = $MIOLO->GetUI();
        $form = Form::GetFormValue('form');
        switch ($form)
        {
            case 'dados'       : 
                $f = $ui->GetForm($module,'frmSituacaoFuncionalDados', $situacaofuncional,'situacaofuncional'); 
                break;
            case 'excluir'     : 
                $f = $ui->GetForm($module,'frmSituacaoFuncionalDel', $situacaofuncional,'situacaofuncional'); 
                break;
            default            :
                $f = NULL;
                break;
        }
        
        if ($f)
        {
            $f->SetClose($MIOLO->GetActionURL($module,'main:situacaofuncional',$situacaofuncional->idSituacao));
            $this->_form[0] = $f;
            $page->SetAction($history->Top('action'));
        }

// panel        
        $action = $context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        $panel->AddUserAction('rh_situacaofuncional_dados',A_EXECUTE,'Editar',
            $ui->GetImage($module,'edit.png'),'rh',$action, $this->oid, array("form"=>"dados"));
        $panel->AddUserAction('rh_situacaofuncional_excluir',A_EXECUTE,'Excluir',
			$ui->GetImage($module,'excluir.png'),'rh',$action, $this->oid, array("form"=>"excluir"));

// info
        $this->_info[0] = new TextLabel('idSituacao',$this->situacaofuncional->idSituacao,'Código');
        $this->_info[1] = new TextLabel('descricao',$this->situacaofuncional->descricao,'Descricao');

        $tabelaGeral = $MIOLO->GetBusiness('common','tabelageral');
	   	$query = $tabelaGeral->ListByTabela('RH_REGIMEJUR');
		$regime = new Selection('selRegime',$this->situacaofuncional->regimeJuridico,'Regime Jurídico',$query->chunkResult());
		$regime->readonly = true;
        //$this->_info[2]	= new TextLabel('regimeJuridico',$this->situacaofuncional->regimeJuridico,'Regime Jurídico');
        $this->_info[2]	= $regime;
	}

}
?>
