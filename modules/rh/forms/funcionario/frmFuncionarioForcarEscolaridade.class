<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmFuncionarioForcarEscolaridade extends MForm
{
	var $funcionario;
	
    function __construct($objFuncionario)
    {
	    global $MIOLO, $module, $page, $context, $self;
 
        $this->funcionario = $objFuncionario;
        parent::__construct('Forçar Escolaridade');
        $this->SetClose($MIOLO->GetActionURL('rh','main:funcionario',$this->funcionario->idFuncionario, array('form'=>'formacoes')));
        $this->EventHandler();
        
        

      }

    function CreateFields()	
	{ 
		global $MIOLO, $module, $self, $action;
		
		$tabelaGeral = $MIOLO->GetBusiness('common','tabelageral');
          
        $criteria =  $tabelaGeral->getCriteria();
        $criteria->addColumnAttribute('item1','key');
        $criteria->addColumnAttribute('item2','value');
        $criteria->addColumnAttribute('item3','obs');
        $criteria->addColumnAttribute('tabela');
        $criteria->addColumnAttribute('idTabelaGeral');
        $criteria->addCriteria('tabela','=', "'RH_ESCOLARIDADE'");
		$criteria->addCriteria('item1','>',$this->funcionario->escolaridade);
		$criteria->addCriteria('item3','=',"'I'");//SOMENTE PARA NÍVEIS DE ESCOLARIDADE INCOMPLETOS
		$criteria->addOrderAttribute("item1");//$criteria->addOrderAttribute("ABS(item1)");				
		//$query=$criteria->retrieveAsQuery();
		
		/*$escolaridades = $query->chunkResult();*/
		
		$query = $this->pesquisa_sql('item1',$this->funcionario->escolaridade);

		$escolaridades = $this->getEscolaridades($query);

		
		ksort($escolaridades);
		    
		$fields = array(
		    new Label('ATENÇÃO: Utilize essa opção caso deseje escolher a escolaridade independente da formação!','red'),
            new Separator(),	
			new MHiddenField('idFuncionario',$this->funcionario->idFuncionario, 'Funcionario'),
			new MHiddenField('ufEmpregoAnterior',$this->funcionario->ufEmpregoAnterior, 'uf empregado anterior'),
			new MHiddenField('dataPrimeiroEmprego',$this->funcionario->dataPrimeiroEmprego, 'data primeiro emprego'),
			new MHiddenField('idPessoa',$this->funcionario->idPessoa, 'id pessoa'),
			new MSelection('escolaridade','','Níveis de escolaridade',$escolaridades)
        );
        
		$validators = array(
			new MRequiredValidator('idFuncionario'),
		);
		
		$buttons = array(
			new FormButton('btnPost','Enviar')
        );
		$this->SetButtons($buttons);
                       
        $this->SetFields($fields);
                   
	    $this->SetValidators($validators);
	}

	function btnPost_click()
    {
	    global $MIOLO, $module, $self, $action;
        

	    $data = $this->GetData();
		try{
			$this->funcionario->SetData($data);
					
			$this->funcionario->save();	
			
		    $go = $MIOLO->GetActionURL('rh','main:funcionario',$this->funcionario->idFuncionario, array('form'=>'formacoes'));
		    $MIOLO->Information('Dados de Escolaridade atualizados com sucesso.', $go );                
		}catch (Exception $e)
		{
		    $this->AddError($e->getMessage());
		}
	}
	
	function pesquisa_sql($item,$valor)
	{
		$busca = pg_query("select item2 from cm_tabelageral where CHAR_LENGTH($item) = 1 AND $item < CAST (8 AS varchar) AND tabela = 'RH_ESCOLARIDADE' ORDER BY item1");
		return pg_fetch_all($busca);
	}
	
	function getEscolaridades($resultado)
	{
		$newResult = array();
		$i = 0;
		if($resultado)
		{
			foreach($resultado as $escolaridade)
			{
				$newResult[$i++] = $escolaridade["item2"];
			}
		}
		return $newResult;
	}
}
?>
