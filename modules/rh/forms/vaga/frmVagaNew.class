<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmVagaNew extends Form
{

    function __construct()
    {
        global $MIOLO, $module;

        $this->Form('Incluir Nova Vaga');
        $this->SetClose($MIOLO->GetActionURL($module,'main:vaga:find'));
        $this->EventHandler();
    }

    function CreateFields()
    {
		global $MIOLO, $module;
        $queryOrigem = $MIOLO->GetBusiness('rh','origemvaga');
        $queryOrigem = $queryOrigem->listOrigens();
        if ($queryOrigem)
        {
        	$fldnumerovaga =  new TextField('numeroVaga','','Número da Vaga','20');
	
        	$fields = array(
	            new Spacer('2px'),
				new Separator('<b>Observação:</b> Use a lupa para obter o <b>Setor</b> e/ou o <b>Grupo do Cargo</b> e/ou o <b>Cargo</b>.'),
            	new Spacer('5px'),
				array($fldnumerovaga),
				new Spacer('2px'),
				//array(new MTextField('inicio','','Início',10,'dd/mm/aaaa')),
				array(new MCalendarField('inicio','','Início',10)),
				new Spacer('2px'),
				array(new MSelection('origem','','Origem',$queryOrigem)),            
				new Spacer('10px'),
				array(new LookupTextField('descSetor','','Setor/Departamento','60'),
            	new HiddenField('idSetor','')),
				new Spacer('10px'),
            	new Separator('<b>Observação:</b> Use a lupa para obter o <b>Grupo do Cargo</b> e logo em seguida o <b>Cargo</b>.'),
            	new Spacer('5px'),
            	new LookupTextField('descGrupoCargo','','Grupo','60'),
            	new HiddenField('idGrupoCargo',''),
            	new LookupTextField('descCargo','','Cargo','60'),
            	new HiddenField('idCargo',''),
            	new Spacer('10px'),
            	array (
	                new Text('comentario1','<b>Atenção:</b>'),
                	new Text('comentario2','Só serão aceitos <b>Setor</b>, <b>Grupo do Cargo</b> e <b>Cargo</b> obtidos através de pesquisa.'),
	            ),
            	new Spacer('10px'),
         	);
		
        	$this->SetFields($fields);

        	$this->SetFieldAttr('comentario1','color','red');
        	$this->SetFieldAttr('comentario2','color','blue');
        	$this->descSetor->addAttribute('readonly', true);
        	$this->descGrupoCargo->addAttribute('readonly', true);
        	$this->descCargo->addAttribute('readonly', true);
	
        	$fldnumerovaga->AddAttribute('maxlength','7');
	
			$this->SetFieldAttr('descSetor','module','common');
	    	$this->SetFieldAttr('descSetor','item','setor');
        	$this->SetFieldAttr('descSetor','event','filler');
        	$this->SetFieldAttr('descSetor','related','idSetor,descSetor');

			$this->SetFieldAttr('descGrupoCargo','module','rh');
	    	$this->SetFieldAttr('descGrupoCargo','item','GrupoCargo');
	//        $this->SetFieldAttr('descGrupoCargo','event','filler');
	//        $this->SetFieldAttr('descGrupoCargo','related','idGrupoCargo,descGrupoCargo,idCargo,descCargo');
        	$this->SetFieldAttr('descGrupoCargo','event','btnShowGrupo:click');
	
			$this->SetFieldAttr('descCargo','module','rh');
	    	//$this->SetFieldAttr('descCargo','item','CargoCadastroVagas');
	    	$this->SetFieldAttr('descCargo','item','CargoCadastroVagas2');
    	    $this->SetFieldAttr('descCargo','event','filler');
        	$this->SetFieldAttr('descCargo','related','idCargo,descCargo');
	//      $this->SetFieldAttr('descCargo','event','btnShowCargo:click');
		    $this->SetFieldAttr('descCargo','filter','idGrupoCargo,descCargo');
	

        	$this->SetFieldAttr('descCargo','visible',false);
	        
        	//$this->inicio->addMask('##/##/####',true,'Valor Inválido! Apenas valores numéricos são permitidos!');
	
	//        $this->SetFieldAttr('idGrupoCargo','visible',false);
	//        $this->SetFieldAttr('idCargo','visible',false);

        	$validators = array(
	            	new RequiredValidator('numeroVaga'),
            		new RequiredValidator('descGrupoCargo'),
            		new RequiredValidator('descCargo'),
			new RequiredValidator('descSetor'),
            		new RequiredValidator('inicio'),
        	);
	        
        	$this->SetValidators($validators);
	
        	$cancel = $MIOLO->GetActionURL($module,'main:vaga:new');
	
        	$buttons = array(
	        	new MButton('btnNew', 'Incluir Vaga'),
            	new MButton('btnCancelar','Cancelar',$cancel)
        	);
			$this->SetButtons($buttons);
		}
		else
		{
			$url = $MIOLO->GetActionURL('rh','main:vaga:find');
			$MIOLO->information('O Sistema não possui dados de Origem vaga, por favor entre em contato com o administrador do sistema',$url);
		}
    }

	function GetData()
	{
        $data = new FormData();
		$data->numeroVaga   = $this->GetFormValue('numeroVaga');
		$data->dataInicio	= $this->GetFormValue('inicio');
		$data->idGrupoCargo = $this->GetFormValue('idGrupoCargo');
		$data->idCargo      = $this->GetFormValue('idCargo');
		$data->idSetor      = $this->GetFormValue('idSetor');
        $data->origem		= $this->GetFormValue('origem');
        return $data;
	}

    	function btnNew_click()
    	{
		global $MIOLO, $page, $action, $item;
	
		$data = $this->GetData();
		$vaga = $MIOLO->GetBusiness('rh','vaga');
		$result = $vaga->listByNumeroVaga($data->numeroVaga);
		
		$dataInicio = $data->dataInicio;
		$dataInicio = $data = explode("/","$dataInicio");
		$dia = $dataInicio[0];
		$mes = $dataInicio[1];	
		$ano = $dataInicio[2];
		$check = checkdate($mes,$dia,$ano);
		if(strlen(trim($this->GetFormValue('numeroVaga'))) < '1')
		{
			$this->addError('Informe o número da Vaga');
		}
		elseif(is_numeric(trim($this->GetFormValue('numeroVaga'))) && trim($this->GetFormValue('numeroVaga')) <= 0)
		{
			$this->addError('O número da vaga deve ser maior que 0');
		}
		elseif ($result->result)
		{
			$this->addError("Não é possivel duplicar esse registro, pois já existe uma vaga no sistema com este mesmo número");
		}
		elseif(! $check)
		{
			$this->addError('Informe a Data Início Corretamente');
		}
		elseif($this->GetFormValue('origem') == '')
		{
			$this->addError('Selecione a Origem da Vaga');
		}
		elseif($this->GetFormValue('idSetor') == '')
		{
			$this->addError('Selecione o Setor da Vaga');
		}
		elseif($this->GetFormValue('idGrupoCargo') == '')
		{
			$this->addError('Selecione o Grupo Cargo');
		}
		else
		{
			try
			{
				$data = $this->GetData();
				$vaga->SetData($data);
	        		$vaga->save();
				$msg = "Vaga incluída com sucesso.";
				$go = $MIOLO->GetActionURL('rh','main:vaga',$vaga->numeroVaga);
                		$MIOLO->information($msg,$go);
			}
        		catch ( Exception $e )
			{
				$this->AddError("Informe o seguinte erro a equipe de Suporte: ".$e);
			}
		}
		
    	}

    function btnShowGrupo_click($sender=NULL,$key='')
    {
        global $MIOLO;
        $grupoCargo = $MIOLO->GetBusiness('rh','grupocargo');    
        $grupoCargo = $grupoCargo->GetById($key);
		//echo"<pre>";var_dump($grupoCargo);echo"</pre>";
		//$this->SetFieldAttr('descGrupoCargo','readonly',true);
        $this->SetFieldAttr('descCargo','visible',true);
        $this->SetFieldAttr('idGrupoCargo','value',$key);
        $this->SetFieldAttr('descGrupoCargo','value',$grupoCargo->descricao);
        $this->SetFieldAttr('descGrupoCargo','readonly',true);
    }

    function btnShowCargo_click($key='')
    {
        global $MIOLO;
        $cargo = $MIOLO->GetBusiness('rh','cargo');    
        $cargo = $cargo->GetById($key);
        $this->SetFieldAttr('descGrupoCargo','readonly',true);
        $this->SetFieldAttr('idCargo','value',$key);
        $this->SetFieldAttr('descCargo','value',$cargo->descricao);
    }

}
?>
