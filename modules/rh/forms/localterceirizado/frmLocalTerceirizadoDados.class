<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/**
 * Formulário de edição de dados de local de trrabalho
 */
class frmLocalTerceirizadoDados extends Form
{
	/**
	 * Objeto localterceirizado
	 * @access protected
	 * @var BusinessRhLocalTerceirizado
	 */
	protected $objLocalTerceirizado;
	
    function __construct($objLocalTerceirizado)
    {
        global $MIOLO, $item;
		$this->objLocalTerceirizado = $objLocalTerceirizado; 
        parent::__construct('Dados do Local de Trabalho');
        $this->SetClose($MIOLO->GetActionURL('rh','main:localterceirizado',$item));
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO, $module;
	   $objSetor = $this->manager->getBusiness('common','setor', $this->objLocalTerceirizado->idsetor);
		$fields = array(
            new TextField('idLocalTerceirizado',$this->objLocalTerceirizado->nome,'Código','10'),
            new TextField('nome',$this->objLocalTerceirizado->nome,'Local de Trabalho','40','Máx. 40 caracteres'),
            new MHiddenField('idsetor',$this->objLocalTerceirizado->idsetor),
			new MLookupFieldValue('lkpSetor','','Setor',70),
        );

        $this->SetFields($fields);
		$this->SetFieldAttr('idLocalTerceirizado','readonly',true);
		
		$this->SetFieldAttr('lkpSetor','module','common');
   	 	$this->SetFieldAttr('lkpSetor','item','setor');
  	 	$this->SetFieldAttr('lkpSetor','event','filler');
    	$this->SetFieldAttr('lkpSetor','related','idsetor,null,lkpSetor,null'); 
    	
    	$this->nome->addAttribute('maxlength',40);
		
		$buttons = array(
        	new FormButton('btnSalvar', 'Enviar')
            );
		$this->SetButtons($buttons);
		$validators = array(
           new RequiredValidator('idLocalTerceirizado'),
		);
       $this->SetValidators($validators);

		$this->SetData();

    }
	
	function SetData()
	{
		$data = $this->objLocalTerceirizado;
		$this->SetFieldValue('idLocalTerceirizado',$data->idLocalTerceirizado);		
		$this->SetFieldValue('nome',$data->nome);
		$this->SetFieldValue('idsetor',$data->idsetor);
		$setor = $this->manager->getBusiness('common','setor', $data->idsetor);
		$this->SetFieldValue('lkpSetor',$setor->nome);
	}


	public function btnSalvar_click()
	{
		global $MIOLO, $page;
		
		$data = $this->GetData();
		
		// Retirando os caracteres especiais.	
		$caracteres = array("#","*", "&", "%", "(", ")", "$", "@", "!", "'", "\"", "+", "=", "-", "/", ".", ",", "^", "?", ":", "}", "]", "[", "º","{","|",">","<",";");
		$data->nome = str_replace($caracteres,"",$data->nome);
			
		if(strlen(trim($data->nome)) < '5')
		{
			$this->addError('Informe o nome do local de trabalho corretamente');
		}
		else
		{
			$this->objLocalTerceirizado->SetData($data);
			$this->objLocalTerceirizado->save();
			$go = $MIOLO->GetActionURL('rh','main:localterceirizado:find');
			if ( $this->objLocalTerceirizado->CheckError() )
			{
				foreach( $objLocalTerceirizado->GetErrors() as $e )
				{
					$this->AddError("Informe o seguinte erro a equipe do CGCO: ".$e);
				}
			}
			else
			{
				$MIOLO->Information("Registro atualizado com sucesso!",$go);
			}
		}
	}

 }
?>
