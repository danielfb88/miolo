<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/**
 * Form VagaUtil
 */
class frmVagaUtil extends CompoundForm
{
	public $oid;
    protected $vaga;
    /**
     * Construtor
     */
    function __construct($objVaga)
    {
        global $MIOLO, $module;
        $this->vaga = $objVaga;
        parent::__construct();
        $this->SetClose($MIOLO->GetActionURL($module,'main:vagautil:find'));
        $this->SetTitle($this->vaga->numeroVaga);
        $this->SetIcon($MIOLO->GetUi()->GetImage($module,'vaga_mini.png'));
    }

    function CreateFields()
    {
        global $MIOLO, $page, $module, $context, $history;

        $vaga = $this->vaga;
        if ($this->oid == NULL) $this->oid = $vaga->numeroVaga;

// form
        $ui = $MIOLO->GetUI();
        $form = Form::GetFormValue('form');
        switch ($form)
        {
            case 'dados'       : 
                 $f = $ui->GetForm($module,'frmVagaUtilDados', $vaga,'vagautil'); 
                 break;
            case 'excluir'     : 
                 $f = $ui->GetForm($module,'frmVagaUtilDel', $vaga,'vagautil'); 
                 break;
        }
        if ($f)
        {
            $f->SetClose($MIOLO->GetActionURL($module,'vagautil',$vaga->numeroVaga));
            $this->_form[0] = $f;
            $page->SetAction($history->Top('action'));
        }

// panel        
        $action = $context->action;
        $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
        $panel->AddUserAction('rh_vaga_dados',A_EXECUTE,'Editar',
            $ui->GetImage($module,'edit.png'),$module,$action, $this->oid, array("form"=>"dados"));
        $panel->AddUserAction('rh_vaga_excluir',A_EXECUTE,'Excluir',
            $ui->GetImage($module,'excluir.png'),$module,$action, $this->oid, array("form"=>"excluir"));

// info
        $this->_info[0] = new TextLabel('numeroVaga',$this->vaga->numeroVaga,'No. da Vaga');

        $grupoC = $MIOLO->GetBusiness($module,'grupocargo');    
	   	$grupoC = $grupoC->GetById($this->vaga->idGrupoCargo);
		$grupoInfo = new TextField('infoGrupoCargo',$grupoC->descricao,'Grupo','60');

        $grupoInfo->readonly = true;
        $this->_info[1]	= $grupoInfo;

        $cargoC = $grupoC->getCargo($this->vaga->idCargo);
		$cargoInfo = new TextField('infoCargo',$cargoC->descricao,'Cargo','60');

    	$cargoInfo->readonly = true;
        $this->_info[2]	= $cargoInfo;
     
	}

}
?>
