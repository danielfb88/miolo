<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

MIOLO::Import('modules::rh::controls::linkfuncao');

class frmFuncaoFind extends MForm
{

    function __construct()
    {
        global $MIOLO, $module;
        parent::__construct('Grade de Funções');
        $this->SetClose($MIOLO->GetActionURL($module,'main:utils'));
        $this->EventHandler();
    }


    function CreateFields()
    {
        global $MIOLO, $module, $auth;

        $ui    = $MIOLO->GetUI();
        
        $tipoCargo = $this->manager->GetBusiness('rh','cargoconfianca');
        $tipoCargo = $tipoCargo->ListAll();

        //if ( $MIOLO->getPerms()->isMemberOf($login,'SIGA_MONITORIA') )
        {
            $lnkNew = new LinkFuncao('lnkNew', FALSE);  //tvz deva ser direto, sem Import
            $lnkNew->setNew();
            $fields[] = $lnkNew;
        }

    $_btnFind = new MButton('btnFind','clique para aplicar um dos critérios acima',NULL);//,$ui->GetImage($module,'search-20x20.png'));
//TVZ combinados
	$pesquisatipo		= Form::getFormValue('pesquisatipo'		 );
    $pesquisadescricao  = Form::getFormValue('pesquisadescricao' );
    $pesquisasiglasetor = Form::getFormValue('pesquisasiglasetor');
    $pesquisasiglanivel = Form::getFormValue('pesquisasiglanivel');

    
	$box0  = new MThemeBox(
        'Procura por tipo:',
        array( new MSelection('pesquisatipo','','', $tipoCargo->result,'','',1) )
    );
	$box1  = new MThemeBox(
        'Procura por parte de descrição:',
        array( new MTextField('pesquisadescricao' ,$pesquisadescricao ,'',30) )
    );new MSelection('idcargoconfianca','','Tipo', $tipoCargo->result);
    $box2 = new MThemeBox(
        'Por parte de sigla de setor:',
        array( new MTextField('pesquisasiglasetor',$pesquisasiglasetor,'',15) )
    );
    $box3 = new MThemeBox(
        'Por sigla-nível:',
        array( new MTextField('pesquisasiglanivel',$pesquisasiglanivel,'',05) )
    );

    //$px = '80px';
    $fields[] = new MSpacer(1);
    
    $box0->width = '29%';  $box0->float = 'left'; $box0->padding = '6px';  $box0->height = $alt;     
    $box1->width = '26%';  $box1->float = 'left'; $box1->padding = '6px';  $box1->height = $alt;
    $box2->width = '22%';  $box2->float = 'left'; $box2->padding = '6px';  $box2->height = $alt;
    $box3->width = '12%';  $box3->float = 'left'; $box3->padding = '6px';  $box3->height = $alt;
    $fields[] = array($box0, $box1, $box2, $box3);
    $fields[] = array( new MLabel(str_repeat('&nbsp;', 90)), $_btnFind);
    $this->setFocus('pesquisadescricao');
     
    $grade = $this->manager->GetUI()->GetGrid('rh','gridFuncao',NULL,'funcao');
    $grade->SetTitle(NULL);
    $fields[] = $grade;

    $this->SetFields($fields);
    $this->defaultButton = false;
    } // CreateFields

 
}
?>
