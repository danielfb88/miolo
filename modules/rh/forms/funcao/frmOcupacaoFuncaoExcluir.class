<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmOcupacaoFuncaoExcluir extends MForm
{
    protected $objocupacaofuncao, $nome, $atual;


    function __construct($p)
    {
        $this->objocupacaofuncao = $p[0];
        $this->nome              = $p[1];
        $this->atual             = $p[2];
        parent::__construct('Exclusão de Ocupação de Função');
        $this->EventHandler();
    } // __construct


    function CreateFields()
    {
        global $MIOLO;

        $action_sim = $MIOLO->GetActionURL( $module,
                                            'main:ocupacaofuncao',
                                            $this->objocupacaofuncao->idocupacaofuncao,
                                            array('form'=>'excluir','conf'=>'sim','atual'=>$this->atual) );
                                            //'atual': necessário para segunda passagem no formulário principal,
                                            //frmOcupacaoFuncao (que por seu lado torna a chamar este frmOcupacaoFuncaoExcluir)
        $action_nao = $MIOLO->GetActionURL( $module,
                                            'main:vinculo',
                                            $this->objocupacaofuncao->idvinculo,
                                            array('form'=>'funcao') );

        $conf = $this->GetFormValue('conf');

        $this->objocupacaofuncao->retrieveAssociation('funcao');
        if ($conf == 'sim')
        {
            $this->objocupacaofuncao->BeginTransaction();
            TRY
            {
                $this->objocupacaofuncao->Delete();
                $msg = 'Ocupação excluída:' . $this->objocupacaofuncao->funcao->descricao . ' (' . $this->nome . ')';
                $this->objocupacaofuncao->Log(OP_DEL,$msg);
                $this->objocupacaofuncao->EndTransaction();
                $MIOLO->Information( $msg,
                                     $MIOLO->GetActionURL( $module,
                                                           'main:vinculo',
                                                           $this->objocupacaofuncao->idvinculo,
                                                           array('form'=>'funcao') ) );
            }
            CATCH (Exception $e)
            {
                $this->AddError($e->GetMessage());
            }
        }
        else
        {
            $MIOLO->Question("Tem certeza que deseja excluir a Ocupação "
                           . $this->objocupacaofuncao->funcao->descricao . ' (' . $this->nome . ')',
                             $action_sim,$action_nao);
        }
    } // CreateFields


 }
?>
