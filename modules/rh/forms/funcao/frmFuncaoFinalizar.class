<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

$MIOLO->Uses('ui/controls/lkppublicacao.class','rh');


class frmFuncaoFinalizar extends MForm
{
    protected $objfuncao;

    function __construct($objfuncao)
    {
        $this->objfuncao = $objfuncao;
        parent::__construct('Finalização de Função');
        $this->EventHandler();
    } // __construct


    function CreateFields()
    {
        global $MIOLO, $module;

        $fields[] = new MCalendarField('datafim','','Término','10');
        $fields[] = new MSpacer(1);

        lkppublicacao($fields,'idpublicacaofim','Publicação');

        $this->SetFields($fields);

        $validators[] = new MRequiredValidator('datafim');
        //$validators[] = new MRequiredValidator('idpublicacaofim','Publicação');
        $this->SetValidators($validators);

        $buttons = array( new MButton('btnSalvar', 'Salvar Finalização') );
        $this->SetButtons($buttons);
        $this->SetBackgroundColor('#FFF');
    } // CreateFields


    function Verifica($data)
    {
        $erros = $this->objfuncao->VerificaTermino($this->objfuncao->datainicio        ,    //anteriormente gravada
                                                   $data->datafim                      ,    //digitada
                                                   $this->objfuncao->idpublicacaoinicio,    //anteriormente gravada
                                                   $data->idpublicacaofim              );   //digitada
        if ( count($erros) > 0 )
        {
            foreach ( $erros as $e )
            {
                $this->addError($e);
            }
            return false;
        }

        return TRUE;
    } // Verifica


    function btnSalvar_click()
    {
        global $MIOLO, $module;
        $data = $this->GetData();                   //recupera somente os editáveis

        if (! $this->Verifica($data))
        {
            RETURN;
        }

        $this->objfuncao->SetData($data);

        $this->objfuncao->BeginTransaction();
        TRY
        {
            $this->objfuncao->save();
            $msg = ' Função finalizada: ' . $this->objfuncao->descricao;
            $this->objfuncao->Log(OP_UPD,'idfuncao: ' . $this->objfuncao->idfuncao . $msg);
            $this->objfuncao->EndTransaction();
            $go = $MIOLO->GetActionURL($module,'main:funcao',$this->objfuncao->idfuncao);
            $this->manager->Information($msg,$go);
        }
        CATCH (Exception $e)
        {
            $this->AddError($e->GetMessage());
        }
    } // btnSalvar_click


}
?>
