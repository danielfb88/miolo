<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/**
 * Formulário de edição de dados da publicação
 */
class frmPublicacaoDados extends Form
{
	/**
	 * Objeto publicacao
	 * @access protected
	 * @var BusinessRhPublicacao
	 */
	protected $objPublicacao;
	
    function __construct($objPublicacao)
    {
        global $MIOLO, $item;
		$this->objPublicacao = $objPublicacao; 
        parent::__construct('Dados da Publicação');
        $this->SetClose($MIOLO->GetActionURL('rh','main:publicacao',$item));
        $this->EventHandler();
        // Adiciona script para criação de máscaras.
        $this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../mask.js'));
    }

    function CreateFields()
    {
       global $MIOLO, $module;
	   
		$fields = array(
            new TextField('idPublicacao','','Código','10'),
            new CalendarField('data',date('d/m/Y'),'Data','10','DD/MM/YYYY'),
            new TextField('numero','','Número','20','Máx. 20 caracteres'),
            new TextField('autoridade','','Autoridade','20','Máx. 20 caracteres'),
            new CalendarField('datado','','Datado','10','DD/MM/YYYY'),
			new MultiLineField('obs','','Observação',25,5,40,'Máx. 500 caracteres'),
			new Selection('idDiplomaLegal','','Diploma Legal')
        );

        $this->SetFields($fields);
        
        $this->numero->AddAttribute('maxlength','20');
         $this->autoridade->AddAttribute('maxlength','20');
         $this->obs->AddAttribute('maxlength','500');
         $this->data->addAttribute('onKeyUp','makeMask(this, \'##/##/####\');');
          $this->datado->addAttribute('onKeyUp','makeMask(this, \'##/##/####\');');
        
		$this->SetFieldAttr('idPublicacao','readonly',true);
		$query = $this->objPublicacao->diplomaLegal->ListAll();
		
	    $this->SetFieldAttr('idDiplomaLegal','options',$query->chunkResult()); 
		
		$buttons = array(
        	new FormButton('btnSalvar', 'Enviar')
            );
		$this->SetButtons($buttons);
		$validators = array(
           new RequiredValidator('idPublicacao'),
           new DateDMYValidator('data','','required'),
           new RequiredValidator('numero'),
           new DateDMYValidator('datado','','required'),
		);
       $this->SetValidators($validators);

		$this->SetData();

    }
	
	function SetData()
	{
		$data = $this->objPublicacao;
		$this->SetFieldValue('idPublicacao',$data->idPublicacao);
		$this->SetFieldValue('data',$data->data);
		$this->SetFieldValue('numero',$data->numero);
		$this->SetFieldValue('autoridade',$data->autoridade);
		$this->SetFieldValue('datado',$data->datado);
		$this->SetFieldValue('obs',$data->obs);
		$this->SetFieldValue('idDiplomaLegal',$data->idDiplomaLegal);
	}


	public function btnSalvar_click()
	{
		global $MIOLO, $page;
		
		$data = $this->GetData();
		$data->numero = trim($data->numero);
		
		// Retirando os caracteres especiais. :-)
		$caracteres = array("#","*", "&", "%", "(", ")", "$", "@", "!", "'", "\"", "+", "=", "-", "/", ".", ",", "^", "?", ":", "}", "]", "[", "º","{","|",">","<",";");
		$data->autoridade = str_replace($caracteres,"",$data->autoridade);
		
		if(!$data->numero)
		{
			$this->addError('Informe o número da publicação');
		}
		else
		{
			$this->objPublicacao->SetData($data);
			$this->objPublicacao->save();

            $go = $MIOLO->GetActionURL('rh','main:publicacao',$this->objPublicacao->idPublicacao);
	    $MIOLO->Information('Dados da Publicação atualizados com sucesso.', $go );
		
			if ( $this->objPublicacao->CheckError() )
			{
				foreach( $objPublicacao->GetErrors() as $e )
				{
					$this->AddError("Informe o seguinte erro a equipe do CGCO: ".$e);
				}
			}
		}
	}

 }
?>
