<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmPublicacaoNew extends Form
{
    var $fromLookup; 

    function __construct()
    {
        $this->Form('Incluir Nova Publicação');
        $this->EventHandler();
        // Adiciona script para criação de máscaras.
        $this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../mask.js'));
    }

    function CreateFields()
    {
        $origem = $this->getFormValue('origem');
        $this->fromLookup = ($origem) ? TRUE : FALSE;

		$fields = array(
            new MCalendarField('data',date('d/m/Y'),'Data','10','DD/MM/YYYY'),
            new MTextField('numero','','Número','20','Máx. 20 caracteres'),
            new MTextField('autoridade','','Autoridade','20','Máx. 20 caracteres'),
            new MCalendarField('datado','','Data DOU','10','DD/MM/YYYY'),
			new MMultiLineField('obs','','Observação',25,5,40,'Máx. 500 caracteres'),
			new MSelection('idDiplomaLegal','','Diploma Legal')
        );

        if ( $this->fromLookup )
        {
            $fields[] = new MHiddenField('origem','lookup');
            $fields[] = new MHiddenField('nameForm',$this->getFormValue('name'));
        }

        $this->SetFields($fields);
        
        	$this->numero->AddAttribute('maxlength','20');
         $this->autoridade->AddAttribute('maxlength','20');
         $this->obs->AddAttribute('maxlength','500');
         $this->data->addAttribute('onKeyUp','makeMask(this, \'##/##/####\');');
         $this->datado->addAttribute('onKeyUp','makeMask(this, \'##/##/####\');');
        
		$query = $this->manager->GetBusiness('rh','diplomalegal')->ListAll();
		
	    $this->SetFieldAttr('idDiplomaLegal','options',$query->chunkResult()); 
		
		$buttons = array(
        	new FormButton('btnNew', 'Incluir Publicação')
            );
		$this->SetButtons($buttons);

		$validators = array(
           new MDateDMYValidator('data','','required'),
	   	  new MDateDMYValidator('datado','','required'),
           new MRequiredValidator('numero'),
		);
       $this->SetValidators($validators);
    }

    function btnNew_click()
    {
        global $MIOLO, $module;

        $data = $this->GetData();
		  $publicacao = $this->manager->GetBusiness('rh','publicacao');
		  $data->numero = trim($data->numero);
		  $publicacao->SetData($data);
		  
		  // Retirando os caracteres especiais. :-)
		$caracteres = array("#","·","*", "&", "%", "(", ")", "$", "@", "!", "'", "\"", "+", "=", "-", "/", ".", ",", "^", "?", ":", "}", "]", "[", "º","{","|",">","<",";");
		$data->autoridade = str_replace($caracteres,"",$data->autoridade);
		  
		  
		  if(!$data->numero)
			{
				$this->addError('Informe o número da publicação');
			}
			else
			{
      		if ( $this->fromLookup )
      		{
          		$nameForm = $this->getFormValue('nameForm');
          		$go = $this->manager->getActionUrl('common','lookup','',array('name'=>$nameForm,'lmodule'=>'rh','item'=>'publicacao','event'=>'filler','fvalue'=>'','filter'=>$publicacao->numero));
      		}
            		
			try	
        		{
            			$publicacao->save();
				$go = $MIOLO->GetActionURL($module,'main:publicacao',$publicacao->idPublicacao);
                    		$MIOLO->Information('Dados da Publicação cadastrados com sucesso.', $go );
        	    
            		}
			catch ( Exception $e )
			{	
				$this->AddError("Informe o seguinte erro a equipe do CGCO: ".$e->getMessage());
			}
	}
    }

 }
?>
