<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

MIOLO::Import('modules::rh::controls::linkfuncionario');
MIOLO::Import('modules::rh::controls::linkdependente');

class frmPessoaRelacaoComUfjf extends Form
{
	/**
	 * Objeto pessoa
	 * @access protected
	 * @var BusinessCommonPessoa
	 */
	protected $pessoa;
	
	public function __construct($pessoa)
	{
        $this->pessoa = $pessoa;
		parent::__construct('Relação com a UFJF');
        $this->defaultButton = false;

    }

    public function CreateFields()
    {
        global $MIOLO;
		$fields = array(
		);

        /**
         * Lista funcionarios com mesma pessoa
         */
        $objFuncionario = $MIOLO->GetBusiness('rh','funcionario');
        $criteria = $objFuncionario->getCriteria();
        $criteria->addCriteria('idpessoa', '=', $this->pessoa->idpessoa);
        $query = $criteria->retrieveAsProxyQuery();
        
        $grpFunc = new BaseGroup('grpFunc','Funcionários');
        if(is_array($query->result))
        {
            foreach($query->result as $oid2)
            {
                $arrayFunc[] = new LinkFuncionario('linkfunc'.$oid2[0],$oid2[0]);
            }
            $grpFunc->SetControls($arrayFunc);
		    $this->AddField($grpFunc);
        }

        /**
         * Lista dependentes com mesma pessoa
         */
        $objdependente = $MIOLO->GetBusiness('rh','dependente');
        $criteria = $objdependente->getCriteria();
        $criteria->addCriteria('idpessoa', '=', $this->pessoa->idpessoa);
        $query = $criteria->retrieveAsProxyQuery();
        
        $grpDepen = new BaseGroup('grpDepen','Dependente');
        if(is_array($query->result))
        {
            foreach($query->result as $oid2)
            {
                $array[] = new LinkDependente('linkdepen'.$oid2[0],$oid2[0]);
            }
            $grpDepen->SetContent($array);
		    $this->AddField($grpDepen);
        }

    }
}
?>

