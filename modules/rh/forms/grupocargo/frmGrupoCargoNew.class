<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmGrupoCargoNew extends Form
{

    function __construct()
    {
        global $MIOLO;
        $this->Form('Incluir Novo Grupo Cargo');
        $this->SetClose($MIOLO->GetActionURL('rh','main:grupocargo:find'));
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO;
	   
       $grupocargo = $MIOLO->GetBusiness('rh','grupocargo');
       $fields = array(
		 			new TextField('idgrupocargo','','ID Grupo Cargo','10'),
            	new TextField('descricao','','Nome','40','Máx. 40 caracteres')
	        );
	        
	        $this->SetFields($fields);
	        
       	  $this->descricao->AddAttribute('maxlength','40');
       	  $this->idgrupocargo->AddAttribute('maxlength','10');
	        
	        $validators = array(
            //new RequiredValidator('idgrupocargo'),
            new RequiredValidator('descricao'),
            
            new IntegerValidator('idgrupocargo'),
        );
        
        $this->SetValidators($validators);
		
		 $buttons = array(
     	   	new FormButton('btnNew', 'Incluir Grupo Cargo')
	        );
		 $this->SetButtons($buttons);

    }

    function btnNew_click()
    {
		global $MIOLO, $page;

		    $data = $this->GetData();
			 $id = $data->idgrupocargo;
			  
			 // Retirando os caracteres especiais. :-)
			$caracteres = array("#","*", "&", "%", "(", ")", "$", "@", "!", "'", "\"", "+", "=", "-", "/", ".", ",", "^", "?", ":", "}", "]", "[", "º","{","|",">","<",";");
			$data->descricao = str_replace($caracteres,"",$data->descricao);
		
			if(is_numeric($id))
			{
				$grupocargo = $MIOLO->GetBusiness('rh','grupocargo',$id);
				if (strlen(trim($id)) < '1')
				{
					$this->addError('Informe o id do Grupo Cargo');
				}
				elseif($grupocargo->isPersistent())
				{
					$this->addError('Já existe um registro de Grupo Cargo com esse ID. Favor digite outro ID');
				}
				elseif(strlen(trim($data->descricao)) < '5')
				{
					$this->addError('Informe o Nome do Grupo Cargo');
				}
				else
				{
				  		$grupocargo->SetData($data);
					$grupocargo->save();
				  		$go = $MIOLO->GetActionURL('rh','main:grupocargo','&item='.$grupocargo->idGrupoCargo);
						$MIOLO->Information('Dados do Grupo Cargo inseridos com sucesso.', $go );
				}
			}
			else
			{
				$this->addError('Informe o id Grupo Cargo no padrão numérico');
			}
    }

 }
?>
