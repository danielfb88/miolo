<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/**
 * Use Module Control
 */
/**
 * Form Grupo Cargo
 */
class frmGrupoCargo extends CompoundForm
{
   public $oid;
   protected $grupocargo;
/**
 * Construtor
*/
function __construct($objgrupocargo)
{
      global $MIOLO;

      $this->grupocargo = $objgrupocargo;
      parent::__construct();
      $this->SetClose($MIOLO->GetActionURL('rh','main:grupocargo:find'));
      $this->SetTitle('Grupo Cargo - '.$this->grupocargo->descricao);
      $this->SetIcon($MIOLO->GetUi()->GetImage('rh','grupocargo_mini.png'));
}

function CreateFields()
{
      global $MIOLO, $page, $module, $context, $history;

      $grupocargo = $this->grupocargo;
      if ($this->oid == NULL) $this->oid = $grupocargo->idGrupoCargo;

//form
      $ui = $MIOLO->GetUI();
      $form = Form::GetFormValue('form');
      
      switch ($form)
      {
  	 case 'dados': 
		$this->_form[0] = $ui->GetForm($module,'frmGrupoCargoDados', $grupocargo,'grupocargo'); 
                break;

	 case 'cargos': 
	       $grupocargo->getCargos();
	       if ( ($id = Form::GetFormValue('id')) != NULL )
	       {
			if ($id == 'new')
			{
				$cargo = $MIOLO->GetBusiness('rh','cargo');
				$id = $cargo->getId();
				$id++;
			}
			$cargo = $grupocargo->getCargo($id);
			if ($cargo != NULL)
			{
			  	$this->_form[0] =$ui->GetForm($module,'frmGrupoCargoCargo',$cargo,'grupocargo');
			}
			 
			}
			else
			{
	                 	$this->_form[0] = $ui->GetGrid($module,'gridCargo', $grupocargo); 
			}
	       break;

         case 'excluir': 
  	       $this->_form[0] = $ui->GetForm($module,'frmGrupoCargoDel', $grupocargo,'grupocargo'); 
         break;
        }
    
    if ($this->_form[0])
    {    $this->_form[0]->SetClose($MIOLO->GetActionURL('rh','main:grupocargo',$grupocargo->idGrupoCargo));
        $page->SetAction($history->Top('action'));
     }

// panel        
      $action = $context->action;
      $this->_panel[0] = $panel = new ActionPanel('pnlCompound','Opções','',false);
      $panel->AddUserAction('rh_grupocargo_dados',A_EXECUTE,'Editar',
      $ui->GetImage('rh','edit.png'),'rh',$action, $this->oid, array("form"=>"dados"));
      $panel->AddUserAction('rh_grupocargo_cargos',A_EXECUTE,'Cargos',
      $ui->GetImage('rh','referencia.png'),'rh',$action, $this->oid, array("form"=>"cargos"));
      $panel->AddUserAction('rh_grupocargo_excluir',A_EXECUTE,'Excluir',
      $ui->GetImage('rh','excluir.png'),'rh',$action, $this->oid, array("form"=>"excluir"));

// info
     $this->_info[0] = new TextLabel('idGrupoCargo',$this->grupocargo->idGrupoCargo,'ID');
	 $this->_info[1]	= new TextLabel('txtNome',$this->grupocargo->descricao,'Nome');
	}
}
?>
