<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmFormacaoNew extends Form
{

  function __construct()
  {
    $this->Form('Incluir Nova Formação');
    $this->EventHandler();
  }

  function CreateFields()
  {
    $tabelaGeral = $this->manager->GetBusiness('common', 'tabelageral');
    $query = $tabelaGeral->ListByTabela('RH_ESCOLARIDADE');

    $fields = array(new MTextField('idFormacao', '', 'Código', '4'), new MTextField
      ('formacao', '', 'Formação', '40'), new MSelection('escolaridade', '',
      'Escolaridade', $query->result));
    $this->SetFields($fields);
    $buttons = array(new FormButton('btnNew', 'Incluir Formação'));
    $this->SetButtons($buttons);
    
    $this->idFormacao->AddAttribute('maxlength','4');
    $this->formacao->AddAttribute('maxlength','40');

	 $validators = array(
	   new RequiredValidator('formacao'),
	   new RequiredValidator('idFormacao'),
	   
	   new IntegerValidator('idFormacao'),
	 );
	  
	 $this->SetValidators($validators);
  }

	function btnNew_click()
  	{
		global $MIOLO, $page, $module;
		
		$data = $this->GetData();
		$id = $data->idFormacao;
		
		// Retirando os caracteres especiais. :-)
		$caracteres = array("#","*", "&", "%", "(", ")", "$", "@", "!", "'", "\"", "+", "=", "-", "/", ".", ",", "^", "?", ":", "}", "]", "[", "º","{","|",">","<",";");
		$data->formacao = str_replace($caracteres,"",$data->formacao);
		
		if(is_numeric($id))
		{
	        	$formacao = $MIOLO->GetBusiness($module,'formacao',$id);
			if (strlen(trim($id)) < '1')
			{
				$this->addError('Informe o id da Formação');
			}
			elseif($formacao->isPersistent())
			{
				$this->addError('Já existe um registro de Formação com esse ID. Favor digite outro ID');
			}
			elseif(strlen(trim($data->formacao)) < '5')
			{
				$this->addError('Informe a Formação');
			}
			elseif($data->escolaridade == '')
			{
				$this->addError('Informe a escolaridade');
			}
			else
			{
				$formacao->SetData($data);
		        	$formacao->save();
				$go = $MIOLO->GetActionURL('rh','main:formacao',$formacao->idFormacao);
	   			$MIOLO->Information('Dados da formação inseridos com sucesso.', $go );
			}
		}
		else
		{
			$this->addError('Informe o id Formação no padrão numérico');
		}

	}

}

?>
