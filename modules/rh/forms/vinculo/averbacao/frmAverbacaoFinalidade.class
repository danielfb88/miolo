<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmAverbacaoFinalidade extends MForm
{
	protected $averbacao;
    protected $dias;

    function __construct($objAverbacao)
    {
		$this->SetClose(null);
		$this->averbacao = $objAverbacao;
        $this->dias = $this->averbacao->totalDias;
        parent::__construct('Dados da Finalidade');
        $this->EventHandler();
    }

    function CreateFields()
    {

       $tabelaGeral = $this->manager->GetBusiness('common','tabelageral');
       $query = $tabelaGeral->listByTabela('RH_FINALIDADECONTAGEM');

		if ($this->averbacao->tipoTempo == "SPR") {
			$fields = array(
				new TextField('nomeFinalidade','APOSENTADORIA','Finalidade','14'),
				new MHiddenField('finalidade','1')
				);
		}
		else {
			$fields = array(
				new MSelection('finalidade','','Finalidade', $query->chunkResult())
				);
		}
		$fields[] = new TextField('totalDias',$this->dias,'Total Dias',5,"Máximo $this->dias");
		
   	   
        $this->SetFields($fields);
		$this->SetFieldAttr('nomeFinalidade','readonly', TRUE);
		
		$buttons = array(
			new FormButton('btnSalvar','Inserir'),
            );
	$this->SetButtons($buttons);

	
	$validators = array(
		   new MRangeValidator('totalDias','',1,$this->dias,'i','required')
		);
    $this->SetValidators($validators);

    }
	public function btnSalvar_click()
	{
		global $MIOLO;    

		$finalidade = $this->getFormValue('finalidade');
		$totalDias = $this->getFormValue('totalDias');
               
               	if ($finalidade == '')
		{
		    $this->addError('Selecione a Finalidade');
		}
		
              else
              {
        
       	        $err = FALSE;
                if ( $totalDias > $this->dias )
        	{
           	   $this->addError("O total de dias da finalidade não pode ser maior que o total de dias da averbação.");
            	   $err = TRUE;
            
                }
        	if ( $this->averbacao->checkFinalidade($finalidade) )
        	{
            	  $this->addError("Finalidade já cadastrada anteriormente.");
                  $err = TRUE;
        	}
        
        	if ( ! $err )
        	{
            	   $objFinalidade = $this->averbacao->getFinalidade('new');
                   $objFinalidade->idFinalidade = $finalidade;
                   $objFinalidade->totalDias = $totalDias;
	    	   $this->averbacao->addFinalidade($objFinalidade);
	
    		try
	    	{
		    	$this->averbacao->saveAssociation('finalidades');
			$this->averbacao->save();
               		 $MIOLO->Information('Dados da Finalidade cadastrados com sucesso.', $go );
                	$objFinalidade->log(OP_INS," id averbacao ".$objFinalidade->idAverbacao." id finalidade: ".$objFinalidade->idFinalidade." total dias: ".$objFinalidade->totalDias );
    		}
	    	catch (Exception $e)
		{
			 $this->AddError("Informe o seguinte erro a equipe do CGCO: ".$e->getMessage());
    		}
	    }
         }
    }


 }
?>
