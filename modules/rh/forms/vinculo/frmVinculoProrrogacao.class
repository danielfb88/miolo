<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmVinculoProrrogacao extends MForm
{
    var $vinculo;
    var $idProrrogacao; //dataFim

    function __construct($data) // data[0]: vinculo data[1]: id
    {
        $this->vinculo = $data[0];
        $this->idProrrogacao = $data[1];

        parent::__construct("Prorrogação de contrato temporário");
        $this->eventHandler();
    }

    function createFields()
    {
        $provimento = $this->vinculo->getProvimentoAtual();
        if ( ! $provimento )
        {
            $provimento = $this->vinculo->getUltimoProvimento();
        }

        $provimento->getCargo();

        $infoCargo = new MHContainer('',
            array(
                new MLabel('Cargo:'),
                new MTextLabel('txtCargo',$provimento->cargo->descricao)
            )
        );
        
        $infoDataInicio = new MHContainer('',
            array(
                new MLabel('Data de Início:'),
                new MTextLabel('txtDataInicio',$this->vinculo->dataExercicio)
            )
        );

        $infoDataInicio = new MHContainer('',
            array(
                new MLabel('Data de Início:'),
                new MTextLabel('txtDataInicio',$this->vinculo->dataExercicio)
            )
        );
        
        $infoFimPrevisto = new MHContainer('',
            array(
                new MLabel('Fim Previsto:'),
                new MTextLabel('txtDataFimContrato',$this->vinculo->dataFimContrato)
            )
        );
        
        $fields = array(
            new MBaseGroup('info','Dados do Contrato Atual',array($infoCargo,$infoDataInicio,$infoFimPrevisto),'vertical','css'),
            new MCalendarField('dataFim','','Data Fim da Prorrogação'),
			new MMultiLineField('obs','','Observação',25,5,40,'Máx. 500'),
        );

        $this->setFields($fields);

        $buttons = array(
            new MButton('btnPost','Enviar'),
            new MButton('btnDelete','Excluir')
        );

        $this->setButtons($buttons);

        $this->setButtonAttr('btnDelete','visible',FALSE);

        if ( $this->idProrrogacao != "new" )
        {
            $this->setData();
        }
    }

    function setData()
    {
        $prorrogacao = $this->vinculo->getProrrogacaoContrato($this->idProrrogacao);
        $this->setFieldValue('dataFim',$prorrogacao->dataFim);
        $this->setFieldValue('obs',$prorrogacao->obs);
        
        $this->setFieldAttr('dataFim','readonly',TRUE);
        $this->setFieldAttr('obs','readonly',TRUE);
        
        $this->setButtonAttr('btnDelete','visible',TRUE);
        $this->setButtonAttr('btnPost','visible',FALSE);
    }

    function btnPost_click()
    {
        $data = $this->getData();
        
        $prorrogacao = $this->vinculo->getProrrogacaoContrato($this->idProrrogacao);
        $prorrogacao->setData($data);

        try
        {
            $this->vinculo->saveProrrogacao($prorrogacao);
            $this->manager->information("Prorrogacação lançada com sucesso");
        }
        catch ( Exception $e )
        {
            $this->addError($e->getMessage());
        }
    }

    function btnDelete_click()
    {
		$action_sim = $this->manager->getActionURL('rh','main:vinculo',$this->vinculo->idVinculo,array('form'=>'contrato','id'=>$this->idProrrogacao,'conf'=>'sim','event'=>'btnDelete:click'));
		$action_nao = $this->manager->getActionURL('rh','main:vinculo',$this->vinculo->idVinculo,array('form'=>'contrato','id'=>$this->idProrrogacao));
        
		$conf = $this->GetFormValue('conf');

		if ($conf == 'sim')
        {
            try
            {
                $this->vinculo->deleteProrrogacaoContrato($this->idProrrogacao);
				$this->manager->information('Prorrogação excluída com sucesso',$this->manager->GetActionURL('rh','main:vinculo',$this->vinculo->idVinculo,array('form'=>'contrato')));
            }
            catch ( Exception $e )
            {   
                $this->addError($e->getMessage());
            }
        }
	    else
        {
		   $this->manager->question("Tem certeza que deseja excluir a prorrogação?",$action_sim,$action_nao);
		}
    }
}
?>
