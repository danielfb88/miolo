<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmIncentivoData extends MForm
{
    /**
     * Objeto Vinculo
     * @access protected
     * @var BusinessRhVinculo
     */
    protected $objIncentivo;

    function __construct($objIncentivo)
    {
        $this->objIncentivo = $objIncentivo;
        parent::__construct('Incentivo à Qualificação');
        $this->defaultButton = false;
        $this->EventHandler();
    }
    
    function CreateFields()
    {
        global $MIOLO;
       
        $perms = $MIOLO->getPerms();

        
        $tiposRelacao = array(
            array('DIRETA', 'D'),
            array('INDIRETA', 'I')
        );
        
        $qualificacaoFields = $this->createDetalhes($this->objIncentivo->getQualificacao());

        $fields = array(
            new MSpacer('1'),
            $themeBox = new MThemeBox("Dados da {$this->objIncentivo->getTipoQualificacao()} associada ao incentivo:", $qualificacaoFields),
            new MSpacer('1'),
            array(
                $nivelClassificacao = new MTextField('nivel', $this->objIncentivo->percQualificacao->nivelClassificacao,'Nível',3, '', '', true),
                $nivelEscolaridade = new MTextField('nivelEscolaridade', $this->objIncentivo->percQualificacao->escolaridadePCCTAE->descricao,'Nível de escolaridade formal',50, '', '', true),
                $percentualAplicado = new MTextField('percentualAplicado', $this->objIncentivo->percentualAplicado,'Percentual (%)',10, '', '', true),
                $dataIncentivo = new MTextField('dataIncentivo', $this->objIncentivo->dataIncentivo,'Data Incentivo',10, '', '', true),
            ),
            new MSpacer('1'),
            $relacao = new MRadioButtonGroup('relacao', 'Relação com a área de conhecimento', $tiposRelacao ,$this->objIncentivo->relacao, '', 'vertical', 'css'),
            new MSpacer('1'),
            
        );

        $buttons = array(
            new MButton('btnExcluir', 'Excluir'),
        );

//        $relacao->addAttributeControls('readonly', 'true');
//        $relacao->addAttributeControls('disable', 'true');
        $relacao->addAttribute('readonly', 'true');
        $relacao->addAttribute('disable', 'true');
        foreach ($relacao->GetControls() as $control) $control->setReadOnly(true);

        $themeBox->showLabel = true;

        $nivelClassificacao->setJsHint( _M('Nível de classificação') );
        $nivelEscolaridade->setJsHint( _M('Nível de escolaridade formal superior ao previsto para o exercício do cargo') );
        $relacao->setJsHint( _M('Relação com a área de conhecimento') );
        $percentualAplicado->setJsHint( _M('Percentual aplicado') );
        $dataIncentivo->setJsHint( _M('Data de Concessão do Incentivo') );

        $this->SetFields($fields);
        $this->SetButtons($buttons);
     }

    function createDetalhes($objQualificacao) {

        if ($objQualificacao->idHistFormacao) {
            //Objeto de histformacao
            $qualificacao = $objQualificacao->formacao->formacao . " - " . $objQualificacao->escolaridadePCCTAE->descricao;
            $nomeCurso = $objQualificacao->nomeCurso;
        } else if ($objQualificacao->idHistTitulacao) {
            //Objeto de histtitulacao
            $qualificacao = $objQualificacao->getTitulacao() . ' - ' . $objQualificacao->escolaridadePCCTAE->descricao;
            $nomeCurso = $objQualificacao->nomecurso;
        }
            $fields = array(
                new Label("<b>Qualificacao:</b> " . $qualificacao),
                new MSPacer('0'),
                new Label("<b>Nome do curso:</b> " . $nomeCurso),
                new MSPacer('0'),
                new Label("<b>Instituição:</b> " . $objQualificacao->entidade),
                new MSPacer('0'),
                new Label("<b>Data de conclusão:</b> " . $objQualificacao->dataFim),
                new MSPacer('0'),
            );

        return $fields;

    }

    function btnExcluir_click() {
    global $MIOLO;
        
        $objVinculo = $this->objIncentivo->getVinculo();
        
        $action_sim = $MIOLO->GetActionURL($module,'main:vinculo',$objVinculo->idVinculo,array('form'=>'incentivo','conf'=>'sim','id'=>$this->objIncentivo->idHistIncentivo,'event'=>'btnExcluir:click'));

        $action_nao = $MIOLO->GetActionURL($module,'main:vinculo',$objVinculo->idVinculo,array('form'=>'incentivo','conf'=>'nao','id'=>$this->objIncentivo->idHistIncentivo));

        $conf = $this->GetFormValue('conf');
        
        if ($conf == 'sim')
	    {
            $this->objIncentivo->delete();
            $MIOLO->Information('Incentivo excluído com sucesso',$MIOLO->GetActionURL($module,'main:vinculo',$objVinculo->idVinculo,array('form'=>'incentivo')));

        } else {

            $MIOLO->Question("Tem certeza que deseja excluir o incentivo ".$this->objIncentivo->escolaridadePCCTAE->descricao." ?",$action_sim,$action_nao);

        }
    }
}

?>
