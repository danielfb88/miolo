<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmGeral extends MForm
{
    function __construct()
    {
        parent::__construct('Relatório Geral');
        $this->SetClose($this->manager->GetActionURL('rh','main:relatorios'));
        $this->EventHandler();
    }

    function CreateFields()
    {
        //$ui = $this->manager->getUI();
        //$grid = $ui->getGrid('rh','gridRelGeral', NULL,'relatorios');
        //$grid->SetTitle(NULL);
        $opt1 = new MOption('opt1','nome','Servidores em ordem alfabética',true,'id1');
        $opt2 = new MOption('opt2','setor','Servidores agrupados por setor',false,'id2');
        $options = array($opt1,$opt2);
        $fields = array(
            new MRadioButtonGroup('ordem','Tipo do Relatório',$options),
            //$grid
        );        
        $this->SetFields($fields);
        
        $buttons = array(
	          			 new MButton('btnReport','Gerar Relatório', 'PDF'),
	          			 new MButton('btnGerarCSV','Gerar Planilha')
        );
        $this->SetButtons($buttons); 
    }

    /*function btnReport_click()
    {
        $ui = $this->manager->getUi();
        $file = ($this->getFormValue('ordem')=='nome')?'repGeralNome':'repGeralSetor';        
        $report = $ui->getReport('rh',$file);
        $report->generate();
    }*/
	function btnReport_click()
	{
		global $MIOLO; 	
		
		$op = $this->getFormValue('ordem');
		if($op == 'nome')
		{
		        $report = new MJasperReport('sigaept'); 
			$parameters['SUBREPORT_DIR'] = $MIOLO->GetConf('home.modules');
			$parameters['int_pIdUsuario']= $MIOLO->login->idkey;
			$parameters['pURL']=$MIOLO->GetConf('home.url');
		        $report->Execute('rh', 'RelGeralNome',$parameters); 
		}
		elseif($op == 'setor')
		{
		       	$report = new MJasperReport('sigaept'); 
			$parameters['SUBREPORT_DIR'] = $MIOLO->GetConf('home.modules');
			$parameters['int_pIdUsuario']= $MIOLO->login->idkey;
			$parameters['pURL']=$MIOLO->GetConf('home.url');
		        $report->Execute('rh', 'RelGeralAGSetor',$parameters); 
		}
		else
		{		
			$this->addError('Selecione a opção para a geração do relatório');
		}
	}
    
    function btnGerarCSV_click()
	{
		$funcionario = $this->manager->getBusiness('rh','funcionario');
        $ordem = $this->GetFormValue('ordem');
        
        if ($ordem == 'nome')
        {		
			$consulta = $funcionario->listGeral();
        }
        else 
        {
        	$consulta = $funcionario->listGeral(true);
        }        
       	
        if ( is_array($consulta->result) )
     	{
    		$resultAux[] = array('iDVÍNCULO','NOME','REGIME JURÍDICO','SITUAÇÃO','CARGO','JORNADA');
    		foreach ($consulta->result as $result)		  
	    	{
	    		$resultAux[] = array($result[1],$result[2],$result[3],$result[4],$result[5],$result[6] );		
	    	}
    	}
    	else 
    	{
    		$consulta->result[] = ""; 
    	}   
			    
	    $consulta->result = $resultAux;
		$consulta->getCSV("Relatório Geral por $ordem");      
	}
 }
?>
