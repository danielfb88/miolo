<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

/*
Objetivo: relatório de todos os pensionistas,

Algoritmo:
    - oferece escolha de ordem do relatório
    - oferece escolha de gerar PDF ou planilha
    - se escolhido gerar PDF
        - recupera dados dos pensionistas e instituidores
        - chama classe para montagem do relatório
    - se escolhido gerar planilha
        - recupera dados dos pensionistas e instituidores
        - monta planilha
*/


class frmrepEspPensionistas extends MForm
{
    protected $options;


    function __construct()
    {
        parent::__construct('Relatório Geral de Pensionistas');
        $this->EventHandler();
    } // __construct


    function CreateFields()
    {
        $this->options = array('P'=>'por nome de Pensionista', 'I'=>'por nome de Instituidor');

        $fields[] = array( new MSelection('ordem' , 'P', 'Ordem do relatório', $this->options),
                           new FormButton('btnPDF', 'gerar PDF'     , 'PDF'                 ),
                           new FormButton('btnCSV', 'gerar Planilha'                        ) );

        $this->SetFields($fields);

        $this->SetShowPostButton(false);  //inibe o botão padrão do Miolo
    } // CreateFields


    function btnPDF_click()
    {
        global $module;

        $array = $this->sql();
        $ui = $this->manager->GetUI();
        $report = $ui->GetReport($module,'repGeral',$array,'pensionistas'); //quarto parâmetro sub-diretório
        $report->Generate();
    } // btnPDF_click


    function btnCSV_click()
    {
        $array = $this->sql();

        $csv = new MQuery();
        $resultaux[] = array($array['title' ]);     //inicia a planilha com o título geral
        $resultaux[] = $array['labels'];            //                   e os cabeçalhos das colunas
        foreach ($array['result'] as $data)         //então coloca a grade de dados
        {
            $resultaux[] = $data;
        }
        $csv->result = $resultaux;
        $csv->getCSV($array['title'][0]);
    } // btnCSV_click


    function sql()
    {
        global $module;

        $data = $this->GetData();
        if (! $data->ordem)
        {
            $data->ordem = 'P';
        }

        $obj = $this->manager->GetBusiness($module,'pensionista');
        $qy = $obj->ListAll($data->ordem);

        $array['result' ] = $qy->result;
        $array['labels' ] = array('Código','Pensionista','SIAPE','Instituidor','Cargo/Emprego','Instituição');
        $array['lengths'] = array(6       ,30           ,6      ,30           ,23             ,6            );
        $array['title'  ] = array( $this->GetTitle(), 'Ordem:' . $this->options[$data->ordem] );

        return $array;
    } // sql


}
?>
