<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmJLocalTerceirizado extends MForm
{
    function __construct()
    {
		parent::__construct('Local de Trabalho de Terceirizados');
        $this->EventHandler();
	}


	function createFields()
	{

		$fields = array(
			new MHiddenField('idlocaltrabalho'),
			new MLookupFieldValue('lkpLocal','','Local Trabalho',60,''),
            new MCalendarField('dataInicio','','Data Início'),
            new MCalendarField('dataFim','','Data Fim'),
		);
        $this->SetFields($fields);

		$this->SetFieldAttr('lkpLocal','module','rh');
   	 	$this->SetFieldAttr('lkpLocal','item','local');
  	 	$this->SetFieldAttr('lkpLocal','event','filler');
    	$this->SetFieldAttr('lkpLocal','related','idlocaltrabalho,lkpLocal,null,null'); 

		$buttons = Array
		(
			new FormButton('btnPost','Enviar','PDF')
		);
		$this->SetButtons($buttons);

	}


    function btnPost_click()
    {
    	$k = new MKrono();
		$local = $this->GetFormValue('idlocaltrabalho');
        $dataInicio = $this->GetFormValue('dataInicio');
        $dataFim = $this->GetFormValue('dataFim');

      //Erro Datas
        if ( !(is_null($dataInicio) or empty($dataInicio)) and !(is_null($dataFim) or empty($dataFim)) )
        {
	        if ($k->CompareDate($dataInicio,'>',$dataFim))
	        {
	            $erro[] = "A Data Início não pode ser MAIOR que a Data Fim.";
	        }
	        
        }
                
        if ( count($erro) > 0 )
        {
            foreach ( $erro as $e )
            {
                $this->addError($e);
            }
        }
          	
        else
        {

        	$campos = "cm_pessoa.nome as nome,
					   cm_pessoa.cpf as cpf,
        			   rh_localterceirizado.nome as local,
                       substr(rh_jornada.descricao,0,2) || ' HS' as jornada,
					   substr(rh_escala.descricao,8,5) || ' HS' as escala,
					   TO_CHAR(RH_PROVTERCEIRIZADO.DATAINICIO,'DD/MM/YYYY') as datainicio,
					   TO_CHAR(RH_PROVTERCEIRIZADO.DATAFIM,'DD/MM/YYYY') as datafim,
        			   rh_funcaoterceirizado.descricao as funcao,
                       rh_contrato.numcontrato AS contrato";

        	$tabelas = "cm_pessoa,
        				rh_terceirizado,
        				rh_provterceirizado,
    					rh_jornada,
					    rh_escala,
    					rh_funcaoterceirizado,
					    rh_localterceirizado,
                        rh_contrato";

        	$condicoes ="(rh_terceirizado.idpessoa = cm_pessoa.idpessoa) and
        				 (rh_terceirizado.idterceirizado = rh_provterceirizado.idterceirizado) and
                         (rh_provterceirizado.idlocalterceirizado = rh_localterceirizado.idlocalterceirizado) and
        				 (rh_provterceirizado.idjornada = rh_jornada.idjornada) and 
					     (rh_provterceirizado.idescala = rh_escala.idescala(+)) and
                         (rh_provterceirizado.idcontrato = rh_contrato.idcontrato) and
                         (rh_provterceirizado.idfuncaoterceirizado = rh_funcaoterceirizado.idfuncaoterceirizado) and
                         (rh_provterceirizado.idlocalterceirizado = '$local') ";
        	                
	
/*            //Verifica condições de filtragem por data

            //Ativos - Filtragem sem data início e data fim
        	if ((is_null($dataInicio) or empty($dataInicio)) and (is_null($dataFim) or empty($dataFim)))
        	{

 			    $condicoes .= "and (rh_provterceirizado.datainicio = (select max(rh_provterceirizado.datainicio) from rh_provterceirizado where (rh_provterceirizado.idterceirizado = rh_terceirizado.idterceirizado))) and (rh_provterceirizado.datafim IS NULL) ";
        	}
        	
            //Ativos - Filtragem com data início e data fim
        	if (!(is_null($dataInicio) or empty($dataInicio)) and !(is_null($dataFim) or empty($dataFim)))
        	{
        		$di = $k->InvertDate($dataInicio);
        		$df = $k->InvertDate($dataFim);
        		//$condicoes .= "and ( TO_CHAR(RH_PROVTERCEIRIZADO.DATAINICIO,'YYYY/MM/DD') >= '$di' ) ";
                $condicoes .= "and (rh_provterceirizado.datainicio=(select max(rh_provterceirizado.datainicio) from rh_provterceirizado where ((rh_provterceirizado.idterceirizado = rh_terceirizado.idterceirizado) and (((TO_CHAR(RH_PROVTERCEIRIZADO.DATAINICIO,'YYYY/MM/DD') <= '$df') and (TO_CHAR(RH_PROVTERCEIRIZADO.DATAFIM,'YYYY/MM/DD') >= '$di')) or ((TO_CHAR(RH_PROVTERCEIRIZADO.DATAINICIO,'YYYY/MM/DD') <= '$df') and (RH_PROVTERCEIRIZADO.DATAFIM is null))) ))) ";
        	}
        	
            //Ativos - Filtragem com data início
        	if (!(is_null($dataInicio) or empty($dataInicio)) and (is_null($dataFim) or empty($dataFim)))
        	{
        		$di = $k->InvertDate($dataInicio);
                $condicoes .= "and (rh_provterceirizado.datainicio=(select max(rh_provterceirizado.datainicio) from rh_provterceirizado where ((rh_provterceirizado.idterceirizado = rh_terceirizado.idterceirizado) and ((TO_CHAR(RH_PROVTERCEIRIZADO.DATAFIM,'YYYY/MM/DD') >= '$di') or (RH_PROVTERCEIRIZADO.DATAFIM is null)) ))) ";
        	}
        	
        	//Ativos - Filtragem com data fim
        	if ((is_null($dataInicio) or empty($dataInicio)) and !(is_null($dataFim) or empty($dataFim)))
        	{
        		$df = $k->InvertDate($dataFim);
                $condicoes .= "and (rh_provterceirizado.datainicio=(select min(rh_provterceirizado.datainicio) from rh_provterceirizado where ((rh_provterceirizado.idterceirizado = rh_terceirizado.idterceirizado) and (TO_CHAR(RH_PROVTERCEIRIZADO.DATAINICIO,'YYYY/MM/DD') <= '$df')) )) ";
        	}*/
        
        	
        	$ordenacao = "rh_contrato.numcontrato";

        	$sql = "SELECT ". $campos ." FROM " . $tabelas . " WHERE " . $condicoes . " ORDER BY " . $ordenacao;

        	$report = new MJasperReport('ufjf');

        	$parameters['str_SUBREPORT_DIR'] = $this->manager->getConf('home.modules') . "/common/reports/";
	        $parameters['str_SQL'] =  $sql;
        	//$parameters['str_DATAFIM'] =  $dataFim;
			//var_dump($sql);
			$report->Execute('rh','RH_ContratoLocalTrabalho',$parameters);

        }

    }
}
?>
