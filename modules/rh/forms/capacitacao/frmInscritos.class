<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmInscritos extends MForm
{
    private $idmodulo;
    private $anosem;

    function __construct($array)
    {
		global $MIOLO, $module;
		
        $this->anosem = $array[0];
        $this->idmodulo = $array[1];
        parent::__construct('Relação de Inscritos Confirmados/Concluídos em Cursos/Eventos de Capacitação');
		$this->SetClose($MIOLO->GetActionURL($module,'main'));
        $this->EventHandler();
    }

    function CreateFields()
	{  
        if ($this->anosem == '')
        {
            $this->createFieldsFase0();
        }
        elseif ($this->idmodulo == '')
        {
            $this->createFieldsFase1();
        }
        else
        {
            $this->createFieldsFase2();
        }
    }

    function CreateFieldsFase0()
    {
        global $MIOLO, $action;

        $modulo = $MIOLO->GetBusiness('rh','capacitacaomodulo');
        $anosemestre = $modulo->getListOfAnoSemestre();
        $anosemestre[' '] = 'TODOS';

        $fields = array(
            new MSelection('anosemestre','','Ano.Semestre',$anosemestre),
        );
        $this->SetFields($fields);

        $buttons = Array(
            new MButton('btnAnoSemestre', 'Continuar'),
        );
	    $this->SetButtons($buttons);
    }

    function CreateFieldsFase1()
    {
        global $MIOLO, $action;

// modulo
        $modulo = $MIOLO->GetBusiness('rh','capacitacaomodulo');
        $anosemestre = $modulo->getListOfAnoSemestre();
        $anosemestre[' '] = 'TODOS';
        $aTurno = array("M"=>"Manhã","T"=>"Tarde","N"=>"Noite");	
        $query = $modulo->listAll('','',trim($this->anosem));
        $aModulos = $query->treeResult("1","3,5,0"); 

		foreach($aModulos as $n=>$c)
		{
			$opt = array(); 
			foreach($c as $c1)
			{
               $opt[] = new MOption( $c1[2], $c1[2], $c1[0].'&nbsp;-&nbsp;'.$aTurno[$c1[1]], false);
			}
            $optGroup[] = new MOptionGroup($c[2],'Curso: '.$n,$opt);
		}
        if(!$optGroup)
        {
            $this->AddError("Não há nenhum módulo cadastrado no Ano.Semestre escolhido.");
            $buttons = Array(
                new MButton('btnmodulo', 'Voltar'),
            );
    	    $this->SetButtons($buttons);
        }
        else
        {
            $fModulo = new MSelection('idmodulo',$this->candidato->idmodulo,'Curso/Módulo',$optGroup);
        
            $fields = array(
                new MSelection('anosemestre','','Ano.Semestre',$anosemestre),
                $fModulo
            );
	        $this->SetFields($fields);
	        $this->SetFieldAttr('anosemestre', 'readonly', true);

            $buttons = Array(
                new MButton('btnSiape', 'Continuar'),
            );
	        $this->SetButtons($buttons);
        }
    }

    function CreateFieldsFase2()
    {
        global $MIOLO, $action;

        $ui = $MIOLO->GetUI();
        $modulo = $this->manager->getBusiness('rh','capacitacaomodulo',$this->idmodulo);
        $grid = $ui->GetGrid('rh','gridCapacitacaoInscRel', $modulo); 
//        $grid->SetTitle(NULL);
        $turno = array("M"=>"Manhã","T"=>"Tarde","N"=>"Noite");

        $fields = array(
//            new MTextLabel('lblId',$modulo->idmodulo,'Id'), 
            new MTextLabel('lblCurso',$modulo->curso->idcurso . ' - ' . $modulo->curso->nome,'Curso'), 
            new MTextLabel('lblModulo',$modulo->modulo . ' - ' . $modulo->nome,'Módulo'), 
            new MTextLabel('lblTurno',$turno[$modulo->turno],'Turno'), 
            $grid
        );
        $this->SetFields($fields);
        $this->defaultButton = false;
    }

 }
?>
