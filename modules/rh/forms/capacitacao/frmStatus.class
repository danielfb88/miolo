<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmStatus extends MForm
{

    var $candidato;

    function __construct($siape)
    {
        global $MIOLO;
 
        $this->candidato = $MIOLO->GetBusiness('rh','capacitacaoinsc');
        $this->candidato->idvinculo = $siape;
        parent::__construct('Inscrições em Eventos de Capacitação - Status');
//        $this->box->AddStyle('width',"75%");
        $this->box->AddStyle('padding',"10px");
	    $this->eventHandler();
    }

    function CreateFields()
    {
        global $MIOLO, $action;

        $ui = $MIOLO->GetUI();

// grid com os cursos/módulos

        $status = array(""=>"Pendente","E"=>"Excedente","P"=>"Pendente","A"=>"Autorizado","C"=>"Confirmado","X"=>"Autoriz-Exc", "F"=>"Concluido");
        $turno = array("M"=>"Manhã","T"=>"Tarde","N"=>"Noite");

        $columns = array(
            new MDataGridColumn('curso','Nome','left', false,'40%',true),
            new MDataGridColumn('modulo','Módulo','left', false,'35%',true),
            new MDataGridColumn('turno','Turno','left', false,'5%',true,$turno),
            new MDataGridColumn('datainicio','Data Início','right', false,'10%',true),
            new MDataGridColumn('status','Status','left', false,'10%',true,$status),
        );
        
        $href_grid = $MIOLO->GetActionURL($module,$self);
        $query = $this->candidato->listModulos();
        $grid = new MDataGrid($query, $columns, $href_grid,25);
        $grid->SetTitle('Cursos/Eventos de Capacitação - SIAPE: ' . $this->candidato->idvinculo);
        $grid->setRowMethod('frmStatus','gridRowMethod');

        $this->candidato->getDadosPessoais();
        
        $fields = array(
            new MLabel("Servidor: " . $this->candidato->dadosPessoais->nome,'black',true),
            new MLabel("SIAPE: " . $this->candidato->idvinculo,'black',true),
			new MSpacer('10px'),
            new MLabel("Status (volte a acessar esta página para acompanhar o andamento de suas inscrições): ",'blue',true),
            new MLabel("&nbsp;&nbsp;&nbsp;Pendente: aguardando autorização da chefia",'black'),
            new MLabel("&nbsp;&nbsp;&nbsp;Excedente: aguardando desistência",'black'),
            new MLabel("&nbsp;&nbsp;&nbsp;Autorizado: aguardando confirmação da PRORH",'black'),
            new MLabel("&nbsp;&nbsp;&nbsp;Autoriz-Exc: aguardando confirmação da PRORH, se houver desistência",'black'),
            new MLabel("&nbsp;&nbsp;&nbsp;Confirmado: inscrição confirmada pela PRORH",'black'),
            new MLabel("&nbsp;&nbsp;&nbsp;Concluído: participação concluída",'black'),
            $grid
        );
        $this->SetFields($fields);
        $this->defaultButton = false;
    }

    function gridRowMethod($i, $row, $actions,$columns)
    {
        if ( $row[4]{0} == 'C' )
        {
            $columns['status']->control[$i]->setColor('green');
            $columns['status']->control[$i]->setBold(true);
        }
        if ( $row[4]{0} == 'A' )
        {
            $columns['status']->control[$i]->setColor('blue');
            $columns['status']->control[$i]->setBold(true);
        }
        if ( $row[4]{0} == 'F' )
        {
            $columns['status']->control[$i]->setColor('blue');
            $columns['status']->control[$i]->setBold(true);
        }
        if ( $row[4]{0} == '' )
        {
            $columns['status']->control[$i]->setColor('red');
            $columns['status']->control[$i]->setBold(true);
        }
    }

 }
?>
