<?
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

class frmJornadaNew extends Form
{

    function __construct()
    {
        global $MIOLO, $module;

        $this->Form('Nova Jornada');
        $this->SetClose($MIOLO->GetActionURL($module,'main:jornada:find'));
        $this->EventHandler();
    }

    function CreateFields()
    {
       global $MIOLO, $module;
	   
        $idjornada = new TextField('idJornada','','Código','4');
        $descricao = new TextField('descricao','','Descrição','40');

		$fields = array(
            $idjornada,
            $descricao,
        );
		
        $this->SetFields($fields);
		
        $idjornada->AddAttribute('maxlength','5');
        $descricao->AddAttribute('maxlength','20');

        $validators = array(
            new RequiredValidator('idJornada'),
            new RequiredValidator('descricao'),
        );
        
        $this->SetValidators($validators);

		$buttons = array(
        	new FormButton('btnNew', 'Incluir Jornada')
        );
		$this->SetButtons($buttons);

    }

	function GetData()
	{
        	$data = new FormData();
		$data->idJornada = $this->GetFormValue('idJornada');
		$data->descricao = substr($this->GetFormValue('descricao'), 0, 20);
        	return $data;
	}

    	function btnNew_click()
    	{
		global $MIOLO, $page, $module, $action, $item;

	   $data = $this->GetData();
		$id = $data->idJornada;
		
		// Retirando os caracteres especiais. :-)
		$caracteres = array("#","*", "&", "%", "(", ")", "$", "@", "!", "'", "\"", "+", "=", "-", "/", ".", ",", "^", "?", ":", "}", "]", "[", "º","{","|",">","<",";");
		$data->descricao = str_replace($caracteres,"",$data->descricao);
	
		if(is_numeric($id))
		{
	      $jornada = $MIOLO->GetBusiness($module,'jornada',$id);
			if (strlen(trim($id)) < '1')
			{
				$this->addError('Informe o id da jornada');
			}
			elseif($jornada->isPersistent())
			{
				$this->addError('Já existe um registro de jornada com esse ID. Favor digite outro ID');
			}
			elseif(strlen(trim($data->descricao)) < '5')
			{
				$this->addError('Informe a Descrição da jornada');
			}
			else
			{
		     	$jornada->SetData($data);
				$jornada->save();
				$go = $MIOLO->GetActionURL('rh','main:jornada',$jornada->idJornada);
	   		$MIOLO->Information('Dados da Jornada inseridos com sucesso.', $go );
			}
		}
		else
		{
			$this->addError('Informe o id jornada no padrão numérico');
		}
	}

 }
?>
