
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php

class BusinessCommonPais extends MBusiness
{
	var $idPais;
	var $pais;
	var $nacionalidade;
	
	function __construct($data=null)
	{
       parent::__construct('common',$data);
    }

    function SetData($data)
   
    {
       $this->idPais = $data->idPais;
       $this->pais = strtoupper($data->pais);
       $this->nacionalidade = $data->nacionalidade;
    }

    function GetById($idpais)
    {
        if (!$idpais==null)
        {
            $sql = new sql('*','cm_pais','(idpais=?)');
            $query = $this->Query($sql,$idpais);
            if ( !$query->eof() )
            {
                $this->SetData($query->GetRowObject());
            }
            return $this;
        }
    }

    function Insert()
    {   global $MIOLO;
        $sql = new sql('idpais, pais, nacionalidade','cm_pais');
        $args = array(
    		$this->idPais,
		    strtoupper($this->pais),
            $this->nacionalidade
        );
        $ok = $this->Execute($sql->Insert($args));
        if ($ok) {$this->Log(OP_INS,"idpais = $this->idPais");} 
        return $ok;
    }

    function Update()
    {
        $sql = new sql('pais, nacionalidade','cm_pais','idpais = ?');
        $args = array(
		    strtoupper($this->pais),
            $this->nacionalidade,
    		$this->idPais
        );
        $ok = $this->Execute($sql->Update($args));
        if ($ok) {$this->Log(OP_UPD,"idpais = $this->idPais");} 
        return $ok;
    }
    
    function Delete()
    {
        $sql = new sql('','cm_pais', 'idpais = ?');
        $ok = $this->Execute( $sql->Delete($this->idPais) );
        if ($ok) {$this->Log(OP_DEL,"idpais = $this->idPais");} 
        return $ok;
    }

    function ListRange($range=NULL)
    {
        $sql = new sql('idpais, pais, nacionalidade', 'cm_pais', '','pais');
        $sql->SetRange($range); 
        $query = $this->Query($sql);
        return $query;
    }

	function ListAll()
    {
		return $this->ListRange();
    }

    function CountWhere($where='')
    {
        $sql = new sql('*','cm_pais',$where);
        return $this->_db->Count($sql->Select());
    }

    function ListNacionalidade($range=NULL)
    {
        $sql = new sql('idpais, nacionalidade', 'cm_pais', '','pais');
        $sql->SetRange($range); 
        $query = $this->Query($sql);
        return $query;
    }    
	function listByNome($nome)
	{
		$criteria = $this->getCriteria();
		$criteria->addCriteria('pais', 'like', strtoupper("'%{$nome}%'"));
		$criteria->addOrderAttribute('pais');
		return $criteria->retrieveAsQuery();
	}
    
  function UpdatePais($idPais)
    {
        $sql = new sql('pais, nacionalidade','cm_pais',"idpais = '$idPais'");
        $args = array(
		    strtoupper($this->pais),
            $this->nacionalidade
    		
        );
        $ok = $this->Execute($sql->Update($args));
        if ($ok) {$this->Log(OP_UPD,"idpais = $idPais");} 
        return $ok;
    }
    
    function findByNome($pais)
    {
		$busca = "select count(*) as total from cm_pais where pais = '$pais'";					
		return pg_fetch_result( pg_query($busca) ,0, 'total' );
    }

}
?>
