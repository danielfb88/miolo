
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class BusinessCommonInss extends MBusiness
{
	public $idInss;
	public $dataIni;
	public $dataFim;
	public $ate;
	public $percentual;
	public $fixo;
	public $percPatronal;
   
	function __construct($data = null)
	{
		parent::__construct('sigaept', $data);
	}

    function OnCreate($data)
    {
        if (empty($data))
        {
//            $this->initialize();
        }
        else
        {
            $this->GetById($data);
        }
    }

	function GetById($id)
	{
		$this->idInss = $id;
		$this->retrieve();
		return $this;
	}
	
	function setData($data)
	{
		$this->dataIni = $data->dataIni;
		$this->dataFim = $data->dataFim;
		$this->ate = $data->ate;
		$this->percentual = $data->percentual;
		$this->fixo = $data->fixo;
		$this->percPatronal = $data->percPatronal;
	}
    
	function ListAll()
	{
		$criteria = $this->getCriteria();
		return $criteria->retrieveAsQuery();
	}
	
	
	function getTaxaByDataValor($data, $valor)
	{
		$cf = new MCurrencyFormatter();
		$inss = $this->getByData($data);
		if($cf->toDecimal($valor) < $cf->toDecimal($inss->ate))
		{
			return ($cf->toDecimal($valor) * $cf->toDecimal($inss->percentual)) / 100;
		}
		else
		{
			return $cf->toDecimal($inss->fixo);
		}
	}
	
	
	function getByData($data)
	{
		$criteria = $this->getCriteria();
		$criteria->addCriteria('dataIni', '<=', "'$data'");
		$criteria->addCriteria('dataFim', 'IS', 'NULL');
		$cursor = $criteria->retrieveAsCursor();
		return $cursor->getObject();
	}
	
	
	function existeAliquotaAberta()
	{
		$criteria = $this->getCriteria();
		$criteria->addCriteria('dataFim', 'IS', 'NULL');
		$cursor = $criteria->retrieveAsCursor();
		if($obj = $cursor->getObject())
			return $obj->idInss;
		return false;
	}
}
?>
