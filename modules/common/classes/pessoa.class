
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class BusinessCommonPessoa extends MBusiness
{
   var $idpessoa;
   var $nome;
   var $endereco;
   var $rua;
   var $numero;
   var $complemento;
   var $bairro;
   var $cep;
   var $datanasc;
   var $nomepai;
   var $nomemae;
   var $sexo;
   var $anochegbrasil;
   var $telefone;
   var $celular;
   var $email;
   var $gruposanguineo;
   var $cpf;
   var $numrg;
   var $tiporg;
   var $orgaorg;
   var $ufrg;
   var $numcartpro;
   var $seriecartpro;
   var $tituloeleitor;
   var $zonatitulo;
   var $secaotitulo;
   var $uftitulo;
   var $numdocmilitar;
   var $seriedocmilitar;
   var $categdocmilitar;
   var $conta;
   var $numcert;
   var $livrocert;
   var $folhacert;
   var $cartorio;
   var $pispasep;
   var $datapispasep;
   var $bancopispasep;
   var $identprof;
   var $tipoidentprof;
   var $idpais;
   var $idmunicipio;
   var $idmunicipionascimento;
   var $idpaisnascimento;
   var $idestadocivil;
   var $idbanco;
   var $banco;
   var $idagencia;
   var $agencia;
   var $idpaisnacionalidade;
   var $tipodocmilitar;
   var $orgexpdocmilitar;
   var $dataultalt;
   var $raca;
   var $atvremunerada;
   var $acessonet;
   var $datarg;
   var $municipio;
   var $municipioNascimento;
   var $datacartest;

    function __construct($data=null)
    {
       parent::__construct('common',$data);
    }

    function OnCreate($data)
    {
        if (!empty($data))
        {
            $this->GetById($data);
        }
    }

    function GetById($id)
    {
       $this->idpessoa = $id;
       $this->retrieve();
       return $this;
    }	   

   	function &sqlAllFields()
	{
		return new sql("idpessoa,nome,endereco,bairro,cep,datanasc,nomepai,nomemae,sexo,anochegbrasil,telefone,celular,email,gruposanguineo,cpf,numrg,tiporg,orgaorg,ufrg,numcartpro,seriecartpro,ufcartpro,tituloeleitor,zonatitulo,secaotitulo,uftitulo,numdocmilitar,seriedocmilitar,categdocmilitar,conta,numcert,livrocert,folhacert,cartorio,pispasep,datapispasep,bancopispasep,identprof,tipoidentprof,idpais,idmunicipio,idmunicipionascimento,idpaisnascimento,idestadocivil,idbanco,idagenc,idpaisnacionalidade,tipodocmilitar,orgexpdocmilitar,dataultalt,raca,atvremunerada,acessonet,datarg","cm_pessoa");
	}

	function &sqlUpdateAllFields()
	{
		return new sql("nome,endereco,bairro,cep,datanasc,nomepai,nomemae,sexo,anochegbrasil,telefone,celular,email,gruposanguineo,cpf,numrg,tiporg,orgaorg,ufrg,numcartpro,seriecartpro,ufcartpro,tituloeleitor,zonatitulo,secaotitulo,uftitulo,numdocmilitar,seriedocmilitar,categdocmilitar,conta,numcert,livrocert,folhacert,cartorio,pispasep,datapispasep,bancopispasep,identprof,tipoidentprof,idpais,idmunicipio,idmunicipionascimento,idpaisnascimento,idestadocivil,idbanco,idagenc,idpaisnacionalidade,tipodocmilitar,orgexpdocmilitar,dataultalt,raca,atvremunerada,acessonet,datarg","cm_pessoa");
	}

	function &sqlFieldsAluno()
	{
		return new sql('idpessoa,nome,rua,numero,complemento,bairro,cep,datanasc,nomepai,nomemae,sexo,telefone,celular,email,idpais,idmunicipio,idmunicipionascimento,idpaisnascimento,idestadocivil','cm_pessoa');
	}

	//tabbed1---

        function &sqlFieldsTabbedForm1()
	{
		return new sql('idpessoa,nome,cpf,nomepai,nomemae,sexo,anochegbrasil,datanasc,idmunicipionascimento,gruposanguineo,idestadocivil,idpaisnascimento,idpaisnacionalidade, cep, idpais, idmunicipio','cm_pessoa');
	}

	function &sqlUpdateFieldsTabbedForm1()
	{
		return new sql('nome,cpf,nomepai,nomemae,sexo,anochegbrasil,datanasc,idmunicipionascimento,gruposanguineo,idestadocivil,idpaisnascimento,idpaisnacionalidade','cm_pessoa');
	}

       //---

  //tabbed2---
   function &sqlFieldsTabbedForm2()
	{
	return new sql('idpessoa,numrg,tiporg,orgaorg,ufrg,numcartpro,seriecartpro,ufcartpro,tituloeleitor,zonatitulo,secaotitulo,uftitulo,numdocmilitar,seriedocmilitar,categdocmilitar,numcert,livrocert,folhacert,cartorio,pispasep,datapispasep,bancopispasep,identprof,tipoidentprof,tipodocmilitar,orgexpdocmilitar,datarg','cm_pessoa');
	}//


  function &sqlUpdateFieldsTabbedForm2()
	{
	return new sql('numrg,tiporg,orgaorg,ufrg,numcartpro,seriecartpro,ufcartpro,tituloeleitor,zonatitulo,secaotitulo,uftitulo,numdocmilitar,seriedocmilitar,categdocmilitar,numcert,livrocert,folhacert,cartorio,pispasep,datapispasep,bancopispasep,identprof,tipoidentprof,tipodocmilitar,orgexpdocmilitar,datarg','cm_pessoa');
	} 
	
	//--------
  //tabbed3
    function &sqlFieldsTabbedForm3()
	{
		return new sql('idpessoa,rua,numero,complemento,bairro,cep,telefone,celular,email,idpais,idmunicipio','cm_pessoa');
	}//

  function &sqlUpdateFieldsTabbedForm3()
	{
		return new sql('rua,numero,complemento,bairro,cep,telefone,celular,email,idpais,idmunicipio','cm_pessoa');
	}//

 //tabbed4
   function &sqlFieldsTabbedForm4()
	{
		return new sql('idpessoa,conta,idbanco,idagenc','cm_pessoa');
	}//
	  function &sqlUpdateFieldsTabbedForm4()
	{
		return new sql('conta,idbanco,idagenc','cm_pessoa');
	}//
	
   function UpdateTabbedForm4()   {

	    $sql=$this->sqlUpdateFieldsTabbedForm4(); 
	    $sql->SetWhere('idpessoa = ?');
		$args = array(
		
		$this->conta,
		$this->idbanco,
		$this->idagenc,
		$this->idpessoa
			
		);
      
	    $ok = $this->Execute($sql->Update($args));
	    return $ok;
   }


       function UpdateTabbedForm3()   {

	    $sql=$this->sqlUpdateFieldsTabbedForm3(); 
	    $sql->SetWhere('idpessoa = ?');
		$args = array(
		
		$this->rua,
		$this->numero,
		$this->complemento,
		$this->bairro,
		$this->cep,
		$this->telefone,
		$this->celular,
		$this->email,
		$this->idpais,
		$this->idmunicipio,
		$this->idpessoa
			
		);
      
	    $ok = $this->Execute($sql->Update($args));
	    return $ok;
   }


   function UpdateTabbedForm2()   {

	    $sql=$this->sqlUpdateFieldsTabbedForm2(); 
	    $sql->SetWhere('idpessoa = ?');
        $this->datarg = ":TO_DATE('". $this->datarg . "','DD/MM/YYYY')";
		$this->ufrg = trim($this->ufrg);
		$this->ufcartpro = trim($this->ufcartpro);
		$this->uftitulo = trim($this->uftitulo);
		$this->bancopispasep = trim($this->bancopispasep);
		$args = array(

		$this->numrg,
		$this->tiporg,
		$this->orgaorg,
		$this->ufrg,
		$this->numcartpro,
		$this->seriecartpro,
		$this->ufcartpro,
		$this->tituloeleitor,
		$this->zonatitulo,
		$this->secaotitulo,
		$this->uftitulo,
		$this->numdocmilitar,
        $this->seriedocmilitar,
		$this->categdocmilitar,
        $this->numcert,
        $this->livrocert,
		$this->folhacert,
		$this->cartorio,
		$this->pispasep,
		$this->datapispasep,
		$this->bancopispasep,
		$this->identprof,
		$this->tipoidentprof,
		$this->tipodocmilitar,
		$this->orgexpdocmilitar, 
		$this->datarg,
		$this->idpessoa
			
		);
      
	    $ok = $this->Execute($sql->Update($args));

	    return $ok;
   }

	  function UpdateTabbedForm1()   {

	    $sql=$this->sqlUpdateFieldsTabbedForm1(); 
	    $sql->SetWhere('idpessoa = ?');
	    $this->datanasc = ":TO_DATE('". $this->datanasc . "','DD/MM/YYYY')";
		$args = array(
			
	    $this->nome,
        $this->cpf,
        $this->nomepai,

		$this->nomemae,
		$this->sexo,
        $this->anochegbrasil,
		$this->datanasc,
        $this->idmunicipionascimento,
		$this->gruposanguineo,
		$this->idestadocivil,
		$this->idpaisnascimento,
		$this->idpaisnacionalidade,
		$this->idpessoa
		);
      
	    $ok = $this->Execute($sql->Update($args));
	    return $ok;
   }
                           
   function Insert()
   {
	   $this->idpessoa = $this->_db->GetNewId('seq_cm_pessoa');
	   $sql = $this->sqlAllFields();

       $this->datanasc = $this->_db->CharToDate($this->datanasc); 
       $this->datarg = $this->_db->CharToDate($this->datarg); 

       $args = array(
			$this->idpessoa,
			$this->nome,
            $this->endereco,
			$this->bairro,
			$this->cep,
			$this->datanasc,
		   	$this->nomepai,
			$this->nomemae,
			$this->sexo,
			$this->anochegbrasil,
			$this->telefone,
			$this->celular,
			$this->email,
			$this->gruposanguineo,
			$this->cpf,
			$this->numrg,
			$this->tiporg,
			$this->orgaorg,
			$this->ufrg,
			$this->numcartpro,
			$this->seriecartpro,
			$this->ufcartpro,
			$this->tituloeleitor,
			$this->zonatitulo,
			$this->secaotitulo,
			$this->uftitulo,
			$this->numdocmilitar,
			$this->seriedocmilitar,
			$this->categdocmilitar,
			$this->conta,
			$this->numcert,
			$this->livrocert,
			$this->folhacert,
			$this->cartorio,
			$this->pispasep,
			$this->datapispasep,
			$this->bancopispasep,
			$this->identprof,
			$this->tipoidentprof,
			$this->idpais,
			$this->idmunicipio,
			$this->idmunicipionascimento,
			$this->idpaisnascimento,
			$this->idestadocivil,
			$this->idbanco,
			$this->idagencia,
	        $this->idpaisnacionalidade,    
            $this->tipodocmilitar,
		    $this->orgexpdocmilitar,
		    $this->dataultalt,
			$this->raca,
			$this->atvremunerada,
			$this->acessonet,
			$this->datarg

		);
	    $ok = $this->ExecuteBatch($sql->Insert($args));
        return $ok;
   }
                              
         
   function Insert_TabbedForm_1()
   {
	   $this->idpessoa = $this->_db->GetNewId('seq_cm_pessoa');
	   $sql = $this->sqlFieldsTabbedForm1();

       $this->datanasc = ":TO_DATE('". $this->datanasc . "','DD/MM/YYYY')";
	    
        $args = array(
		$this->idpessoa,
	    $this->nome,
        $this->cpf,
        $this->nomepai,
		$this->nomemae,
		$this->sexo,
        $this->anochegbrasil,
		$this->datanasc,
        $this->idmunicipionascimento,
		$this->gruposanguineo,
		$this->idestadocivil,
		$this->idpaisnascimento,
		$this->idpaisnacionalidade,
		$this->cep,
		$this->idpais,
		$this->idmunicipio
		
		);
	    $ok = $this->Execute($sql->Insert($args));
        return $ok;
   }
   
   
   function Update()   {

	    $sql=$this->sqlUpdateAllFields();
	    $sql->SetWhere('idpessoa = ?');
	    $this->datanasc = ":TO_DATE('". $this->datanasc . "','DD/MM/YYYY')";
  	    $this->datarg = ":TO_DATE('". $this->datarg . "','DD/MM/YYYY')";

		$args = array(
			
			$this->nome,
			$this->endereco,
			$this->bairro,
			$this->cep,
			$this->datanasc,
			$this->nomepai,
			$this->nomemae,
			$this->sexo,
			$this->anochegbrasil,
			$this->telefone,
			$this->celular,
			$this->email,
			$this->gruposanguineo,
			$this->cpf,
			$this->numrg,
			$this->tiporg,
			$this->orgaorg,
			$this->ufrg,
			$this->numcartpro,
			$this->seriecartpro,
			$this->ufcartpro,
			$this->tituloeleitor,
			$this->zonatitulo,
			$this->secaotitulo,
			$this->uftitulo,
			$this->numdocmilitar,
			$this->seriedocmilitar,
			$this->categdocmilitar,
			$this->conta,
			$this->numcert,
			$this->livrocert,
			$this->folhacert,
			$this->cartorio,
			$this->pispasep,
			$this->datapispasep,
			$this->bancopispasep,
			$this->identprof,
			$this->tipoidentprof,
			$this->idpais,
            $this->idmunicipio,
		   	$this->idmunicipionascimento,
			$this->idpaisnascimento,
			$this->idestadocivil,
			$this->idbanco,
			$this->idagencia,
			$this->idpaisnacionalidade,
			$this->tipodocmilitar,
			$this->orgexpdocmilitar,
			$this->dataultalt,
			$this->raca,
			$this->atvremunerada,
            $this->acessonet,
			$this->datarg,
			$this->idpessoa
			
		);
      
	    $ok = $this->Execute($sql->Update($args));
	    return $ok;
   }
                           
   function Delete()   {

        $sql = new sql('','cm_pessoa', 'idpessoa = ?');
        $ok = $this->Execute( $sql->Delete($this->idpessoa) );
        if ($ok) {$this->Log(OP_DEL,"idpessoa = $this->idpessoa; nome = $this->nome ");} 
        return $ok;
   }
    
   function ListRange($range=NULL)   {

	   $sql = $this->sqlAllFields();

       $this->datanasc = ":TO_DATE('". $this->datanasc . "','DD/MM/YYYY')";
   	   $this->datarg = ":TO_DATE('". $this->datarg . "','DD/MM/YYYY')";

	   $sql->SetRange($range); 
       $query = $this->Query($sql);
       return $query;
   }
    
   function ListAll()
   {
       return $this->ListRange();
   }

   function ChangeEmail($novoEmail)
   {
        if (($this->email != $novoEmail))
        {
            $sql = new sql('email','cm_pessoa','idpessoa = ?');
            $args = array($novoEmail, $this->idpessoa);
       	    $ok = $this->Execute($sql, $args);
            return $ok; 
        }
        return true;
   }

   function ChangeTelefone($novoTelefone)
   {
        if (($this->telefone != $novoTelefone))
        {
            $sql = new sql('telefone','cm_pessoa','idpessoa = ?');
            $args = array($novoTelefone, $this->idpessoa);
       	    $ok = $this->Execute($sql, $args);
            return $ok; 
        }
        return true;
   }
   
   function ListByNome($nome)
   {
        $criteria =  $this->getCriteria();
        $criteria->addColumnAttribute('idpessoa');
        $criteria->addColumnAttribute('nome');
        $criteria->addColumnAttribute('datanasc','datanasc');
        $criteria->addColumnAttribute('nomemae');
        $criteria->addCriteria('nome','LIKE',strtoupper("'%{$nome}%'"));
	$criteria->addOrderAttribute('nome');
	
        return $criteria->retrieveAsQuery();
   }

   function ListByISRNome($nome)
   {
       $isr = $this->_db->GetISR();
       $query = $isr->retrieve('cm_pessoa','nome',$nome,'idpessoa','idpessoa,nome,sexo');
echo get_class($query);
       return $query; 
   }

   function getNew()
   {
        $this->GetById('999999'); // A definir
        $this->setPersistent(false);
        $this->idpessoa = $this->_db->GetNewId('seq_cm_pessoa');
        $this->save();
   }

    function createNew($data,$withCPF = TRUE)
    {
        if ( $withCPF )
        {
    		$data->cpf = str_replace('-','',str_replace('.','',$data->cpf));
            $pessoa = $this->getByCpf($data->cpf);
            if ( $pessoa->idpessoa )
            {
                throw new Exception("Uma pessoa com esse CPF já existe no banco de dados.");
            }
        }

        //campos que vem com $data
        $this->nome = $data->nome;
        $this->datanasc = $data->datanasc;
        $this->sexo = ($data->sexo) ? $data->sexo : 'M';
        $this->cpf = $data->cpf;

        //campos obrigatorios que receberao valores padrao
        $this->cep = '36000000';
        $this->idpais = '024' ;
        $this->idmunicipio = '4733';
        $this->idpaisnascimento = '024';
        $this->save();
    }

   function GetByCpf($cpf)
   {
        $criteria =  $this->getCriteria();        
        $criteria->addCriteria('cpf','=',"'{$cpf}'");
		$cursor = $criteria->retrieveAsCursor();
		return $cursor->getObject();
   }
   
   function GetByNomeDataNasc($nome,$dataNasc)
   {
        $k = new MKrono();
        
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('nome','=',"'".strtoupper($nome)."'");
        $criteria->addCriteria('datanasc','=',"'".$k->invertDate($dataNasc)."'");
		$cursor = $criteria->retrieveAsCursor();
		return $cursor->getObject();
   }
   
  function GetNome()
  {
    return $this->nome;
  }
  
  function ListByCPF($cpf)
  {
        $criteria =  $this->getCriteria();
        $criteria->addColumnAttribute('idpessoa');
        $criteria->addColumnAttribute('nome');
        $criteria->addCriteria('cpf','LIKE',strtoupper("'{$cpf}%'"));
        return $criteria->retrieveAsQuery();
  }

  function ListByNomeAndCPF($nome,$cpf)
  {
        $criteria =  $this->getCriteria();
        $criteria->addColumnAttribute('idpessoa');
        $criteria->addColumnAttribute('nome');
        $criteria->addCriteria('cpf','LIKE',strtoupper("'{$cpf}%'"));
        $criteria->addCriteria('nome','LIKE',strtoupper("'{$nome}%'"));
	$criteria->addOrderAttribute('nome');
        return $criteria->retrieveAsQuery();
  }   
  
  function isTerceirizado()
  {
	$id = $this->idpessoa;
	$sql = new sql('idpessoa','rh_terceirizado', 'idpessoa = '.$id);
	$ok = $this->ObjQuery($sql->Select($idpessoa));
	//$ok = $this->Execute($sql->Select($idpessoa));
	if ($ok->result){
		return TRUE;
		}
	else{
		return FALSE;
		}
  }
  
    /*Função para pesquisar pela transação, retorna numero de ocorrências do mesmo*/
    function findByCPF($cpf)
    {
		$busca = "select count(*) as total from cm_pessoa where cpf = '$cpf'";					
		return pg_fetch_result( pg_query($busca) ,0, 'total' );
    }
    
    function findByNomeCPF($nome, $cpf)
    {
    	$busca = "select count(*) as total from cm_pessoa where cpf = '$cpf' and nome = '$nome'";
    	return pg_fetch_result( pg_query($busca) ,0, 'total' );	
    }
    
    function findByNome($nome)
    {
		$busca = "select count(*) as total from cm_pessoa where nome = '$nome'";					
		return pg_fetch_result( pg_query($busca) ,0, 'total' );
    }
 
}   

?>
