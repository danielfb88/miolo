
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmTransacaoAcesso extends MForm
{
    private $acesso;
    
    function __construct($acesso)
    {
        $this->acesso = $acesso; 
          
        parent::__construct('Acesso');
        $this->EventHandler();
    }
      
    function CreateFields()
    {
        $MIOLO = MIOLO::getInstance();
        $perms = $MIOLO->getPerms();

        $grupo = $this->manager->GetBusiness('common','grupo');
        $qryGrupo = $grupo->ListAll();
          
        $fields = array(
            array(
                new MSelection('idGrupo','','Grupos',$qryGrupo->ChunkResult()),
          new MSelection('direito','','Permissões',$perms->perms)
            )
        ); 
        
        $this->SetFields($fields);		

        $buttons = array(
            new MButton('btnSalvar','Enviar')
        );

        if ( $this->acesso->isPersistent() )
        {
            $buttons[] = new MButton('btnExcluir','Excluir');
            $buttons[] = new MButton('btnNovo','Novo',$this->manager->getActionUrl('common','main:mad:transacao:main',$this->acesso->idTransacao,array('form'=>'acesso')));
        }
        
        $this->SetButtons($buttons);
        
        $this->setData();

    }

    function setData()
    {
        foreach( $this->acesso as $attrName => $attrValue )
        {
            if ( $this->$attrName && trim($attrValue) )
            {
                $this->setFieldValue($attrName,trim($attrValue));
            }
        
        }
    }
      
    function btnSalvar_click()
    {
        $data = $this->GetData();
        $this->acesso->SetData($data);
        try
        {
          $this->acesso->save();
                $go = $this->manager->getActionUrl('common','main:mad:transacao:main',$this->acesso->idTransacao,array('form'=>'acesso'));
                $this->page->redirect($go);
        }
        catch (Exception $e)
        {
          $this->AddError($e->GetMessage());
        }
    }

    function btnExcluir_click()
    {
        try
        {
          $this->acesso->delete();
                $go = $this->manager->getActionUrl('common','main:mad:transacao:main',$this->acesso->idTransacao,array('form'=>'acesso'));
                $this->page->redirect($go);
        }
        catch (Exception $e)
        {
          $this->AddError($e->GetMessage());
        }
    }
}
?>
