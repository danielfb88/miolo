
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmTransacaoNew extends MForm
{

	function __construct()
	{
		parent::__construct('Incluir Nova Transacao');
		$this->EventHandler();
	}

	function CreateFields()
	{

		$sistema = $this->manager->getBusiness('common','sistema');
		$query = $sistema->listAll();

		$fields = array(
			new MTextField('transacao','','Transação','55'),
			new MSelection('idsistema','','Sistema',$query->result),
		); 
		$this->SetFields($fields);		

		$buttons = array(
			new MButton('btnNew','Incluir Transacao')
		);

		$this->SetButtons($buttons);

		$validators = array(
			new MRequiredValidator('transacao'),
		);

		$this->SetValidators($validators);
	}

	public function btnNew_click()
	{
		if( strlen(trim(Form::GetFormValue('transacao'))) < 3 )
		{
			$this->AddError('A transação deve possuir pelo menos três caracteres.');
		}
		elseif( Form::GetFormValue('idsistema') == '' )
		{
			$this->AddError('Selecione o sistema ao qual a transação pertencerá.');
		}
		else
		{
			$data = $this->GetData();
			$transacao = $this->manager->GetBusiness('common','transacao');

			
			$transacao->transacao = $data->transacao;
			$transacao->idsistema = $data->idsistema;
			$transacao->setData($data);
			$transacao->transacao = trim($transacao->transacao);
			$trasnacao->transacao = strtoupper($trasnacao->transacao);
	        /*
	         * Pesquisa se existe transação associada ao mesmo sistema.Caso nome Transação seja o mesmo e idsistema 			 * diferente, cadastro ok.
	         */
			if($transacao->findById($transacao->transacao, $transacao->idsistema))
			{
				$this->addError('Transação já cadastrado.');
			}
			else
			{
				try
				{
					$transacao->save();
					$go = $this->manager->GetActionURL('common','main:mad:transacao:main',$transacao->idTransacao);
					$this->page->Redirect($go);
				}
				catch (Exception $e)
				{
					$this->AddError($e->GetMessage());
				}
			}/*else*/
		}
	}
}
?>
