
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?php
class frmGrupoDados extends MForm
{
    private $grupo;
    
	function __construct($grupo)
	{
        $this->grupo = $grupo; 
        
		parent::__construct('Dados Grupo');
		$this->EventHandler();
	}
    
	function CreateFields()
	{
        $sistema = $this->manager->getBusiness('common','sistema');
        $query = $sistema->listAll();

        $fields = array(
                    new MTextField('grupo','','Grupo','55'),
        ); 
        
        $fields[0]->addAttribute('maxlength', 50); //campo grupo
        $this->SetFields($fields);
        
        $buttons = array(
            new MButton('btnSalvar','Enviar')
        );
        
        $this->SetButtons($buttons);

	$validators = array(
            new MRequiredValidator('grupo'),
        );
        
        $this->SetValidators($validators);
        
        $this->setData();

	}

    function setData()
    {
        foreach( $this->grupo as $attrName => $attrValue )
        {
            if ( $this->$attrName && trim($attrValue) )
            {
                $this->setFieldValue($attrName,trim($attrValue));
            }
        
        }
    }
    
	function btnSalvar_click()
	{
		$nomeGrupo 	= $this->grupo->grupo;
		$nomeGrupoNovo 	= $this->GetData()->grupo;
		$nomeGrupoNovo 	= strtoupper($nomeGrupoNovo);
		
		//nao aceita grupo com menos de 3 caracteres
		if( strlen(trim(Form::GetFormValue('grupo'))) < 3)
		{
			$this->AddError('Detalhe melhor campo grupo.');
		}
		// Verificando se já existe grupo com o mesmo nome digitado.
		elseif($this->grupo->findByNome(strtoupper(trim(Form::GetFormValue('grupo'))))
			&& (strcmp(strtoupper($nomeGrupo), strtoupper($nomeGrupoNovo)) != 0) //so gera erro se o nome for diferente do nome no BD
		)
		{
			$this->addError('Grupo já cadastrado.');
		}
		else
		{
			$data = $this->GetData();
			$this->grupo->grupo = $data->grupo;
			try
			{
				$this->grupo->save();
		    		$this->addInfo("Grupo salvo com sucesso.");
			}
			catch (Exception $e)
			{
				$this->AddError($e->GetMessage());
			}
		}
	}
}
?>
