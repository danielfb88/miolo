
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmInstituicaoDados extends MForm
{
	protected $objInstituicao;

	function __construct($objInstituicao)
	{
		$this->objInstituicao = $objInstituicao;
		parent::__construct('Dados da Instituição');
		$this->EventHandler();
		$this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../../ui/js/mask.js'));
	}

	function CreateFields()
	{

		global $MIOLO;

		$objPais = $MIOLO->GetBusiness('common','pais');
		$queryPais = $objPais->ListAll();

		$fields = Array(
			new HiddenField('idinstituicao',''),
			new HiddenField('status',''),
			new TextField  ('instituicao','','Instituição',40),
			new TextField ('sigla','','Sigla',4,'Digite 4 caracteres para a inclusão da sigla'), 
			new TextField  ('campus','','Campus',70),   
			new TextField  ('nome','','Nome',70),
			new TextField  ('rua','','Rua',70),
			new TextField  ('numero','','Número',18),
			new TextField  ('complemento','','Complemento',18),
			new TextField  ('bairro','','Bairro',50),
			new TextField  ('cep','','CEP',10),
			new LookupTextField('lkpMunicipio','','Município',50),
			new MHiddenField('idmunicipio',''),
			new MSelection ('idpais','','País',$queryPais->result,$showValues=false),
			new TextField  ('cgc','','CNPJ',20, 'formato (10.000.000/0001-01)'),
			new TextField  ('caixapostal','','Caixa Postal',15),
			new TextField  ('telefone','','Telefone',15,'formato (dd)xxxx-xxxx'),
			new TextField  ('fax','','Fax',15,'formato (dd)xxxx-xxxx'),	
			new TextField  ('email','','e-mail',50, 'Máx. 50 caracteres'), 
			new TextField  ('uasg','','UP',8, 'Máx. 6 números'),
			new TextField  ('ug','','UG (UASG)',6, 'Máx. 6 caracteres'),
			new MSelection ('mesmoif','','Mesmo instituto?',array('S'=>'SIM', 'N'=>'NÃO'),$showValues=false,$hint='Selecione SIM se pertence à mesma instituição, caso contrário NÃO.',$size=''),
		);
		$this->SetFields($fields);

	
		$buttons = Array(
			new FormButton('btnSave', 'Salvar'),
			new FormButton('btnDisable', 'Desativar'),
			new FormButton('btnEnable', 'Ativar')
		);
		$this->SetButtons($buttons);

		$validators = array(
			new MRequiredValidator('instituicao'),
			new MRequiredValidator('sigla'),
			new MRequiredValidator('nome'),
			new MRequiredValidator('rua'),
			new MRequiredValidator('numero'),
			new MRequiredValidator('bairro'),
			new MRequiredValidator('cep'),
			new MRequiredValidator('lkpMunicipio'),
			new MCNPJValidator('cgc','','required','Informe um CNPJ Válido'),
			new MRequiredValidator('ug'),
			new EmailValidator('email'),
		);
		$this->SetValidators($validators);

		$this->setData();

		$this->instituicao->addAttribute('maxlength',80);
		$this->sigla->addAttribute('maxlength',4);
		$this->nome->addAttribute('maxlength',100);
		$this->rua->addAttribute('maxlength',80);
		$this->numero->addAttribute('maxlength',15);
		$this->complemento->addAttribute('maxlength',15);
		$this->bairro->addAttribute('maxlength',50);
		$this->cep->addAttribute('maxlength',9);
		$this->cep->addAttribute('onKeyUp','makeMask(this, \'#####-###\');');
		$this->cep->addAttribute('onBlur','makeMask(this, \'#####-###\');');
		$this->cgc->addAttribute('maxlength',18);
		$this->cgc->addAttribute('onKeyUp','makeMask(this, \'##.###.###/####-##\');');
		$this->cgc->addAttribute('onBlur','makeMask(this, \'##.###.###/####-##\');');
		$this->telefone->addAttribute('maxlength',13);
		$this->telefone->addAttribute('onKeyUp','makeMask(this, \'(##)####-####\');');
		$this->telefone->addAttribute('onBlur','makeMask(this, \'(##)####-####\');');
		$this->fax->addAttribute('maxlength',13);
		$this->fax->addAttribute('onKeyUp','makeMask(this, \'(##)####-####\');');
		$this->fax->addAttribute('onBlur','makeMask(this, \'(##)####-####\');');
		$this->caixapostal->addAttribute('maxlength',15);

		$this->telefone->addAttribute('maxlength',15);
		$this->fax->addAttribute('maxlength',15);
		$this->email->addAttribute('maxlength',50);

		$this->uasg->addAttribute('maxlength',6);
		$this->ug->addAttribute('maxlength',6);

		$this->SetFieldAttr('lkpMunicipio','module','common');
		$this->SetFieldAttr('lkpMunicipio','item','municipio');
		$this->SetFieldAttr('lkpMunicipio','event', 'filler');
		$this->SetFieldAttr('lkpMunicipio','related', 'idmunicipio,lkpMunicipio');
	}

	function setData()
	{
		global $MIOLO;

		$data = $this->objInstituicao;

		$objMun = $MIOLO->GetBusiness('common','municipio');
		$municipio = $objMun->GetById($data->idmunicipio);

		$data->cep = substr($data->cep, 0, 5)."-".substr($data->cep,-3);
		$data->cgc = substr($data->cgc, 0,2) .".". substr($data->cgc, 2,3) .".". $c=substr($data->cgc, 5,3) ."/". $d=substr($data->cgc, 8,4) ."-". substr($data->cgc, 12,2);

		$this->setFieldValue('idinstituicao',$data->idinstituicao);
		$this->setFieldValue('status',$data->status);
		$this->setFieldValue('instituicao',$data->instituicao);
		$this->setFieldValue('sigla',$data->sigla);
		$this->setFieldValue('campus',$data->campus);
		$this->setFieldValue('nome',$data->nome);
		$this->setFieldValue('rua',$data->rua);
		$this->setFieldValue('numero',$data->numero);
		$this->setFieldValue('complemento',$data->complemento);
		$this->setFieldValue('bairro',$data->bairro);
		$this->setFieldValue('cep',$data->cep);
		$this->setFieldValue('lkpMunicipio',$municipio->municipio);
		$this->setFieldValue('idmunicipio',$data->idmunicipio);
		$this->setFieldValue('idpais',$data->idpais);
		$this->setFieldValue('cgc',$data->cgc);
		$this->setFieldValue('caixapostal',$data->caixapostal);
		$this->setFieldValue('telefone',$data->telefone);
		$this->setFieldValue('fax',$data->fax);
		$this->setFieldValue('email',$data->email);
		$this->setFieldValue('uasg',$data->uasg);
		$this->setFieldValue('ug',$data->ug);
		$this->setFieldValue('mesmoif',$data->mesmoif);

		if($data->status == 'I')
			$this->SetFieldAttr('btnDisable','visible',false);
		else
			$this->SetFieldAttr('btnEnable','visible',false);
	}

	function btnDisable_click()
	{
		global $MIOLO;

		$ok = $this->objInstituicao->MudaStatus($this->objInstituicao->idinstituicao); 

		if ($ok)
			$MIOLO->Information('Instituição desativada com sucesso.',$MIOLO->GetActionURL('common','main:instituicao:find'));
		else
			$MIOLO->Error('Não foi possível desativar a instituição.',$MIOLO->GetActionURL('common','main:instituicao:find'));
	}

	function btnEnable_click()
	{
		global $MIOLO;

		$ok = $this->objInstituicao-> StatusAtiva($this->objInstituicao->idinstituicao); 

		if ($ok)
			$MIOLO->Information('Instituição ativada com sucesso.',$MIOLO->GetActionURL('common','main:instituicao:find'));
		else
			$MIOLO->Error('Não foi possível ativar a instituição.',$MIOLO->GetActionURL('common','main:instituicao:find'));
	}

	function btnSave_click()
	{

		if( strlen(trim(Form::GetFormValue('instituicao'))) < 4)
		{
			$this->AddError('Informe o campo instituição.');
		}
		elseif( strlen(trim(Form::GetFormValue('sigla'))) < 2 )
		{
			$this->AddError('Informe a sigla da Instituição, a mesma deve possuir pelo menos duas letras');
		}
		elseif( strlen(trim(Form::GetFormValue('campus'))) == 0)
		{
			$this->AddError('Informe o campo "Campus".');
		}
		elseif( strlen(trim(Form::GetFormValue('nome'))) < 3 )
		{
			$this->AddError('O nome da instituição parece estar incorreto.');
		}
		elseif( strlen(trim(Form::GetFormValue('rua'))) == 0)
		{
			$this->AddError('Informe o campo "Rua".');
		}
		elseif( strlen(trim(Form::GetFormValue('numero'))) == 0)
		{
			$this->AddError('Informe o campo "Número".');
		}
		elseif( (Form::GetFormValue('numero')!='') and preg_match("/\D/", Form::GetFormValue('numero')) )
		{
			$this->AddError('Informe um valor válido para o campo "Número".');
		}
		elseif( strlen(trim(Form::GetFormValue('bairro'))) == 0)
		{
			$this->AddError('Informe o campo "Bairro".');
		}
		elseif( (Form::GetFormValue('lkpMunicipio') == '') or (Form::GetFormValue('idmunicipio') == ''))
		{
			$this->AddError('Selecione o município.');
		}
		elseif( Form::GetFormValue('idpais') == '' )
		{
			$this->AddError('Selecione o país.');
		}
		elseif( (Form::GetFormValue('caixapostal')!='') and preg_match("/\D/", Form::GetFormValue('caixapostal')) )
		{
			$this->AddError('Informe um valor válido para o campo "Caixa Postal".');
		}
		elseif( (Form::GetFormValue('telefone')!='') and preg_match("/\D/", Form::GetFormValue('telefone')) and 
			strlen(trim(Form::GetFormValue('telefone'))) < 13 )
		{
			$this->AddError('Informe um valor válido para o campo "Telefone".');
		}
		elseif( (Form::GetFormValue('fax')!='') and preg_match("/\D/", Form::GetFormValue('fax')) and
			strlen(trim(Form::GetFormValue('fax'))) < 13 )
		{
			$this->AddError('Informe um valor válido para o campo "Fax".');
		}
		elseif( (Form::GetFormValue('uasg')!='') and preg_match("/\D/", Form::GetFormValue('uasg')) )
		{
			$this->AddError('O campo UP deve ser um número.');
		}
		elseif( strlen(trim(Form::GetFormValue('ug'))) < 2 )
		{
			$this->AddError('Informe a UG da Instituição.');
		}
		elseif( Form::GetFormValue('mesmoif') == '' )
		{
			$this->AddError('Informe o campo Mesmo instituto.');
		}		
		else
		{
			global $MIOLO, $module, $self, $action;
			
			$cgcInstituicaoAtual = $this->objInstituicao->cgc;
			$cgcInstituicaoNovo = $this->GetData()->cgc;
						
			$this->objInstituicao->SetData($this->GetData()); 

			$this->objInstituicao->status = 'A';
			$this->objInstituicao->cep = str_replace("-", "", $this->objInstituicao->cep);				
			$this->objInstituicao->cgc = str_replace(".","",  $this->objInstituicao->cgc);
			$this->objInstituicao->cgc = str_replace("/","",  $this->objInstituicao->cgc);
			$this->objInstituicao->cgc = str_replace("-","",  $this->objInstituicao->cgc);

			$value  = $this->objInstituicao->idinstituicao;

			// Verifica duplicidade no CNPJ
			if ($this->objInstituicao->cgc != null)
			{			
				$cgcInstituicaoAtual = str_replace(".","",  $cgcInstituicaoAtual);
				$cgcInstituicaoAtual = str_replace("/","",  $cgcInstituicaoAtual);
				$cgcInstituicaoAtual = str_replace("-","",  $cgcInstituicaoAtual);
				
				if($this->objInstituicao->CountByCNPJ($this->objInstituicao->cgc) 
					&& (strcmp($cgcInstituicaoAtual, $this->objInstituicao->cgc) != 0))
				{
					$this->addError('CNPJ já cadastrado.');		
				}
				else
				{
					$ok9 = $this->objInstituicao->UpdateCGC($value);
				}
			}
			if($ok9) // Continuidade da verificação de duplicidade no CNPJ
			{	
				if ($this->objInstituicao->instituicao != null)
					$ok1 = $this->objInstituicao->UpdateInst($value);
				if ($this->objInstituicao->nome != null)
					$ok2 = $this->objInstituicao->UpdateNome($value);
				if ($this->objInstituicao->rua != null)
					$ok3 = $this->objInstituicao->UpdateRua($value);
				if ($this->objInstituicao->bairro != null)
					$ok4 = $this->objInstituicao->UpdateBairro($value);
				if ($this->objInstituicao->cep != null)
					$ok5 = $this->objInstituicao->UpdateCep($value);
				if ($this->objInstituicao->telefone != null)
					$ok6 = $this->objInstituicao->UpdateFone($value);
				if ($this->objInstituicao->email != null)
					$ok7 = $this->objInstituicao->UpdateEmail($value);
				if ($this->objInstituicao->fax != null)
					$ok8 = $this->objInstituicao->UpdateFax($value);
				if ($this->objInstituicao->caixapostal != null)
					$ok10 = $this->objInstituicao->UpdateCaixaP($value);
				if ($this->objInstituicao->idpais != null)
					$ok11 = $this->objInstituicao->UpdateIdPais($value);
				if ($this->objInstituicao->idmunicipio != null)
					$ok12 = $this->objInstituicao->UpdateIdMun($value);
				if ($this->objInstituicao->numero != null)
					$ok13 = $this->objInstituicao->UpdateNum($value);
				if ($this->objInstituicao->complemento != null)
					$ok14 = $this->objInstituicao->UpdateCom($value);
				if ($this->objInstituicao->mesmoif)
	 				$ok15 = $this->objInstituicao->UpdateMsmIF($value);
				if ($this->objInstituicao->sigla != null)
					$ok16 = $this->objInstituicao->UpdateSigla($value);
				if ($this->objInstituicao->uasg != null)
					$ok17 = $this->objInstituicao->UpdateUasg($value);
				if ($this->objInstituicao->ug != null)
					$ok17 = $this->objInstituicao->UpdateUg($value);
				if ($this->objInstituicao->campus != null)
					$ok18 = $this->objInstituicao->UpdateCampus($value); 
				if ($this->objInstituicao->idinstituicao != null)
					$ok19 = $this->objInstituicao->UpdateIdInst($value);
				if ($this->objInstituicao->bairro != null)
					$ok4 = $this->objInstituicao->UpdateBairro($value);
			
				$e = $this->objInstituicao->uasg; // ?
		
				if ( $ok1 or $ok2 or $ok3 or $ok4 or $ok5 or $ok6 or $ok7 or $ok8 /*or $ok9*/ or $ok10 or $ok11 or $ok12 or $ok13 or $ok14 or $ok15 or $ok16 or $ok17 or $ok18 or $ok19)
				{
					$this->manager->information('Instituição modificada com sucesso.',$this->manager->getActionUrl('common','main:instituicao:find'));
					return true;
				}
			}
		}

	}

}
?>
