
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmAccess extends MForm
{
    function __construct($login)
    {  
	    parent::__construct('Acesso');
        $user = $this->manager->GetBusinessMAD('user');
        $user->GetByLogin($login->id);
        if ($lastaccess = $login->lastaccess)
        {
            $msgAccess = "Seu último acesso ocorreu em $lastaccess[0] às $lastaccess[1] ($lastaccess[2])";
        }

        $ui = $this->manager->getUI();
        $close = $this->manager->getActionUrl('common','logout');
        $fields = Array(
           new MText('','Bem vindo(a), ' . $user->nick),
           new MText('',$msgAccess),
		   new MText('','<b>ATEN&Ccedil;&Atilde;O</b>: N&atilde;o deixe de encerrar sua sess&atilde;o (clicando em Sair) antes de fechar a janela do seu browser.'),
       );
       $this->SetFields($fields);
      
	   /*
       Inicio de mensagens de eventuais pendências na biblioteca
       */
    /*   $emprestimo = $this->manager->getBusiness('biblioteca','emprestimo');
       $qryEmprestimo = $emprestimo->ListEmprestimosIrregularesPorUsuario($user->idUsuario);
       if ( ! $qryEmprestimo->eof() )
       {
           $msg = TRUE;          
       }
       $multa = $this->manager->getBusiness('biblioteca','multa');
       $qryMulta = $multa->ListMultasNaoPagas($user->idUsuario);
       if ( ! $qryMulta->eof() )
       {
       	   $msg = TRUE;
       }
       if ( $msg )
       {
            $this->addInfo('Caro usuário, entre em contato com a biblioteca universitária para regularizar sua situação.');
       }


		// Verifica se existem reservas atendidas

		$reserva = $this->manager->getBusiness('biblioteca','reserva');
		$reservasAtendidades = $reserva->ListReservasAtendidas($user->idUsuario);

		if ($reservasAtendidades->result)
		{
			$this->addInfo("Caro usuário, existem reservas atendidas em seu nome.");
		}
*/
       /*
       Fim das mensagens da biblioteca
       */


       $go = $this->manager->GetActionURL('common','main:main2');
       $this->AddButton(new MButton('btnMain','&nbsp;&nbsp;&nbsp;Ok&nbsp;&nbsp;&nbsp;', $go));
    }
}

?>
