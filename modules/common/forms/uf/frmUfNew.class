
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmUfNew extends MForm
{

    function __construct()
    {
        parent::__construct('Incluir Novo Uf');
        $this->eventHandler();
    }

    function createFields()
    {
		$fields = array(
            new MTextField('idUF','','Sigla', 4),
			new MTextField('UF','','Uf', 50)
        );
		
        $this->SetFields($fields);
		
		$buttons = array(
        	new MButton('btnNew', 'Incluir')
        );
		$this->SetButtons($buttons);

		$validators = array(
			new MRequiredValidator('idUF'),
			new MRequiredValidator('UF')
		);
		$this->SetValidators($validators);
    }

    function btnNew_click()
    {
        $data = $this->getData();
        $uf = $this->manager->getBusiness('common','uf');
		$uf->SetData($data);
		if($uf->isPersistent())
		{
			$this->addError('Já existe uma UF com essa sigla. Favor ecolher outra.');
			$this->setFieldValue('idUF', '');
		}        
		else
		{
			try 
	        {
	            $uf->save();
	            $this->manager->information('UF cadastrada com sucesso.',$this->manager->getActionUrl('common','main:uf:find'));
	        }
	        catch ( Exception $e )
	        {
	            $this->addError($e->getMessage());
	        }
		}
    }

 }
?>
