
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmSistemaDados extends MForm
{
    protected $objSistema;

    function __construct($objSistema)
    {
        $this->objSistema = $objSistema;
		parent::__construct('Dados do Sistema');
        $this->EventHandler();
    }

    function CreateFields()
    {
	$fields = array(
		new MHiddenField('idSistema',''),
		new MTextField('sistema','','Nome','30','Máx. 30 caracteres'),
	);
        $this->SetFields($fields);

	$this->sistema->addAttribute('maxlength',30);
		
		$buttons = array(
			new MButton('btnSalvar', 'Salvar')
		);
		$this->SetButtons($buttons);

		$validators = array(
			new MRequiredValidator('idSistema'),
			new MRequiredValidator('sistema')
		);
		$this->SetValidators($validators);
        $this->setData();

    }

    function setData()
    {
        $data = $this->objSistema;
        $this->setFieldValue('idSistema',$data->idSistema);
        $this->setFieldValue('sistema',$data->sistema);
    }
    
function btnSalvar_click()
	{
		
		if( strlen(trim(Form::GetFormValue('sistema'))) < 3 )
		{
			$this->AddError('O nome do sistema deve possuir pelo menos três caracteres.');
		}
		elseif( preg_match("/\W/", trim(Form::GetFormValue('sistema'))) )
		{
			$this->AddError('Informe um nome válido para o sistema.');
		}
		else
		{

			$nomeSistema = $this->objSistema->sistema;
			//$this->objSistema->setData($this->getData());
			$nomeSistemaNovo = $this->getData()->sistema;
			$nomeSistemaNovo = strtoupper($nomeSistemaNovo);
			$this->objSistema->sistema = trim($this->objSistema->sistema);
			
			if (($this->objSistema->findByNome($nomeSistemaNovo) > 0) 
					&& (strcmp(strtoupper($nomeSistema), strtoupper($nomeSistemaNovo)) != 0))
			{
				$this->AddError('Sistema já cadastrado.');
			}
			else
			{
				try
				{
					$this->objSistema->setData($this->getData());
					$this->objSistema->save();
					$this->manager->information('Sistema modificado com sucesso.',$this->manager->getActionUrl('common','main:sistema:find'));
				}
				catch ( Exception $e )
				{
					$this->AddError($e->getMessage());
				}
			}
		}
	}
}
?>
