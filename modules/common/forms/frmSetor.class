
<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>

<?
class frmSetor extends MForm
{
	function __construct()
    {   
        parent::__construct('Setor');
        $this->SetWidth('50%');
	    $this->EventHandler();
	}

    function CreateFields()
	{
       $tabGeral = $this->manager->GetBusiness('common','tabelageral');
       $qryTipoSetor = $tabGeral->ListByTabela('CM_TIPOSETOR');

       $tipoOrganograma = $this->manager->GetBusiness('common','tipoorganograma');
       $qryTipoOrganograma = $tipoOrganograma->ListAll();

       $hierarquia = array( 
           new MSelection('selHierarquia','','Tipo Organograma',$qryTipoOrganograma->chunkResult())
       );     


       $fields = Array(
		   new MHiddenField('key',''),
           array(
    		   new MTextField('idsetor','','IdSetor',4),
               new MText('acao','','blue'),
           ),
           array(
              new MLookupTextField('siglasetor','','Setor',15),
              new MCalendarField('dataini','','Data Inicio',10),
              new MCalendarField('datafim','','Data Fim',10),
           ),
           array(
              new MTextField('nomesetor','','Nome',50),
           ),
           array(
              new MSelection('tiposetor','','Tipo',$qryTipoSetor->ChunkResult()),
              new MTextField('fone','','Telefone',15),
              new MTextField('fax','','Fax',15),
           ),
           array(
             new MTextField('centrocusto','','Centro de Custo',20),
             new MTextField('localizacao','','Localização',15),
           ),
           array(    
             new MMultiLineField('obs','','Observação',70,4,60),
           ), 
           array(    
             new MultiTextField3('mtHierarquia',null,'',$hierarquia,150,true,'vertical2'),
           ), 
       );
	   $this->SetFields($fields);
       $this->SetFieldValue('acao','[seleção]');
	   $this->SetFieldAttr('idsetor','formMode',3);
	   $this->SetFieldAttr('siglasetor','module','common');
	   $this->SetFieldAttr('siglasetor','item','setor');
	   $this->SetFieldAttr('siglasetor','event','btnEdit:click');
       $buttons = Array(
           new MButton('btnPost', 'Enviar'),
           new MButton('btnClone', 'Clonar'),
           new MButton('btnClose', 'Fechar'),
           new MButton('btnEdit', 'Editar'),
		   new MButton('btnNew', 'Novo'),
		   new MButton('btnCancel', 'Cancelar'),
       );
	   $this->SetButtons($buttons);
       $this->SetFieldAttr('btnPost','visible',false); 
       $this->SetFieldAttr('btnClone','visible',false); 
       $this->SetFieldAttr('btnClose','visible',false); 
       $this->SetFieldAttr('btnCancel','visible',false); 
       $this->SetFieldAttr('btnEdit','visible',true); 
	}

	function SetData($data)
	{
		$this->SetFieldValue('key',         $data->key         );
		$this->SetFieldValue('idsetor',     $data->idsetor     );
		$this->SetFieldValue('siglasetor',  $data->siglasetor  );
 		$this->SetFieldValue('dataini',     $data->dataini     );
 		$this->SetFieldValue('datafim',     $data->datafim     );
		$this->SetFieldValue('nomesetor',   $data->nomesetor   );
		$this->SetFieldValue('tiposetor',   $data->tiposetor   );
		$this->SetFieldValue('fone',        $data->fone        );
		$this->SetFieldValue('fax',         $data->fax         );
       	$this->SetFieldValue('centrocusto', $data->centrocusto );
       	$this->SetFieldValue('obs',         $data->obs         );       
        $this->SetFieldValue('localizacao', $data->localizacao );
	}

	function btnPost_click($sender, $item=NULL)
	{
       global $action;

       $item = ($item != NULL ? $item : $this->GetFieldValue('idsetor'));
       $setor = $this->manager->GetBusiness('common','setor', $item);
       $setor->SetData($this->GetData());
       try
       {
           $setor->save();
           $go = $this->manager->GetActionURL('common',$action);
           $this->manager->Information('Dados cadastrados com sucesso.', $go );
       }
       catch (EMioloException $e)
       {
           $this->AddError('Erro no cadastramento/alteração das informações do setor');
       }
	}

	function btnClone_click($sender, $item=NULL)
	{
       global $action;

       $item = ($item != NULL ? $item : $this->GetFieldValue('idsetor'));
       $setor = $this->manager->GetBusiness('common','setor', $item);
       $setor->SetData($this->GetData());
       try
       {
           $setor->SetPersistent(false);
           $setor->save();
           $this->btnEdit_click(NULL,$setor->idsetor);
       }
       catch (EMioloException $e)
       {
           $this->AddError('Erro no cadastramento/alteração das informações do setor');
       }
	}

	function btnClose_click($sender, $item=NULL)
	{
       $item = ($item != NULL ? $item : $this->GetFieldValue('idsetor'));
       $setor = $this->manager->GetBusiness('common','setor', $item);
       $k = new MKrono();
       $setor->datafim = $k->KDate('%d/%m/%Y');
       try
       {
           $setor->save();
           $this->btnEdit_click(NULL,$setor->idsetor);
       }
       catch (EMioloException $e)
       {
           $this->AddError('Erro no fechamento do informações do setor');
       }
	}

	function btnEdit_click($sender, $item=NULL)
	{   
	    $action = $this->manager->GetCurrentURL();
        if (is_null($item)) $item = $this->GetFormValue('item');
        if (is_null($item)) $item = $this->GetFieldValue('idsetor');
        if ($item != NULL)
        {
            $setor = $this->manager->GetBusiness('common','setor');
 	        $this->SetData($setor->GetById($item));
		    $this->SetFieldAttr('idsetor','readonly',true);
	        $this->AddError( $setor->GetErrors() );
            $this->SetFieldAttr('btnPost','visible',true); 
            $this->SetFieldAttr('btnClone','visible',true); 
            $this->SetFieldAttr('btnClose','visible',true); 
            $this->SetFieldAttr('btnCancel','visible',true); 
            $this->SetFieldAttr('btnEdit','visible',false); 
            $this->SetFieldAttr('btnNew','visible',false); 
            $this->SetFieldValue('acao','[edição]');
        }
	}

	function btnNew_click($sender)
	{   
        $this->SetData(new FormData()); 
        $this->SetFieldAttr('idsetor','readonly',true);
        $this->SetFieldAttr('idsetor','color', 'blue');
        $this->SetFieldAttr('btnPost','visible',true); 
        $this->SetFieldAttr('btnCancel','visible',true); 
        $this->SetFieldAttr('btnClone','visible',false); 
        $this->SetFieldAttr('btnClose','visible',false); 
        $this->SetFieldAttr('btnEdit','visible',false); 
        $this->SetFieldAttr('btnNew','visible',false); 
        $this->SetFieldValue('acao','[inclusão]');
    }

	function btnCancel_click($sender)
	{   
        $this->SetData(new FormData()); 
    }
}
?>
